{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.gif","path":"images/bg.gif","modified":0,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/upyun.png","path":"images/upyun.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.png","path":"images/bg.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/links.yml","hash":"bc1f7b822c421db9799213ba610a90f0324d68ae","modified":1646817277498},{"_id":"source/about/index.md","hash":"d168dbdbf753540329dcf6817117135f9ab800dc","modified":1647443013234},{"_id":"source/_posts/the-beginning.md","hash":"51012f4275f8639e7874221ee84d90ef419f7562","modified":1647020330037},{"_id":"source/_posts/关于C语言动态分配内存.md","hash":"70305837721a34519d9021dccd6f36157a4cb26f","modified":1646922694458},{"_id":"source/_posts/【STM32学习记录】第一节-了解STM32.md","hash":"9378bca81e7defca517b7d5b7a6e6ab2def80a88","modified":1648083496899},{"_id":"source/_posts/如何搭建自己的Blog.md","hash":"5f8e217ac8fc6fb8055de47712f1b6da7daea644","modified":1647188409365},{"_id":"source/archives/index.md","hash":"47fac1f536ee8b0b0e2005fefb5f83155e1b41a2","modified":1646761638497},{"_id":"source/categories/index.md","hash":"baf0557144dcb9a7b88723bf3f7799e6a536bdeb","modified":1646740028671},{"_id":"source/tags/index.md","hash":"0d64e49f818d283b0d14d929706bf0e78e6ca097","modified":1646890843067},{"_id":"source/links/index.md","hash":"c103e14d4f52132b6cc6b8aa18aec947c353ecd4","modified":1646894564967},{"_id":"source/_posts/【STM32学习记录】第一节-了解STM32/艾米莉亚1.jpg","hash":"f4844b38ac91f542a14c09995e0708b638e03411","modified":1646738885306},{"_id":"source/_posts/如何搭建自己的Blog/bg.png","hash":"dc0e04782d904428850ad13dc23842646ce194f5","modified":1646738946620},{"_id":"themes/keep/.editorconfig","hash":"26a27140a04ad1873639b19f8240fb2bae367878","modified":1646816325479},{"_id":"themes/keep/.gitignore","hash":"9f5eebec6128f0029691c28190673d959cb0f234","modified":1646816325479},{"_id":"themes/keep/LICENSE","hash":"1eba7caf09a39110ad2f542e3ed8700d1a69c6d3","modified":1646816325480},{"_id":"themes/keep/README.md","hash":"06ef53a5daecd42cfe7d653f9331e5ea66f1f590","modified":1646816325480},{"_id":"themes/keep/.npmignore","hash":"48eee50624f0ad4ed5b37ae81e95f5e5cb4c7f7f","modified":1646816325479},{"_id":"themes/keep/README_zh-CN.md","hash":"d3bfa4f8720b73455d9e77f3e918de60daca01d7","modified":1646816325480},{"_id":"themes/keep/README_zh-TW.md","hash":"9913cf385c568a516055b27a9c944cc95263b3bc","modified":1646816325481},{"_id":"themes/keep/_config.yml","hash":"bc48b8c55e5ca453eddf0a6774d2a90a1b402b8f","modified":1647019980770},{"_id":"themes/keep/package.json","hash":"a3be00d629d52f6cadde16fea48a0f68c288da07","modified":1646816325491},{"_id":"themes/keep/.github/FUNDING.yml","hash":"04ebd5562487625d07c01767f7b68312772bf3db","modified":1646816325479},{"_id":"themes/keep/languages/en.yml","hash":"11902f5813fc994a0620580d3caecad0bd4f4bec","modified":1646816325481},{"_id":"themes/keep/languages/zh-CN.yml","hash":"f8b9da63093739b5b7a555e8d1aa0f30d38171dc","modified":1646816325481},{"_id":"themes/keep/languages/zh-TW.yml","hash":"428b304a3ad542072bb578ed312bb06794a654e1","modified":1646816325482},{"_id":"themes/keep/layout/archive-content.ejs","hash":"89e256133a128858702f3bd0a6cf8330f5a8f2f7","modified":1646816325488},{"_id":"themes/keep/layout/article-content.ejs","hash":"9597d26784b62b0060950e8af2f71322013d3828","modified":1646816325488},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1646816325488},{"_id":"themes/keep/layout/category-content.ejs","hash":"9293aba389c0664335b3308cbb343e603ff1f24f","modified":1646816325489},{"_id":"themes/keep/layout/category-list.ejs","hash":"17ea257cb28fb63c1e1650c157541d90a4f7fba5","modified":1646816325489},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1646816325489},{"_id":"themes/keep/layout/home-content.ejs","hash":"c6897b9a1f88f157bf9cb935fba43a13911871eb","modified":1646816325489},{"_id":"themes/keep/layout/index.ejs","hash":"d04b5608fc801f00e247e7355c89a8643dc76914","modified":1646816325490},{"_id":"themes/keep/layout/layout.ejs","hash":"a2d3f1ee6a79810de41d80b80c087f675f86ef84","modified":1646816325490},{"_id":"themes/keep/layout/page.ejs","hash":"ad0d0452ee61277805ac30c8d97b9bdd3d09cf89","modified":1646816325490},{"_id":"themes/keep/layout/tag-content.ejs","hash":"379fad48764e11d7962f7cec730b0a6e932ef4a3","modified":1646816325490},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1646816325490},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1646816325491},{"_id":"themes/keep/scripts/use-source-data.js","hash":"0dcab564f400e1775af8e839d9f1a219d0c003bb","modified":1646816325493},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"c51a44fd234c7bc5e265f6c0afe3b4c9ca665b0c","modified":1646816325482},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"2fec371f5b6f97cc6fc242aced9baacce93a6f86","modified":1646816325482},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"fb04ac78cfee23b5f73b8721925e9c7fc168e2aa","modified":1646816325483},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"e659c6a12c80ebf0cbe9f38a58425248702f8d2f","modified":1646816325484},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"e28d781dd6868b08e9007393495fae75c6e502aa","modified":1646816325484},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"7ef185f52364e891791472e365d2e4441f738aa3","modified":1646816325484},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"697eb90b6448d1dcecc0fc19f1033086697bb2f8","modified":1646816325485},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"bb57e24ef7005175824f19ff4cb8537ce4771590","modified":1646816325485},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"f26d28c92ca79287d45cf20da6fdb0f68815c655","modified":1646816325485},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"747cd0ac75f31c9837abcbf5e06eac5501089d96","modified":1646816325486},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"c30d3f046035b6c63ee90fc961f67cbc2d6073af","modified":1646816325485},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"adec4312027a76b5969e78a2dd245563e4e6333f","modified":1646816325486},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"4183e4991a30132010d6428c9b2c51d198d268d8","modified":1646816325486},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"44a271ffbfb3af5c715ab25777cc58ddf9f62f82","modified":1646816325487},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"791c78e36e4191f5a738964d4fba545be2649cea","modified":1646816325487},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ea08752ab79d3c61e31fae9dd49afc0feff6f36a","modified":1646816325487},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"27844ed7c138d907c25d0e198f5425fe0c0299b2","modified":1646816325488},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"3439e47a03651a3540541ba85d9ab0c9b456fc04","modified":1646816325487},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"3c1f80ec34a4db4d242b8b1c024ffa8de0ddac78","modified":1646816325488},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"c62dc757815b23c04bfd9112136d39a7deb5709a","modified":1646816325491},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"4c8fd067eaf4cce4776413abe90a9ea3f1f04bc7","modified":1646816325492},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"9b149793aac46a1d7550ca2db49e215feffe1178","modified":1646816325492},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"9099191029226a04aa7e633920dc3458fef940e7","modified":1646816325492},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"2c2236d61417d354b5cbbc907dfc9c0eb1325a7f","modified":1646816325496},{"_id":"themes/keep/source/css/style.styl","hash":"e193b9f313c20f91504e4115a07e94e93ac383f8","modified":1646816325504},{"_id":"themes/keep/source/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1646816325504},{"_id":"themes/keep/source/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1646816325504},{"_id":"themes/keep/source/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1646816325505},{"_id":"themes/keep/source/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1646816325505},{"_id":"themes/keep/source/js/back2top.js","hash":"4be3dfc5ea5d134de22dddce950204c3fc05a659","modified":1646816325505},{"_id":"themes/keep/source/js/code-copy.js","hash":"0fa4f5c6b1b4fa2dd059a3fabd975cb5236aa68e","modified":1646816325506},{"_id":"themes/keep/source/js/header-shrink.js","hash":"5a95ba1079638342689aa31ae331b0ad29423cfb","modified":1646816325506},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"3941485684abdc9170f68b536c7cab57f03d68db","modified":1646816325506},{"_id":"themes/keep/source/js/lazyload.js","hash":"9b1d7be063feff3a4268190575959a81604cef95","modified":1646816325506},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"2396af1662b0cc8bf525c7cfed2f212a752a3b20","modified":1646816325507},{"_id":"themes/keep/source/js/local-search.js","hash":"a76838dbc9b3dc683b7653d0e60c2a824316d598","modified":1646816325507},{"_id":"themes/keep/source/js/main.js","hash":"52f9e2ccb2b93399bf2480aac989c702484b8aec","modified":1646816325507},{"_id":"themes/keep/source/js/toc.js","hash":"089573f669c7eaae7b3b88a1f4b94c630983f520","modified":1646816325507},{"_id":"themes/keep/source/js/utils.js","hash":"356c23107a336b682a7101dfc856fa6e0e6cdb76","modified":1646816325507},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1646816325516},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1646816325518},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1646816325518},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1646816325518},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"3567cb1acb984e13cf7b6ac047467298cd6e98e3","modified":1646816325483},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"cff08caa0a70bf276500ccdbf2965865399d985b","modified":1646816325483},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"1c58eb3e1f0bf06758787ff91c56924210de6665","modified":1646816325484},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"5d75b54edfcfb6112ac2c50fa7f4040e3716261d","modified":1646816325483},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"db76ce10f71e0aed717c4734ef2efbdc4b860c16","modified":1646816325487},{"_id":"themes/keep/source/css/common/animated.styl","hash":"064493c99c4d1d19803fc544251f4fbc491e7a1d","modified":1646816325493},{"_id":"themes/keep/source/css/common/basic.styl","hash":"2ecd4b0d469038a0753ad2de3eb2ba8c20f809db","modified":1646816325494},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"73a96b2e7bdbaa1e98fd2a9928a05c56763d9064","modified":1646816325495},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"48acc1b0b18b5c34d758118bad135b7cea18b5a1","modified":1646816325495},{"_id":"themes/keep/source/css/common/variables.styl","hash":"db80d2ad6d99267bbc13abe7b11660cae04cc023","modified":1646816325496},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"254ca2715de67d5783adfae40723a7917b6d9f8a","modified":1646816325502},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"8f62a171debaa09d653328d0c76e170f82351a40","modified":1646816325502},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"9af1e7fbc52aad0b4a47593813961a32a1d2b5c5","modified":1646816325502},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"28ea212b14e664d08de4ce93db1e0153e48a11ed","modified":1646816325502},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"029336439c79ece32d25f8fee9dc018206fbcd1b","modified":1646816325503},{"_id":"themes/keep/source/css/layout/page.styl","hash":"c189508f4c6d807ef822af7bb9177f12e7532b94","modified":1646816325503},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"73af0b51aee119b2135dc8cd53cd3a3ad215fff6","modified":1646816325503},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1646816325507},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1646816325507},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"8b6131af54382b7959c255d58c52474564c91bf8","modified":1646816325494},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"eac367ec543527a7533490fa19b451a452684614","modified":1646816325494},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"081f08ed399c4fc6227ab15109595a211693462b","modified":1646816325495},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"e85adfdd6fd83d2529988da644df51ddffbc87f5","modified":1646816325497},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"ae286cb8c7e788a7d393774c9e9c394352e48e72","modified":1646816325497},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"8ca83a4fe1afbb15669becebcde3ed0e12ac07bb","modified":1646816325497},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"9422e7d052f9e8a81d5a9acf12af9670fe2c41bb","modified":1646816325499},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"0610a37f2eba1b6ee2ed138e3367d80be55c9d7d","modified":1646816325499},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"2bfe1bddb6224958f29e77bcb730cb7af547a5ae","modified":1646816325499},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"fb82ac6589304cf1e3ed7ff2904108641882ddbc","modified":1646816325500},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"a381afa2de855d968810c4f6680436fd31c63d55","modified":1646816325500},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"2fbe611351cdeee678626c22aa268132693936b2","modified":1646816325500},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"97768d3f95e8cf36fd3f783a5deb7e8fcaa5c67d","modified":1646816325500},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"7c642dfdd54ed60aadb2f162e25c4fc5720716b7","modified":1646816325500},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"f1cec5eb066c13f17d0acc997790404d059fbd3f","modified":1646816325501},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"c2b9474d130df3605578b77d76c604234a2b0f6f","modified":1646816325501},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"39d03031033aa3bb9d3a76fdb5056966334e9221","modified":1646816325501},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"c19d5833234c510ac1b8358cfcb7e33af29c3f6d","modified":1646816325502},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"9874482d9a8bf623abc28f8fa9c2bbfeb55067a6","modified":1646816325498},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"dbff6bc6ecb6a20068047e6f7532e1d2df627929","modified":1646816325498},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"09d223d23c8f032da4f156efebab46102b15942d","modified":1646816325498},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"8225224a5c6d688e4ecd2e5557e8b2c5c43e2cf4","modified":1646816325498},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1646816325515},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1646816325516},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1646816325528},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1646816325528},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1646816325509},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1646816325515},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1646816325517},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1646816325520},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1646816325527},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1646816325513},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1646816325525},{"_id":"themes/keep/source/images/bg.gif","hash":"007b8ea486cf6d4c010f9d00fce08825159c76fd","modified":1646891102798},{"_id":"themes/keep/source/images/bg.png","hash":"401f2aee2a579744ea75bac46d1606a7ac3c8652","modified":1646913827923},{"_id":"public/search.json","hash":"6131acf640cfbac5d7a711b411f521160b4b98d6","modified":1647020343153},{"_id":"public/about/index.html","hash":"385cbe30e98352f2bf64ae06b6754ba7576c28b6","modified":1647020343153},{"_id":"public/archives/index.html","hash":"ed4112c30d612b8f9c0efb5d446a3672ac1bb7ee","modified":1647020343153},{"_id":"public/categories/index.html","hash":"ca2e4cd04cc52614256c36864eaaf48202c50638","modified":1647020343153},{"_id":"public/tags/index.html","hash":"7f755e3103d4968ad86fad2a820ba6d48f443edf","modified":1647020343153},{"_id":"public/links/index.html","hash":"8b29914dcd1ee916d36f48ed754d4d85d16f4761","modified":1647020343153},{"_id":"public/categories/日常/index.html","hash":"ba0f6cd6a550f057edb674be23051c5eaf32659e","modified":1647020343153},{"_id":"public/categories/C语言/index.html","hash":"f4e679e01bbd5a9a9585b2944ba84bf59ee30fa6","modified":1647020343153},{"_id":"public/categories/STM32/index.html","hash":"a75992ef737451f4ab6a19475d36411760acf68c","modified":1647020343153},{"_id":"public/categories/Hexo/index.html","hash":"58db7bcf13eb34e62ec46b5891d01418b47c45c0","modified":1647020343153},{"_id":"public/archives/2022/index.html","hash":"4ff33c49bda5fc58ab48ca637871f1f7dc46aea9","modified":1647020343153},{"_id":"public/archives/2022/03/index.html","hash":"a9ccfaa4ba143b645797870ea12ab11ceab19c62","modified":1647020343153},{"_id":"public/tags/Hexo/index.html","hash":"e8d49775516d8b756339bb0620cd30fc71bb9445","modified":1647020343153},{"_id":"public/tags/Beginning/index.html","hash":"a048f8e33ed0a1fd0d3f546faa8d59145978c417","modified":1647020343153},{"_id":"public/tags/C/index.html","hash":"4b81a5b5343bb9a96ad5d20e89edcc2c5c4789b5","modified":1647020343153},{"_id":"public/tags/malloc/index.html","hash":"3ec88594c456ff6565de88f2e0a5cdaafea2bba8","modified":1647020343153},{"_id":"public/tags/动态分配/index.html","hash":"1543a4e918a65830cf110e6fe794623612537d4d","modified":1647020343153},{"_id":"public/tags/STM32/index.html","hash":"4bb85ca67a2d2d5d7fac3e711a123f1524f42e24","modified":1647020343153},{"_id":"public/tags/C8T6/index.html","hash":"28ca41683d3bf792822567c0eee6ecf6b0a6918e","modified":1647020343153},{"_id":"public/tags/芯片结构/index.html","hash":"0afd3e53a88401167b898a53e902c64e78345c44","modified":1647020343153},{"_id":"public/tags/Github/index.html","hash":"bbd1d415d48b677bb01d982aca184c39d3e2faf5","modified":1647020343153},{"_id":"public/tags/Vercel/index.html","hash":"010b9232fe5c5c63013d299d02adc8a087851ff8","modified":1647020343153},{"_id":"public/tags/Blog/index.html","hash":"0b7f9c116aea670137ebfc1f87c2ac03c294b83d","modified":1647020343153},{"_id":"public/2022/03/10/如何搭建自己的Blog/index.html","hash":"c0f9f099531abbf281519f9c17f9453439be1010","modified":1647020343153},{"_id":"public/2022/03/10/【STM32学习记录】第一节-了解STM32/index.html","hash":"5b16aaff793cb2647c067d5add50a37dabbdf511","modified":1647020343153},{"_id":"public/2022/03/10/关于C语言动态分配内存/index.html","hash":"61a985a88b460148e778ebe3461bb813ff43317a","modified":1647020343153},{"_id":"public/2022/03/08/the-beginning/index.html","hash":"7f1e9ec40d3e7b062e7a943ad60eb5f184251801","modified":1647020343153},{"_id":"public/index.html","hash":"ccce1fbfb2767cd4b5d52ea71371ec1913418f43","modified":1647020343153},{"_id":"public/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1647020343153},{"_id":"public/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1647020343153},{"_id":"public/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1647020343153},{"_id":"public/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1647020343153},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1647020343153},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1647020343153},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1647020343153},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1647020343153},{"_id":"public/2022/03/10/【STM32学习记录】第一节-了解STM32/艾米莉亚1.jpg","hash":"f4844b38ac91f542a14c09995e0708b638e03411","modified":1647020343153},{"_id":"public/2022/03/10/如何搭建自己的Blog/bg.png","hash":"dc0e04782d904428850ad13dc23842646ce194f5","modified":1647020343153},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1647020343153},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1647020343153},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1647020343153},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1647020343153},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1647020343153},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1647020343153},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1647020343153},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1647020343153},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1647020343153},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1647020343153},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1647020343153},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1647020343153},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1647020343153},{"_id":"public/css/common/animated.css","hash":"654c7588d80dc8b481a203e3071b3cedd41c7fde","modified":1647020343153},{"_id":"public/js/utils.js","hash":"a2413711ebf7ffc96eafec2ef45a5d243d3ccdb6","modified":1647020343153},{"_id":"public/css/common/basic.css","hash":"37653cf7142778310af0eddb0d4883de08cd5f18","modified":1647020343153},{"_id":"public/css/common/markdown.css","hash":"8c9fb9f7fb403e76a4446a7e533ebe36dd702483","modified":1647020343153},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1647020343153},{"_id":"public/css/common/variables.css","hash":"157311f7b38a76721f2b6a2a9bd5229fac60df41","modified":1647020343153},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1647020343153},{"_id":"public/css/layout/article-content.css","hash":"032fd87dc40e0252a5ab59a12adc420371bd13bf","modified":1647020343153},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1647020343153},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1647020343153},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1647020343153},{"_id":"public/css/layout/page.css","hash":"c9d5a1244b1a393ebf63412cf9ffef43ca48d64e","modified":1647020343153},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1647020343153},{"_id":"public/css/common/codeblock/code-theme.css","hash":"0edc6d498dc0abbaadb152b48e9e7bebb6fd15f4","modified":1647020343153},{"_id":"public/css/common/codeblock/copy-code.css","hash":"fa5f022395fe92b6daea063418a32f8c19be6168","modified":1647020343153},{"_id":"public/css/common/codeblock/highlight.css","hash":"a6584196f859d00cdd962f43c809e44ed89319e4","modified":1647020343153},{"_id":"public/css/style.css","hash":"bb142fa241cbea39836b62c0095182d3b41c7485","modified":1647020343153},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1647020343153},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1647020343153},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1647020343153},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1647020343153},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1647020343153},{"_id":"public/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1647020343153},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1647020343153},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1647020343153},{"_id":"public/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1647020343153},{"_id":"public/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1647020343153},{"_id":"public/images/bg.gif","hash":"007b8ea486cf6d4c010f9d00fce08825159c76fd","modified":1647020343153},{"_id":"public/images/bg.png","hash":"401f2aee2a579744ea75bac46d1606a7ac3c8652","modified":1647020343153},{"_id":"source/_posts/如何在网页中居中字体.md","hash":"36d457463c6d1cb83a97bbc81dcdda4cf3e3ea90","modified":1647338905897},{"_id":"source/_posts/如何在网页中居中字体/1647186763935.png","hash":"b1fd610b36ffa40b66fa92b706c36772a0cbbfe6","modified":1647186763983},{"_id":"source/_posts/如何在网页中居中字体/1647186709290.png","hash":"746ef968889e3037fbcc767e0620f438faa3d96f","modified":1647186709339},{"_id":"source/_posts/如何在网页中居中字体/672053379f3d2bd8.png","hash":"cde4d5329d6036a116b83929a8aa2e4111c37419","modified":1647187157349},{"_id":"source/_posts/如何在网页中居中字体/emt.jpg","hash":"ae8941181e87663f46bace05af3ed1f2088fdf04","modified":1646738856195},{"_id":"source/_posts/利用Multisim完成李萨如图形仿真.md","hash":"0f72d58ad50477fa27ebcf1d6b6b95b069cd9eb4","modified":1647480058602},{"_id":"source/_posts/利用Multisim完成李萨如图形仿真/emt.png","hash":"97d1840f01529098ae8ff03fb1515e22a0525edd","modified":1646739023482},{"_id":"source/_posts/【STM32学习记录】第二节-寄存器.md","hash":"2b7b577083e21e694e24f9ed21c8b658ec04fc26","modified":1648084891310},{"_id":"source/_posts/【STM32学习记录】第二节-寄存器/EMT.png","hash":"902aaafb07eec941b18d0e24280893c31ac9dee1","modified":1646739015721}],"Category":[{"name":"日常","_id":"cl0mpdynu000490v9h3ob2wc8"},{"name":"C语言","_id":"cl0mpdyo1000b90v9a1dlavft"},{"name":"STM32","_id":"cl0mpdyo3000e90v94fog15av"},{"name":"Hexo","_id":"cl0mpdyo4000j90v9cpu10rew"},{"name":"Markdown","_id":"cl0pgvhmo000124v918wa54b5"},{"name":"Multisim","_id":"cl0tsiyri0001cov93ajx8nsl"}],"Data":[{"_id":"links","data":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}],"Page":[{"title":"about","date":"2022-03-08T11:45:10.000Z","_content":"\n# About me\n\n凉凉不冷 的名字由来，是因为原名取 凉歌 后来发烧的时候温度上去了，\n\n于是就改了（就这么随意...）。\n\n凉歌 的名字由来是以前朋友们这么称呼的，\n\n本人也挺喜欢音乐，平时说不定也会唱唱歌\n\n+\t啥也不会，被迫学习技术（）\n+\t从零开始🙏\n+\t还在学习各种神奇但很基础的东西（我目前也许只会C语言？）\n+\tOld  网瘾少年 (/ω＼\\*)……… (/ω•＼\\*)\n+\t周末闲暇时会 Play Guitar🎸\n\n# Contact me\n+\tBilibili：[<u>@小可爱凉歌吖</u>](https://space.bilibili.com/45024635)\n+\t邮箱：LiangGe233@outlook.com\n+\tBlog：https://www.liliaw.com/\n\n\n\n# Have no projects yet\n\n>   本**Blog**中所有的文章参考网站或者文献等，默认写在文章末尾。","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-03-08 19:45:10\n  \n---\n\n# About me\n\n凉凉不冷 的名字由来，是因为原名取 凉歌 后来发烧的时候温度上去了，\n\n于是就改了（就这么随意...）。\n\n凉歌 的名字由来是以前朋友们这么称呼的，\n\n本人也挺喜欢音乐，平时说不定也会唱唱歌\n\n+\t啥也不会，被迫学习技术（）\n+\t从零开始🙏\n+\t还在学习各种神奇但很基础的东西（我目前也许只会C语言？）\n+\tOld  网瘾少年 (/ω＼\\*)……… (/ω•＼\\*)\n+\t周末闲暇时会 Play Guitar🎸\n\n# Contact me\n+\tBilibili：[<u>@小可爱凉歌吖</u>](https://space.bilibili.com/45024635)\n+\t邮箱：LiangGe233@outlook.com\n+\tBlog：https://www.liliaw.com/\n\n\n\n# Have no projects yet\n\n>   本**Blog**中所有的文章参考网站或者文献等，默认写在文章末尾。","updated":"2022-03-16T15:03:33.234Z","path":"about/index.html","_id":"cl0mpdynj000090v9fbow05q4","comments":1,"layout":"page","content":"<h1 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h1><p>凉凉不冷 的名字由来，是因为原名取 凉歌 后来发烧的时候温度上去了，</p>\n<p>于是就改了（就这么随意…）。</p>\n<p>凉歌 的名字由来是以前朋友们这么称呼的，</p>\n<p>本人也挺喜欢音乐，平时说不定也会唱唱歌</p>\n<ul>\n<li>   啥也不会，被迫学习技术（）</li>\n<li>   从零开始🙏</li>\n<li>   还在学习各种神奇但很基础的东西（我目前也许只会C语言？）</li>\n<li>   Old  网瘾少年 (/ω＼*)……… (/ω•＼*)</li>\n<li>   周末闲暇时会 Play Guitar🎸</li>\n</ul>\n<h1 id=\"Contact-me\"><a href=\"#Contact-me\" class=\"headerlink\" title=\"Contact me\"></a>Contact me</h1><ul>\n<li>   Bilibili：<a href=\"https://space.bilibili.com/45024635\"><u>@小可爱凉歌吖</u></a></li>\n<li>   邮箱：<a class=\"link\"   href=\"mailto:&#76;&#x69;&#97;&#110;&#x67;&#71;&#x65;&#x32;&#x33;&#51;&#x40;&#x6f;&#x75;&#x74;&#108;&#111;&#x6f;&#107;&#x2e;&#x63;&#111;&#x6d;\" >&#76;&#x69;&#97;&#110;&#x67;&#71;&#x65;&#x32;&#x33;&#51;&#x40;&#x6f;&#x75;&#x74;&#108;&#111;&#x6f;&#107;&#x2e;&#x63;&#111;&#x6d;<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>   Blog：<a class=\"link\"   href=\"https://www.liliaw.com/\" >https://www.liliaw.com/<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h1 id=\"Have-no-projects-yet\"><a href=\"#Have-no-projects-yet\" class=\"headerlink\" title=\"Have no projects yet\"></a>Have no projects yet</h1><blockquote>\n<p>  本<strong>Blog</strong>中所有的文章参考网站或者文献等，默认写在文章末尾。</p>\n</blockquote>\n","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<h1 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h1><p>凉凉不冷 的名字由来，是因为原名取 凉歌 后来发烧的时候温度上去了，</p>\n<p>于是就改了（就这么随意…）。</p>\n<p>凉歌 的名字由来是以前朋友们这么称呼的，</p>\n<p>本人也挺喜欢音乐，平时说不定也会唱唱歌</p>\n<ul>\n<li>   啥也不会，被迫学习技术（）</li>\n<li>   从零开始🙏</li>\n<li>   还在学习各种神奇但很基础的东西（我目前也许只会C语言？）</li>\n<li>   Old  网瘾少年 (/ω＼*)……… (/ω•＼*)</li>\n<li>   周末闲暇时会 Play Guitar🎸</li>\n</ul>\n<h1 id=\"Contact-me\"><a href=\"#Contact-me\" class=\"headerlink\" title=\"Contact me\"></a>Contact me</h1><ul>\n<li>   Bilibili：<a href=\"https://space.bilibili.com/45024635\"><u>@小可爱凉歌吖</u></a></li>\n<li>   邮箱：<a class=\"link\"   href=\"mailto:&#76;&#x69;&#97;&#110;&#x67;&#71;&#x65;&#x32;&#x33;&#51;&#x40;&#x6f;&#x75;&#x74;&#108;&#111;&#x6f;&#107;&#x2e;&#x63;&#111;&#x6d;\" >&#76;&#x69;&#97;&#110;&#x67;&#71;&#x65;&#x32;&#x33;&#51;&#x40;&#x6f;&#x75;&#x74;&#108;&#111;&#x6f;&#107;&#x2e;&#x63;&#111;&#x6d;<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>   Blog：<a class=\"link\"   href=\"https://www.liliaw.com/\" >https://www.liliaw.com/<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h1 id=\"Have-no-projects-yet\"><a href=\"#Have-no-projects-yet\" class=\"headerlink\" title=\"Have no projects yet\"></a>Have no projects yet</h1><blockquote>\n<p>  本<strong>Blog</strong>中所有的文章参考网站或者文献等，默认写在文章末尾。</p>\n</blockquote>\n"},{"title":"[object Object]","date":"2022-03-08T17:47:18.497Z","_content":"","source":"archives/index.md","raw":"---\ntitle:\n  '[object Object]': null\ndate:\n  '[object Object]': null\n---\n","updated":"2022-03-08T17:47:18.497Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cl0mpdynq000290v99jmi9n08","content":"","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":""},{"title":"categories","date":"2022-03-08T11:45:10.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-03-08 19:45:10\n---\n","updated":"2022-03-08T11:47:08.671Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl0mpdynw000690v9ecxxh0yg","content":"","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":""},{"title":"tags","date":"2022-03-08T11:45:10.000Z","_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-03-08 19:45:10\n---\n\n","updated":"2022-03-10T05:40:43.067Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl0mpdynz000890v940jhhz8l","content":"","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":""},{"title":"links","date":"2022-03-08T11:45:10.000Z","comment":true,"_content":"\n","source":"links/index.md","raw":"---\ntitle: links\ndate: 2022-03-08 19:45:10\ncomment: true\n---\n\n","updated":"2022-03-10T06:42:44.967Z","path":"links/index.html","comments":1,"layout":"page","_id":"cl0mpdyo0000a90v9azppc5et","content":"","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":""}],"Post":[{"title":"The-Beginning","mathjax":true,"date":"2022-03-08T06:22:22.000Z","comment":true,"_content":"\n>   至于为什么会突然想到 **Start a Blog**，\n>\n>   是想要记录一下自己的日常以及成长历程（也许算是成长...？），\n>\n>   也是想把自己的问题，或者学习历程记录下来，\n>\n>   省得遇到同样问题却想不起来，再去问别人的或查找的同时，\n>\n>   也能让其他人也能从中看到一些东西（也许）。\n\n>   还有的原因是看到了域名突然就想买一个来玩....\n>\n>   冲动是学习的第一动力（错乱）\n\n------------------------------\n\n不知道写什么了（突然），那就祝大家新年快乐吧（？），想好了再改。\n\n主页的深色调模式和背景匹配起来还是有点BUG啊啊啊啊啊啊\n\n![](https://s3.bmp.ovh/imgs/2022/03/6cc9cc3d44da4958.png)","source":"_posts/the-beginning.md","raw":"---\ntitle: The-Beginning\nmathjax: true\ndate: 2022-03-08 14:22:22\ntags: [Hexo,Beginning]\ncategories: 日常\ncomment: true\n---\n\n>   至于为什么会突然想到 **Start a Blog**，\n>\n>   是想要记录一下自己的日常以及成长历程（也许算是成长...？），\n>\n>   也是想把自己的问题，或者学习历程记录下来，\n>\n>   省得遇到同样问题却想不起来，再去问别人的或查找的同时，\n>\n>   也能让其他人也能从中看到一些东西（也许）。\n\n>   还有的原因是看到了域名突然就想买一个来玩....\n>\n>   冲动是学习的第一动力（错乱）\n\n------------------------------\n\n不知道写什么了（突然），那就祝大家新年快乐吧（？），想好了再改。\n\n主页的深色调模式和背景匹配起来还是有点BUG啊啊啊啊啊啊\n\n![](https://s3.bmp.ovh/imgs/2022/03/6cc9cc3d44da4958.png)","slug":"the-beginning","published":1,"updated":"2022-03-11T17:38:50.037Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0mpdynm000190v92j6e4osn","content":"<blockquote>\n<p>  至于为什么会突然想到 <strong>Start a Blog</strong>，</p>\n<p>  是想要记录一下自己的日常以及成长历程（也许算是成长…？），</p>\n<p>  也是想把自己的问题，或者学习历程记录下来，</p>\n<p>  省得遇到同样问题却想不起来，再去问别人的或查找的同时，</p>\n<p>  也能让其他人也能从中看到一些东西（也许）。</p>\n</blockquote>\n<blockquote>\n<p>  还有的原因是看到了域名突然就想买一个来玩….</p>\n<p>  冲动是学习的第一动力（错乱）</p>\n</blockquote>\n<hr>\n<p>不知道写什么了（突然），那就祝大家新年快乐吧（？），想好了再改。</p>\n<p>主页的深色调模式和背景匹配起来还是有点BUG啊啊啊啊啊啊</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/6cc9cc3d44da4958.png\"></p>\n","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p>  至于为什么会突然想到 <strong>Start a Blog</strong>，</p>\n<p>  是想要记录一下自己的日常以及成长历程（也许算是成长…？），</p>\n<p>  也是想把自己的问题，或者学习历程记录下来，</p>\n<p>  省得遇到同样问题却想不起来，再去问别人的或查找的同时，</p>\n<p>  也能让其他人也能从中看到一些东西（也许）。</p>\n</blockquote>\n<blockquote>\n<p>  还有的原因是看到了域名突然就想买一个来玩….</p>\n<p>  冲动是学习的第一动力（错乱）</p>\n</blockquote>\n<hr>\n<p>不知道写什么了（突然），那就祝大家新年快乐吧（？），想好了再改。</p>\n<p>主页的深色调模式和背景匹配起来还是有点BUG啊啊啊啊啊啊</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/6cc9cc3d44da4958.png\"></p>\n"},{"title":"关于C语言动态分配内存","mathjax":true,"date":"2022-03-10T12:36:49.000Z","comment":true,"_content":"## 传统数组的缺点\n\n1.  数组长度必须事先指定，只能是常量，不能是变量；\n2.  长度不能再函数运行的过程中动态地扩充或缩小；\n3.  数组所占内存空间程序员无法手动编程释放；\n\n即静态内存问题\n\n## malloc函数的使用\n\nmalloc 为一个系统函数，它是 memory allocate 的缩写。\n\n其中 memory 是 内存 的意思，\n\nallocate 是 分配 的意思，\n\n即 分配内存 。\n\n```c\n# include <stdlib.h>\nvoid *malloc(unsigned long size);\n```\n\nmalloc 函数只有一个形参，并且是整型。该函数的功能是在内存的动态储存空间即堆中分配一个长度为 size 的连续空间。\n\n函数的返回值是一个指向所分配内存空间起始地址的指针，类型为 void* 型。\n\nmalloc 函数的返回值是一个地址，这个地址就是动态分配的内存空间的起始地址。如果此函数未能成功地执行，\n\n如内存空间不足，则返回空指针 NULL 。\n\n静态变量（关键字为 static）与全局变量一样，都是在 “静态存储区” 中分配的。此区域在程序编译时就已经分配好了，且在程序的整个运行期间都存在；\n\n而静态内存是栈中分配的，比如及局部变量。\n\n**使用方法**\n\n```c\nint *p = (int *)malloc(4);\n```\n\n请求系统分配4字节的内存空间，并返回第一字节的地址，然后赋值给指针变量p。当用malloc分配动态内存之后，上面这个指针变量p就被初始化了。\n\n由于malloc返回值类型为 void* 型，所以需要进行<u>类型强制转换</u>，==C语言中，void* 型可以不经转换（系统自动转换）地直接赋给任何类型的指针变量（函数指针变量除外）==。\n\n## void和void*\n\nvoid* 是定义一个无类型的指针变量，它可以指向任何类型的数据。\n\n任何类型的指针变量都可以直接赋给 void* 型的指针变量，无需进行强制类型转换。\n\n不能对 void* 型的指针变量进行运算操作，\n\n原因是，int* 型的指针变量加 1 就是移动 4 个单元，因为 int* 型的指针变量是 int 型数据；但是 void* 型可以指向任何数据类型的数据，所以无法知道 “1” 所表示的是几个内存单元。\n\n>   int *p = (int *)malloc(4);\n\n如上使用方法中，指针变量 p 是静态分配的。\n\n动态分配的内存空间都有一个标志，即都是用一个系统的动态分配函数实现的。\n\n而指针变量 p 使用传统的方式定义的，所以是静态分配的内存空间。\n\n而 p 所指向的内存是动态分配的。\n\n\n\n一个简单的木马程序：内存泄漏\n\n```c\n# include <stdio.h>\n# include <stdlib.h>  //malloc()的头文件\nint main(void)\n{\n    while (1)\n    {\n        int *p = malloc(1000);   \n    }\n    return 0;\n}\n```\n\n当内存全部使用完成后，会启动虚拟内存，\n\n即把硬盘里的一块区域当成内存来使用，\n\n当虚拟内存都用完了，整个系统就死机了。\n\n若为*int*类型时，为增强程序的可移植性，应当如下写法\n\n```c\nint *p = malloc(sizeof(int));\n```\n\nsizeof 的后面可以紧跟类型，也可以直接跟变量名。如果是变量名，那么就表示该变量在内存中所占的字节数。所以 \\*p 是 int 型的，那么 sizeof*p 就表示 int 型变量在内存中所占的字节数。\n\n```c\nint *p = malloc(sizeof*p);\n```\n\n## free函数的使用\n\n```c\n# include <stdlib.h>\nvoid free(void *p);\n```\n\nfree 函数无返回值，它的功能是释放指针变量 p 所指向的内存单元。\n\n此时 p 所指向的那块内存单元将会被释放病患给操作系统，不再归它使用。\n\n操作系统可以重新将它分配给其他变量使用。\n\n释放并不是指清空内存空间，而是指将该内存空间标记为“可用状态”，使操作系统在分配内存时可以将它重新分配给其他变量使用。\n\n指针变量 p 被释放后，任然指向那块内存空间，只是那块内存空间已不属于它。\n\n为避免造成错误，在指针变量被释放后，要立刻把它的指向改为 NULL 。\n\n## 总结\n\nmalloc与ffree一定要成对存在，一一对应。\n\n静态内存是不能用free释放的。\n\n\n\n## 例. 使用malloc创建动态数组\n\n```c\na = (double *) malloc(n * sizeof(double));\t\t\n```\n\n我们用malloc()创建一个数组。除了用malloc()在程序运行时请求一块内存，还需要一个指针记录这块内存的位置。\n\n\n\n```c\ndouble * a;\na = (double *) malloc(30 * sizeof(double));\n```\n\nmalloc()和free()配套使用\nfree()将内存归还内存池\nmalloc()和free()的原型都在stdlib.h头文件中\n使用malloc()，程序可以在运行时才确定数组大小。如下：\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\t\t\t// 为malloc(), free()提供原型\n\nint main(void)\n{\n\tdouble * a;\n\tint max;\n\tint number;\n\tint i = 0;\n\tprintf(\"What is the maximum number of type double entries?\\n\");\n\tif(scanf(\"%d\", &max) != 1)\n\t{\n\t\tprintf(\"Number not correctly entered -- bye.\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\ta = (double *) malloc(max * sizeof(double));\n\tif(a == NULL)\n\t{\n\t\tprintf(\"Memory allocation failed. Goodbye.\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\t// a 现在指向有max个元素的数组\n\tprintf(\"Enter the values (q to quit):\\n\");\n\twhile(i < max && scanf(\"%lf\", &a[i]) == 1)\n\t\t++i;\n\tprintf(\"Here are your %d entries:\\n\", number = i);\n\tfor(i = 0; i < number; i++)\n\t{\n\t\tprintf(\"%7.2f \", a[i]);\n\t\tif(i % 7 == 6)\n\t\t\tprintf(\"\\n\");\n\t}\n\tif(i % 7 != 0)\n\t\tprintf(\"\\n\");\n\tprintf(\"Done.\\n\");\n\tfree(a);\n\n\treturn 0;\n}\n\n```\n\n\n\n\n\n\n\n参考网站：\n\n[C语言 用malloc()创建动态数组](https://blog.csdn.net/weixin_43760909/article/details/87936133)\n\n[动态内存分配，C语言动态内存分配详解 ](http://c.biancheng.net/view/223.html)","source":"_posts/关于C语言动态分配内存.md","raw":"---\ntitle: 关于C语言动态分配内存\nmathjax: true\ndate: 2022-03-10 20:36:49\ntags: [C,malloc,动态分配]\ncategories: C语言\ncomment: true\n---\n## 传统数组的缺点\n\n1.  数组长度必须事先指定，只能是常量，不能是变量；\n2.  长度不能再函数运行的过程中动态地扩充或缩小；\n3.  数组所占内存空间程序员无法手动编程释放；\n\n即静态内存问题\n\n## malloc函数的使用\n\nmalloc 为一个系统函数，它是 memory allocate 的缩写。\n\n其中 memory 是 内存 的意思，\n\nallocate 是 分配 的意思，\n\n即 分配内存 。\n\n```c\n# include <stdlib.h>\nvoid *malloc(unsigned long size);\n```\n\nmalloc 函数只有一个形参，并且是整型。该函数的功能是在内存的动态储存空间即堆中分配一个长度为 size 的连续空间。\n\n函数的返回值是一个指向所分配内存空间起始地址的指针，类型为 void* 型。\n\nmalloc 函数的返回值是一个地址，这个地址就是动态分配的内存空间的起始地址。如果此函数未能成功地执行，\n\n如内存空间不足，则返回空指针 NULL 。\n\n静态变量（关键字为 static）与全局变量一样，都是在 “静态存储区” 中分配的。此区域在程序编译时就已经分配好了，且在程序的整个运行期间都存在；\n\n而静态内存是栈中分配的，比如及局部变量。\n\n**使用方法**\n\n```c\nint *p = (int *)malloc(4);\n```\n\n请求系统分配4字节的内存空间，并返回第一字节的地址，然后赋值给指针变量p。当用malloc分配动态内存之后，上面这个指针变量p就被初始化了。\n\n由于malloc返回值类型为 void* 型，所以需要进行<u>类型强制转换</u>，==C语言中，void* 型可以不经转换（系统自动转换）地直接赋给任何类型的指针变量（函数指针变量除外）==。\n\n## void和void*\n\nvoid* 是定义一个无类型的指针变量，它可以指向任何类型的数据。\n\n任何类型的指针变量都可以直接赋给 void* 型的指针变量，无需进行强制类型转换。\n\n不能对 void* 型的指针变量进行运算操作，\n\n原因是，int* 型的指针变量加 1 就是移动 4 个单元，因为 int* 型的指针变量是 int 型数据；但是 void* 型可以指向任何数据类型的数据，所以无法知道 “1” 所表示的是几个内存单元。\n\n>   int *p = (int *)malloc(4);\n\n如上使用方法中，指针变量 p 是静态分配的。\n\n动态分配的内存空间都有一个标志，即都是用一个系统的动态分配函数实现的。\n\n而指针变量 p 使用传统的方式定义的，所以是静态分配的内存空间。\n\n而 p 所指向的内存是动态分配的。\n\n\n\n一个简单的木马程序：内存泄漏\n\n```c\n# include <stdio.h>\n# include <stdlib.h>  //malloc()的头文件\nint main(void)\n{\n    while (1)\n    {\n        int *p = malloc(1000);   \n    }\n    return 0;\n}\n```\n\n当内存全部使用完成后，会启动虚拟内存，\n\n即把硬盘里的一块区域当成内存来使用，\n\n当虚拟内存都用完了，整个系统就死机了。\n\n若为*int*类型时，为增强程序的可移植性，应当如下写法\n\n```c\nint *p = malloc(sizeof(int));\n```\n\nsizeof 的后面可以紧跟类型，也可以直接跟变量名。如果是变量名，那么就表示该变量在内存中所占的字节数。所以 \\*p 是 int 型的，那么 sizeof*p 就表示 int 型变量在内存中所占的字节数。\n\n```c\nint *p = malloc(sizeof*p);\n```\n\n## free函数的使用\n\n```c\n# include <stdlib.h>\nvoid free(void *p);\n```\n\nfree 函数无返回值，它的功能是释放指针变量 p 所指向的内存单元。\n\n此时 p 所指向的那块内存单元将会被释放病患给操作系统，不再归它使用。\n\n操作系统可以重新将它分配给其他变量使用。\n\n释放并不是指清空内存空间，而是指将该内存空间标记为“可用状态”，使操作系统在分配内存时可以将它重新分配给其他变量使用。\n\n指针变量 p 被释放后，任然指向那块内存空间，只是那块内存空间已不属于它。\n\n为避免造成错误，在指针变量被释放后，要立刻把它的指向改为 NULL 。\n\n## 总结\n\nmalloc与ffree一定要成对存在，一一对应。\n\n静态内存是不能用free释放的。\n\n\n\n## 例. 使用malloc创建动态数组\n\n```c\na = (double *) malloc(n * sizeof(double));\t\t\n```\n\n我们用malloc()创建一个数组。除了用malloc()在程序运行时请求一块内存，还需要一个指针记录这块内存的位置。\n\n\n\n```c\ndouble * a;\na = (double *) malloc(30 * sizeof(double));\n```\n\nmalloc()和free()配套使用\nfree()将内存归还内存池\nmalloc()和free()的原型都在stdlib.h头文件中\n使用malloc()，程序可以在运行时才确定数组大小。如下：\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\t\t\t// 为malloc(), free()提供原型\n\nint main(void)\n{\n\tdouble * a;\n\tint max;\n\tint number;\n\tint i = 0;\n\tprintf(\"What is the maximum number of type double entries?\\n\");\n\tif(scanf(\"%d\", &max) != 1)\n\t{\n\t\tprintf(\"Number not correctly entered -- bye.\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\ta = (double *) malloc(max * sizeof(double));\n\tif(a == NULL)\n\t{\n\t\tprintf(\"Memory allocation failed. Goodbye.\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\t// a 现在指向有max个元素的数组\n\tprintf(\"Enter the values (q to quit):\\n\");\n\twhile(i < max && scanf(\"%lf\", &a[i]) == 1)\n\t\t++i;\n\tprintf(\"Here are your %d entries:\\n\", number = i);\n\tfor(i = 0; i < number; i++)\n\t{\n\t\tprintf(\"%7.2f \", a[i]);\n\t\tif(i % 7 == 6)\n\t\t\tprintf(\"\\n\");\n\t}\n\tif(i % 7 != 0)\n\t\tprintf(\"\\n\");\n\tprintf(\"Done.\\n\");\n\tfree(a);\n\n\treturn 0;\n}\n\n```\n\n\n\n\n\n\n\n参考网站：\n\n[C语言 用malloc()创建动态数组](https://blog.csdn.net/weixin_43760909/article/details/87936133)\n\n[动态内存分配，C语言动态内存分配详解 ](http://c.biancheng.net/view/223.html)","slug":"关于C语言动态分配内存","published":1,"updated":"2022-03-10T14:31:34.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0mpdynr000390v93m084pv7","content":"<h2 id=\"传统数组的缺点\"><a href=\"#传统数组的缺点\" class=\"headerlink\" title=\"传统数组的缺点\"></a>传统数组的缺点</h2><ol>\n<li> 数组长度必须事先指定，只能是常量，不能是变量；</li>\n<li> 长度不能再函数运行的过程中动态地扩充或缩小；</li>\n<li> 数组所占内存空间程序员无法手动编程释放；</li>\n</ol>\n<p>即静态内存问题</p>\n<h2 id=\"malloc函数的使用\"><a href=\"#malloc函数的使用\" class=\"headerlink\" title=\"malloc函数的使用\"></a>malloc函数的使用</h2><p>malloc 为一个系统函数，它是 memory allocate 的缩写。</p>\n<p>其中 memory 是 内存 的意思，</p>\n<p>allocate 是 分配 的意思，</p>\n<p>即 分配内存 。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> *<span class=\"title\">malloc</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> size)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>malloc 函数只有一个形参，并且是整型。该函数的功能是在内存的动态储存空间即堆中分配一个长度为 size 的连续空间。</p>\n<p>函数的返回值是一个指向所分配内存空间起始地址的指针，类型为 void* 型。</p>\n<p>malloc 函数的返回值是一个地址，这个地址就是动态分配的内存空间的起始地址。如果此函数未能成功地执行，</p>\n<p>如内存空间不足，则返回空指针 NULL 。</p>\n<p>静态变量（关键字为 static）与全局变量一样，都是在 “静态存储区” 中分配的。此区域在程序编译时就已经分配好了，且在程序的整个运行期间都存在；</p>\n<p>而静态内存是栈中分配的，比如及局部变量。</p>\n<p><strong>使用方法</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<p>请求系统分配4字节的内存空间，并返回第一字节的地址，然后赋值给指针变量p。当用malloc分配动态内存之后，上面这个指针变量p就被初始化了。</p>\n<p>由于malloc返回值类型为 void* 型，所以需要进行<u>类型强制转换</u>，==C语言中，void* 型可以不经转换（系统自动转换）地直接赋给任何类型的指针变量（函数指针变量除外）==。</p>\n<h2 id=\"void和void\"><a href=\"#void和void\" class=\"headerlink\" title=\"void和void*\"></a>void和void*</h2><p>void* 是定义一个无类型的指针变量，它可以指向任何类型的数据。</p>\n<p>任何类型的指针变量都可以直接赋给 void* 型的指针变量，无需进行强制类型转换。</p>\n<p>不能对 void* 型的指针变量进行运算操作，</p>\n<p>原因是，int* 型的指针变量加 1 就是移动 4 个单元，因为 int* 型的指针变量是 int 型数据；但是 void* 型可以指向任何数据类型的数据，所以无法知道 “1” 所表示的是几个内存单元。</p>\n<blockquote>\n<p>  int *p = (int *)malloc(4);</p>\n</blockquote>\n<p>如上使用方法中，指针变量 p 是静态分配的。</p>\n<p>动态分配的内存空间都有一个标志，即都是用一个系统的动态分配函数实现的。</p>\n<p>而指针变量 p 使用传统的方式定义的，所以是静态分配的内存空间。</p>\n<p>而 p 所指向的内存是动态分配的。</p>\n<p>一个简单的木马程序：内存泄漏</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span>  <span class=\"comment\">//malloc()的头文件</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"keyword\">int</span> *p = <span class=\"built_in\">malloc</span>(<span class=\"number\">1000</span>);   </span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>当内存全部使用完成后，会启动虚拟内存，</p>\n<p>即把硬盘里的一块区域当成内存来使用，</p>\n<p>当虚拟内存都用完了，整个系统就死机了。</p>\n<p>若为<em>int</em>类型时，为增强程序的可移植性，应当如下写法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br></pre></td></tr></table></figure>\n\n<p>sizeof 的后面可以紧跟类型，也可以直接跟变量名。如果是变量名，那么就表示该变量在内存中所占的字节数。所以 *p 是 int 型的，那么 sizeof*p 就表示 int 型变量在内存中所占的字节数。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>*p);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"free函数的使用\"><a href=\"#free函数的使用\" class=\"headerlink\" title=\"free函数的使用\"></a>free函数的使用</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">free</span><span class=\"params\">(<span class=\"keyword\">void</span> *p)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>free 函数无返回值，它的功能是释放指针变量 p 所指向的内存单元。</p>\n<p>此时 p 所指向的那块内存单元将会被释放病患给操作系统，不再归它使用。</p>\n<p>操作系统可以重新将它分配给其他变量使用。</p>\n<p>释放并不是指清空内存空间，而是指将该内存空间标记为“可用状态”，使操作系统在分配内存时可以将它重新分配给其他变量使用。</p>\n<p>指针变量 p 被释放后，任然指向那块内存空间，只是那块内存空间已不属于它。</p>\n<p>为避免造成错误，在指针变量被释放后，要立刻把它的指向改为 NULL 。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>malloc与ffree一定要成对存在，一一对应。</p>\n<p>静态内存是不能用free释放的。</p>\n<h2 id=\"例-使用malloc创建动态数组\"><a href=\"#例-使用malloc创建动态数组\" class=\"headerlink\" title=\"例. 使用malloc创建动态数组\"></a>例. 使用malloc创建动态数组</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (<span class=\"keyword\">double</span> *) <span class=\"built_in\">malloc</span>(n * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>));\t\t</span><br></pre></td></tr></table></figure>\n\n<p>我们用malloc()创建一个数组。除了用malloc()在程序运行时请求一块内存，还需要一个指针记录这块内存的位置。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">double</span> * a;</span><br><span class=\"line\">a = (<span class=\"keyword\">double</span> *) <span class=\"built_in\">malloc</span>(<span class=\"number\">30</span> * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>));</span><br></pre></td></tr></table></figure>\n\n<p>malloc()和free()配套使用<br>free()将内存归还内存池<br>malloc()和free()的原型都在stdlib.h头文件中<br>使用malloc()，程序可以在运行时才确定数组大小。如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span>\t\t\t<span class=\"comment\">// 为malloc(), free()提供原型</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> * a;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> max;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> number;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"What is the maximum number of type double entries?\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;max) != <span class=\"number\">1</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Number not correctly entered -- bye.\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\ta = (<span class=\"keyword\">double</span> *) <span class=\"built_in\">malloc</span>(max * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Memory allocation failed. Goodbye.\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">// a 现在指向有max个元素的数组</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Enter the values (q to quit):\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i &lt; max &amp;&amp; <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf\"</span>, &amp;a[i]) == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t++i;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Here are your %d entries:\\n\"</span>, number = i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; number; i++)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%7.2f \"</span>, a[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i % <span class=\"number\">7</span> == <span class=\"number\">6</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i % <span class=\"number\">7</span> != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Done.\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://blog.csdn.net/weixin_43760909/article/details/87936133\">C语言 用malloc()创建动态数组<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"http://c.biancheng.net/view/223.html\">动态内存分配，C语言动态内存分配详解 <i class=\"fas fa-external-link-alt\"></i></a></p>\n","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<h2 id=\"传统数组的缺点\"><a href=\"#传统数组的缺点\" class=\"headerlink\" title=\"传统数组的缺点\"></a>传统数组的缺点</h2><ol>\n<li> 数组长度必须事先指定，只能是常量，不能是变量；</li>\n<li> 长度不能再函数运行的过程中动态地扩充或缩小；</li>\n<li> 数组所占内存空间程序员无法手动编程释放；</li>\n</ol>\n<p>即静态内存问题</p>\n<h2 id=\"malloc函数的使用\"><a href=\"#malloc函数的使用\" class=\"headerlink\" title=\"malloc函数的使用\"></a>malloc函数的使用</h2><p>malloc 为一个系统函数，它是 memory allocate 的缩写。</p>\n<p>其中 memory 是 内存 的意思，</p>\n<p>allocate 是 分配 的意思，</p>\n<p>即 分配内存 。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> *<span class=\"title\">malloc</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> size)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>malloc 函数只有一个形参，并且是整型。该函数的功能是在内存的动态储存空间即堆中分配一个长度为 size 的连续空间。</p>\n<p>函数的返回值是一个指向所分配内存空间起始地址的指针，类型为 void* 型。</p>\n<p>malloc 函数的返回值是一个地址，这个地址就是动态分配的内存空间的起始地址。如果此函数未能成功地执行，</p>\n<p>如内存空间不足，则返回空指针 NULL 。</p>\n<p>静态变量（关键字为 static）与全局变量一样，都是在 “静态存储区” 中分配的。此区域在程序编译时就已经分配好了，且在程序的整个运行期间都存在；</p>\n<p>而静态内存是栈中分配的，比如及局部变量。</p>\n<p><strong>使用方法</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<p>请求系统分配4字节的内存空间，并返回第一字节的地址，然后赋值给指针变量p。当用malloc分配动态内存之后，上面这个指针变量p就被初始化了。</p>\n<p>由于malloc返回值类型为 void* 型，所以需要进行<u>类型强制转换</u>，==C语言中，void* 型可以不经转换（系统自动转换）地直接赋给任何类型的指针变量（函数指针变量除外）==。</p>\n<h2 id=\"void和void\"><a href=\"#void和void\" class=\"headerlink\" title=\"void和void*\"></a>void和void*</h2><p>void* 是定义一个无类型的指针变量，它可以指向任何类型的数据。</p>\n<p>任何类型的指针变量都可以直接赋给 void* 型的指针变量，无需进行强制类型转换。</p>\n<p>不能对 void* 型的指针变量进行运算操作，</p>\n<p>原因是，int* 型的指针变量加 1 就是移动 4 个单元，因为 int* 型的指针变量是 int 型数据；但是 void* 型可以指向任何数据类型的数据，所以无法知道 “1” 所表示的是几个内存单元。</p>\n<blockquote>\n<p>  int *p = (int *)malloc(4);</p>\n</blockquote>\n<p>如上使用方法中，指针变量 p 是静态分配的。</p>\n<p>动态分配的内存空间都有一个标志，即都是用一个系统的动态分配函数实现的。</p>\n<p>而指针变量 p 使用传统的方式定义的，所以是静态分配的内存空间。</p>\n<p>而 p 所指向的内存是动态分配的。</p>\n<p>一个简单的木马程序：内存泄漏</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span>  <span class=\"comment\">//malloc()的头文件</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"keyword\">int</span> *p = <span class=\"built_in\">malloc</span>(<span class=\"number\">1000</span>);   </span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>当内存全部使用完成后，会启动虚拟内存，</p>\n<p>即把硬盘里的一块区域当成内存来使用，</p>\n<p>当虚拟内存都用完了，整个系统就死机了。</p>\n<p>若为<em>int</em>类型时，为增强程序的可移植性，应当如下写法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br></pre></td></tr></table></figure>\n\n<p>sizeof 的后面可以紧跟类型，也可以直接跟变量名。如果是变量名，那么就表示该变量在内存中所占的字节数。所以 *p 是 int 型的，那么 sizeof*p 就表示 int 型变量在内存中所占的字节数。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>*p);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"free函数的使用\"><a href=\"#free函数的使用\" class=\"headerlink\" title=\"free函数的使用\"></a>free函数的使用</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">free</span><span class=\"params\">(<span class=\"keyword\">void</span> *p)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>free 函数无返回值，它的功能是释放指针变量 p 所指向的内存单元。</p>\n<p>此时 p 所指向的那块内存单元将会被释放病患给操作系统，不再归它使用。</p>\n<p>操作系统可以重新将它分配给其他变量使用。</p>\n<p>释放并不是指清空内存空间，而是指将该内存空间标记为“可用状态”，使操作系统在分配内存时可以将它重新分配给其他变量使用。</p>\n<p>指针变量 p 被释放后，任然指向那块内存空间，只是那块内存空间已不属于它。</p>\n<p>为避免造成错误，在指针变量被释放后，要立刻把它的指向改为 NULL 。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>malloc与ffree一定要成对存在，一一对应。</p>\n<p>静态内存是不能用free释放的。</p>\n<h2 id=\"例-使用malloc创建动态数组\"><a href=\"#例-使用malloc创建动态数组\" class=\"headerlink\" title=\"例. 使用malloc创建动态数组\"></a>例. 使用malloc创建动态数组</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (<span class=\"keyword\">double</span> *) <span class=\"built_in\">malloc</span>(n * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>));\t\t</span><br></pre></td></tr></table></figure>\n\n<p>我们用malloc()创建一个数组。除了用malloc()在程序运行时请求一块内存，还需要一个指针记录这块内存的位置。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">double</span> * a;</span><br><span class=\"line\">a = (<span class=\"keyword\">double</span> *) <span class=\"built_in\">malloc</span>(<span class=\"number\">30</span> * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>));</span><br></pre></td></tr></table></figure>\n\n<p>malloc()和free()配套使用<br>free()将内存归还内存池<br>malloc()和free()的原型都在stdlib.h头文件中<br>使用malloc()，程序可以在运行时才确定数组大小。如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span>\t\t\t<span class=\"comment\">// 为malloc(), free()提供原型</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> * a;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> max;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> number;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"What is the maximum number of type double entries?\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;max) != <span class=\"number\">1</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Number not correctly entered -- bye.\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\ta = (<span class=\"keyword\">double</span> *) <span class=\"built_in\">malloc</span>(max * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Memory allocation failed. Goodbye.\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">// a 现在指向有max个元素的数组</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Enter the values (q to quit):\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i &lt; max &amp;&amp; <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf\"</span>, &amp;a[i]) == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t++i;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Here are your %d entries:\\n\"</span>, number = i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; number; i++)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%7.2f \"</span>, a[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i % <span class=\"number\">7</span> == <span class=\"number\">6</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i % <span class=\"number\">7</span> != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Done.\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://blog.csdn.net/weixin_43760909/article/details/87936133\">C语言 用malloc()创建动态数组<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"http://c.biancheng.net/view/223.html\">动态内存分配，C语言动态内存分配详解 <i class=\"fas fa-external-link-alt\"></i></a></p>\n"},{"title":"【STM32学习记录】第一节-了解STM32","mathjax":true,"date":"2022-03-10T12:45:36.000Z","comment":true,"_content":"\n+   相关说明\n\n    本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为**Blibili**[@正点原子官方](https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0)，以及**Blibili**[@野火_firege](https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0)。\n\n    +   相关的可参考文件：\n\n    [STM32 中文参考手册](http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf)\n\n    [STM32 选型手册 2021](https://www.stmcu.com.cn/upload/Selection_Guide.pdf)\n\n    [STM32F103C8T6 ](https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html)\n\n# 1.  STM32概述\n\n## 1.1 **CM3**芯片结构\n\n![](https://s3.bmp.ovh/imgs/2022/03/2dd63aab5ae67707.png)\n\n上图为Cortex-M3 芯片的结构图，总的来说，内核是由**ARM**公司来设计的，\n\n**ST**即意法半导体公司，设计开发了其他的内容。\n\n## 1.2 STM32F103系列\n\n![](https://s3.bmp.ovh/imgs/2022/03/47b00675cee9d26c.png)\n\n总的来说**STM32F103**系列芯片\n\n由**内核**、**总线**、**外设**组成；\n\n复位和时钟控制**RCC**挂载在**AHB总线**上，\n\n-> **驱动单元** + **被动单元**\n\n四种驱动单元：\n\n+   ICode\n+   DCode\n+   System\n+   DMA\n\n1.  **内核**通过**ICode总线**控制**外设**；\n\n![](https://s3.bmp.ovh/imgs/2022/03/e58a15af0c523e3e.png)\n\n2.  **DCode**为**数据总线**；\n\n    | 存放区域 | 存放类型 |\n    | :------: | :------: |\n    |  Flash   |   常量   |\n    |   SRAM   | 全局变量 |\n    |   SRAM   | 局部变量 |\n\n3.  **寄存器**存在于**外设**中通过**System总线**读取；\n\n4.  **DMA总线**用于搬数据，可以使CPU内部得到通用寄存器不被占用（不使用DMA时数据从SRAM中先被CPU读取至通用寄存器中，再通过总线传输）；\n\n## 1.3 命名规则\n\n![](https://s3.bmp.ovh/imgs/2022/03/2a4430e84a485b9f.png)\n\n区分32选型因素：\n\n+   flash容量\n+   引脚数量\n\n\n\n参考网站：\n\n[【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1yW411Y7Gw)\n\n[【正点原子】 手把手教你学STM32单片机教学视频 嵌入式 之 F103-基于新战舰V3/精英/MINI板_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Lx411Z7Qa)\n\n\n\n<center>暂时就这样，持续更新ing...<center/>\n\n<img src=\"艾米莉亚1.jpg\"  width=\"330\"  height = \"450\" />","source":"_posts/【STM32学习记录】第一节-了解STM32.md","raw":"---\ntitle: 【STM32学习记录】第一节-了解STM32\nmathjax: true\ndate: 2022-03-10 20:45:36\ntags: [STM32,C8T6,芯片结构]\ncategories: [STM32]\ncomment: true\n---\n\n+   相关说明\n\n    本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为**Blibili**[@正点原子官方](https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0)，以及**Blibili**[@野火_firege](https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0)。\n\n    +   相关的可参考文件：\n\n    [STM32 中文参考手册](http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf)\n\n    [STM32 选型手册 2021](https://www.stmcu.com.cn/upload/Selection_Guide.pdf)\n\n    [STM32F103C8T6 ](https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html)\n\n# 1.  STM32概述\n\n## 1.1 **CM3**芯片结构\n\n![](https://s3.bmp.ovh/imgs/2022/03/2dd63aab5ae67707.png)\n\n上图为Cortex-M3 芯片的结构图，总的来说，内核是由**ARM**公司来设计的，\n\n**ST**即意法半导体公司，设计开发了其他的内容。\n\n## 1.2 STM32F103系列\n\n![](https://s3.bmp.ovh/imgs/2022/03/47b00675cee9d26c.png)\n\n总的来说**STM32F103**系列芯片\n\n由**内核**、**总线**、**外设**组成；\n\n复位和时钟控制**RCC**挂载在**AHB总线**上，\n\n-> **驱动单元** + **被动单元**\n\n四种驱动单元：\n\n+   ICode\n+   DCode\n+   System\n+   DMA\n\n1.  **内核**通过**ICode总线**控制**外设**；\n\n![](https://s3.bmp.ovh/imgs/2022/03/e58a15af0c523e3e.png)\n\n2.  **DCode**为**数据总线**；\n\n    | 存放区域 | 存放类型 |\n    | :------: | :------: |\n    |  Flash   |   常量   |\n    |   SRAM   | 全局变量 |\n    |   SRAM   | 局部变量 |\n\n3.  **寄存器**存在于**外设**中通过**System总线**读取；\n\n4.  **DMA总线**用于搬数据，可以使CPU内部得到通用寄存器不被占用（不使用DMA时数据从SRAM中先被CPU读取至通用寄存器中，再通过总线传输）；\n\n## 1.3 命名规则\n\n![](https://s3.bmp.ovh/imgs/2022/03/2a4430e84a485b9f.png)\n\n区分32选型因素：\n\n+   flash容量\n+   引脚数量\n\n\n\n参考网站：\n\n[【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1yW411Y7Gw)\n\n[【正点原子】 手把手教你学STM32单片机教学视频 嵌入式 之 F103-基于新战舰V3/精英/MINI板_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Lx411Z7Qa)\n\n\n\n<center>暂时就这样，持续更新ing...<center/>\n\n<img src=\"艾米莉亚1.jpg\"  width=\"330\"  height = \"450\" />","slug":"【STM32学习记录】第一节-了解STM32","published":1,"updated":"2022-03-24T01:09:00.535Z","_id":"cl0mpdynw000790v95zy7ho5f","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>相关说明</p>\n<p>  本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0\">@正点原子官方<i class=\"fas fa-external-link-alt\"></i></a>，以及<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0\">@野火_firege<i class=\"fas fa-external-link-alt\"></i></a>。</p>\n<ul>\n<li><p>相关的可参考文件：</p>\n<p><a class=\"link\" href=\"http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf\">STM32 中文参考手册<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://www.stmcu.com.cn/upload/Selection_Guide.pdf\">STM32 选型手册 2021<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html\">STM32F103C8T6 <i class=\"fas fa-external-link-alt\"></i></a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"1-STM32概述\"><a href=\"#1-STM32概述\" class=\"headerlink\" title=\"1.  STM32概述\"></a>1.  STM32概述</h1><h2 id=\"1-1-CM3芯片结构\"><a href=\"#1-1-CM3芯片结构\" class=\"headerlink\" title=\"1.1 CM3芯片结构\"></a>1.1 <strong>CM3</strong>芯片结构</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/2dd63aab5ae67707.png\"></p>\n<p>上图为Cortex-M3 芯片的结构图，总的来说，内核是由<strong>ARM</strong>公司来设计的，</p>\n<p><strong>ST</strong>即意法半导体公司，设计开发了其他的内容。</p>\n<h2 id=\"1-2-STM32F103系列\"><a href=\"#1-2-STM32F103系列\" class=\"headerlink\" title=\"1.2 STM32F103系列\"></a>1.2 STM32F103系列</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/47b00675cee9d26c.png\"></p>\n<p>总的来说<strong>STM32F103</strong>系列芯片</p>\n<p>由<strong>内核</strong>、<strong>总线</strong>、<strong>外设</strong>组成；</p>\n<p>复位和时钟控制<strong>RCC</strong>挂载在<strong>AHB总线</strong>上，</p>\n<p>-&gt; <strong>驱动单元</strong> + <strong>被动单元</strong></p>\n<p>四种驱动单元：</p>\n<ul>\n<li>  ICode</li>\n<li>  DCode</li>\n<li>  System</li>\n<li>  DMA</li>\n</ul>\n<ol>\n<li> <strong>内核</strong>通过<strong>ICode总线</strong>控制<strong>外设</strong>；</li>\n</ol>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/e58a15af0c523e3e.png\"></p>\n<ol start=\"2\">\n<li><p><strong>DCode</strong>为<strong>数据总线</strong>；</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">存放区域</th>\n<th align=\"center\">存放类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Flash</td>\n<td align=\"center\">常量</td>\n</tr>\n<tr>\n<td align=\"center\">SRAM</td>\n<td align=\"center\">全局变量</td>\n</tr>\n<tr>\n<td align=\"center\">SRAM</td>\n<td align=\"center\">局部变量</td>\n</tr>\n</tbody></table>\n</li>\n<li><p> <strong>寄存器</strong>存在于<strong>外设</strong>中通过<strong>System总线</strong>读取；</p>\n</li>\n<li><p> <strong>DMA总线</strong>用于搬数据，可以使CPU内部得到通用寄存器不被占用（不使用DMA时数据从SRAM中先被CPU读取至通用寄存器中，再通过总线传输）；</p>\n</li>\n</ol>\n<h2 id=\"1-3-命名规则\"><a href=\"#1-3-命名规则\" class=\"headerlink\" title=\"1.3 命名规则\"></a>1.3 命名规则</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/2a4430e84a485b9f.png\"></p>\n<p>区分32选型因素：</p>\n<ul>\n<li>  flash容量</li>\n<li>  引脚数量</li>\n</ul>\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://www.bilibili.com/video/BV1yW411Y7Gw\">【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://www.bilibili.com/video/BV1Lx411Z7Qa\">【正点原子】 手把手教你学STM32单片机教学视频 嵌入式 之 F103-基于新战舰V3/精英/MINI板_哔哩哔哩_bilibili<i class=\"fas fa-external-link-alt\"></i></a></p>\n<center>暂时就这样，持续更新ing...<center></center>\n\n<img src=\"艾米莉亚1.jpg\" width=\"330\" height=\"450\"></center>","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<ul>\n<li><p>相关说明</p>\n<p>  本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0\">@正点原子官方<i class=\"fas fa-external-link-alt\"></i></a>，以及<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0\">@野火_firege<i class=\"fas fa-external-link-alt\"></i></a>。</p>\n<ul>\n<li><p>相关的可参考文件：</p>\n<p><a class=\"link\" href=\"http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf\">STM32 中文参考手册<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://www.stmcu.com.cn/upload/Selection_Guide.pdf\">STM32 选型手册 2021<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html\">STM32F103C8T6 <i class=\"fas fa-external-link-alt\"></i></a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"1-STM32概述\"><a href=\"#1-STM32概述\" class=\"headerlink\" title=\"1.  STM32概述\"></a>1.  STM32概述</h1><h2 id=\"1-1-CM3芯片结构\"><a href=\"#1-1-CM3芯片结构\" class=\"headerlink\" title=\"1.1 CM3芯片结构\"></a>1.1 <strong>CM3</strong>芯片结构</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/2dd63aab5ae67707.png\"></p>\n<p>上图为Cortex-M3 芯片的结构图，总的来说，内核是由<strong>ARM</strong>公司来设计的，</p>\n<p><strong>ST</strong>即意法半导体公司，设计开发了其他的内容。</p>\n<h2 id=\"1-2-STM32F103系列\"><a href=\"#1-2-STM32F103系列\" class=\"headerlink\" title=\"1.2 STM32F103系列\"></a>1.2 STM32F103系列</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/47b00675cee9d26c.png\"></p>\n<p>总的来说<strong>STM32F103</strong>系列芯片</p>\n<p>由<strong>内核</strong>、<strong>总线</strong>、<strong>外设</strong>组成；</p>\n<p>复位和时钟控制<strong>RCC</strong>挂载在<strong>AHB总线</strong>上，</p>\n<p>-&gt; <strong>驱动单元</strong> + <strong>被动单元</strong></p>\n<p>四种驱动单元：</p>\n<ul>\n<li>  ICode</li>\n<li>  DCode</li>\n<li>  System</li>\n<li>  DMA</li>\n</ul>\n<ol>\n<li> <strong>内核</strong>通过<strong>ICode总线</strong>控制<strong>外设</strong>；</li>\n</ol>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/e58a15af0c523e3e.png\"></p>\n<ol start=\"2\">\n<li><p><strong>DCode</strong>为<strong>数据总线</strong>；</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">存放区域</th>\n<th align=\"center\">存放类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Flash</td>\n<td align=\"center\">常量</td>\n</tr>\n<tr>\n<td align=\"center\">SRAM</td>\n<td align=\"center\">全局变量</td>\n</tr>\n<tr>\n<td align=\"center\">SRAM</td>\n<td align=\"center\">局部变量</td>\n</tr>\n</tbody></table>\n</li>\n<li><p> <strong>寄存器</strong>存在于<strong>外设</strong>中通过<strong>System总线</strong>读取；</p>\n</li>\n<li><p> <strong>DMA总线</strong>用于搬数据，可以使CPU内部得到通用寄存器不被占用（不使用DMA时数据从SRAM中先被CPU读取至通用寄存器中，再通过总线传输）；</p>\n</li>\n</ol>\n<h2 id=\"1-3-命名规则\"><a href=\"#1-3-命名规则\" class=\"headerlink\" title=\"1.3 命名规则\"></a>1.3 命名规则</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/2a4430e84a485b9f.png\"></p>\n<p>区分32选型因素：</p>\n<ul>\n<li>  flash容量</li>\n<li>  引脚数量</li>\n</ul>\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://www.bilibili.com/video/BV1yW411Y7Gw\">【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://www.bilibili.com/video/BV1Lx411Z7Qa\">【正点原子】 手把手教你学STM32单片机教学视频 嵌入式 之 F103-基于新战舰V3/精英/MINI板_哔哩哔哩_bilibili<i class=\"fas fa-external-link-alt\"></i></a></p>\n<center>暂时就这样，持续更新ing...<center></center>\n\n<img src=\"艾米莉亚1.jpg\" width=\"330\" height=\"450\"></center>"},{"title":"如何搭建自己的Blog","mathjax":true,"date":"2022-03-10T14:34:51.000Z","comment":true,"_content":"\n# #前言\n\n>   本文旨在将搭建本**Blog**的流程记录下来，并且让更多比我还小白的小白能看得明白\n>\n>   （也方便以后自己更改调试这些页面...），本文作者相关的基础也还在学习中，\n>\n>   有错误欢迎大家指正，文中出现的参考网站等，将会写在文末。\n\n# 0. 简介\n\n## 0.1 What is GitHub Pages？\n\n**GitHub Pages** 是 **Github** 官方提供的免费的静态站点托管服务，通过 **GitHub 仓库** 托管与发布我们的静态网站页面，这样我们基本不用操心维护的问题。\n\n这种方式的缺点就是，在国内访问 **Github** 的速度有点 ... \n\n[Know More](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages)\n\n在不运用 **Vercle** 的时候我们使用此种方法。\n\n本篇文章将着重讲三者（**GitHub + Hexo +Vercel**）同时使用的配置流程。\n\n## 0.2 What is Hexo？\n\n**Hexo** 是一个静态博客框架，基于 **Node.js** 运行，可以将我们撰写的 **Markdown** 文档（.md）解析渲染成静态的 **HTML** 网页，我所使用的写 **Markdown** 软件是 **Typora**。\t\n\n[Know More](https://hexo.io/zh-cn/)\n\n## 0.3 What is vercel？\n\n**Vercel** 是一家提供静态网站托管的云平台，能从 **Github** 仓库中拉取代码，能够有效地提升我们访问网站的速度。\n\n[Know More](https://vercel.com/)\n\n## 0.4 How they work？\n\n本地撰写好 **Markdown** 格式文章后，通过 **Hexo** 解析文档，渲染生成各类主题样式的 **HTML** [静态网页](https://baike.baidu.com/item/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/6327183)，再上传到 **GitHub** **Repo** 中，**Vercel** 通过拉取 **GitHub** **库** 中的数据以供访客访问。\n\n<img src = 'https://s3.bmp.ovh/imgs/2022/03/40038a04b8da3713.png' />\n\n----------------------\n\n# 1. 基础准备\n\n## 1.1 环境搭建\n\n安装**Node.js** + 安装**Git**\n\n[Node.js](https://nodejs.org/zh-cn)\n\n[Git](https://git-scm.com/downloads)\n\n安装完成后，用**Win** + **R** 键输入 **cmd** 并打开，\n\n在命令框内输入 **node -v** 如果出现版本号则表示安装成功，\n\n<img src = 'https://i.bmp.ovh/imgs/2022/03/182b37ed66fe4298.png' />\n\n输入 **npm install -g yarn** 安装 **yarn**，\n\n完成后同理检查版本已确认安装。\n\n使用 **git --version** 完成检查。\n\n## 1.2 账号注册\n\n**Github**账号 + **vercel**账号 \n\n## 1.3 域名准备\n\n这个环节可有可无，感兴趣可以自己买一个域名...\n\n这样就可以不用 **Vercel** 给出的。\n\n------------------------------\n\n# 2. 搭建步骤\n\n## 2.1 连接GitHub\n\n新建一个名为“**Blog**”的文件夹，\n\n如果出现如下类似问题（即无操作权限等问题），\n\n![](https://s3.bmp.ovh/imgs/2022/03/2b93afa21cdfea92.jpg)\n\n分别给 **Node**、**Git** 与 我们创建的 **Blog** 文件夹管理员权限。\n\n在文件夹内右键打开 “**Git Bash Here**”，\n\n不然在创建<u>SSH密钥</u>时很可能出现 “**unknown key type -rsa**” 的错误。\n\n在控制台内一次输入以下命令，\n\n`git config --global user.name \"GitHub 用户名\"`\n`git config --global user.email \"GitHub 邮箱\"`\n\n## 2.2 SSH密钥\n\n### 2.2.1 创建密钥\n\n输入 `ssh-keygen -t rsa -C \"GitHub 邮箱\"`\n\n之后只需要摁4次回车就🆗；\n\n## 2.2.2 添加密钥\n\n通过资源管理器进入如下目录 **[C:\\Users\\用户名\\\\.ssh]** （此处记得勾选“隐藏的项目”），\n\n用记事本打开公钥 **id_rsa.pub** 文件 **Ctrl + A** 选择全部，复制内容。\n\n登录**GitHub**，进入 **Settings** 界面，选择左栏的 **SSH and GPG  keys**，\n\n选择 **New SSH key** ，**Title** 随便填写，\n\n将 **id_rua.pub** ，将内容复制进 “**Key**”，\n\n<img src = 'https://s3.bmp.ovh/imgs/2022/03/be87470507217303.png' />\n\n这步以后，会出现一长串 **SSH** 密钥 ，在之后我们会用上。\n\n## 2.3 进行连接\n\n右键桌面空白部分，选择打开 **Git Bash** ，输入\n\n`ssh -T git@github.com`\n\n出现 “Are you sure......”等字样，输入 **yes**  回车确认。\n\n显示“You’ve successfully......”等字样即连接成功。\n\n## 2.3 创建Git Repo\n\n在**GitHub**界面点击如下图所示 “**new repository**” 新建仓库，\n\n![](https://i.bmp.ovh/imgs/2022/03/75160d297ca82600.png)\n\n填写方式如下，\n\n**README.md**可以不用勾选。\n\n<img src = 'https://s3.bmp.ovh/imgs/2022/03/88161a9d9dbd2cfa.png' />\n\n## 2.4 Hexo配置\n\n### 2.4.1 安装 Hexo\n\n使用 **npm** 安装程序\n\n```text\nnpm install -g hexo\n```\n\n等待其安装完毕，时间也许会有点久...耐心等一下...\n\n### 2.4.2 初始化\n\n输入指令初始化，\n\n`hexo init`\n\n这时我们创建的**Blog**文件夹内会出现**Hexo**的各种文件，\n\n结构如下\n\n+   \\_config.yml\t\t# 配置文件\n+   package.json       \t\t# 应用程序信息\n+   scaffolds\t\t          # 模板\n+   source \t\t\t        # 存放用户资源，文档等\n    +   \\_drafts\n    +   \\_posts\n+   themes \t\t\t       # 主题文件夹\n+   public\t\t\t       # 网站文件\n\n输入如下指令，生成静态网页，\n\n`hexo g`\n\n输入如下指令，可以访问 http://localhost:4000 在本地预览页面，\n\n`hexo server`\n\n按 **Ctrl + C** 关闭服务器。\n\n## 2.5 上传至GitHub Repo\n\n这部分属于**Git**的用法，本篇文章仅展示流程。\n\n（我也不是理解的特别透彻，就不班门弄斧了🙏）\n\n[Learn more]((https://zhuanlan.zhihu.com/p/21193604))\n\n初始化**Git**\n\n`git init`\n\n选择当前文件夹所有的文件，\n\n`git add .`\n\n将选择追踪的文件全部加入<u>缓冲区</u>，\n\n注释随意填写但不能为空，\n\n`git commit -am “注释（代码提交信息）”`\n\n创建**main**分支，\n\n`git branch -M main`\n\n<u>链接</u>即为自己**GitHub Repo**的<u>SSH</u>，如下图，\n\n![](https://i.bmp.ovh/imgs/2022/03/c4fb128a4b566dcd.png)\n\n确定连接至**Github** **Repo** ，\n\n`git remote add origin “链接”`\n\n这步结束以后会要求我们输入我们的 <u>SSH私钥</u>，\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/2940c32df77479f1.png\" />\n\n上传缓冲区的文件至**GitHub Repo**中的**main**分支，\n\n`git push -u origin main`\n\n这一步千万千万不要上传到**master**分支！！！\n\n<div align = \"center\">千万不要！！！</div>\n\n\n## 2.6 Vercel配置\n\n![](https://s3.bmp.ovh/imgs/2022/03/d0ec96c7463c99b2.png)\n\n选择 “**Browse All Templates**” -> 选择 “**Hexo**” 模板\n\n![](https://s3.bmp.ovh/imgs/2022/03/fe3685a4793c1cbc.png)\n\n在此页面选择 “**Import a different Git Repository**”\n\n选择我们最开始创建的 **GitHub Repo** 点击 “**Import**”\n\n点击 “**Deploy**” 完成部署，\n\n最后可通过图中连接进行访问我们的主页。\n\n![](https://s3.bmp.ovh/imgs/2022/03/56d9cee4ac785336.png)\n\n------------------------------------\n\n# 3. 后期运营\n\n我们搭建 **Blog** 在此就已经大体上搭建好了，\n\n后期就是我们自己上传文章、配置各类文件或者使用主题进行美化等等。\n\n## 3.1 新建文章\n\n使用以下命令新建文章，\n\n`hexo new post 文章名`\n\n文章的模板储存在 “**scaffolds**” 文件夹中，可以更换里边的模板，\n\n以更改我们创建的初始文章格式。\n\n## 3.2 新建页面\n\n使用以下命令新建页面，\n\n`hexo new page 页面名`\n\n模板储存地址同上。\n\n## 3.3 上传页面\n\n在我们在本地更新完页面以后，\n\n文章储存在“**Blog\\source\\\\_posts**” 中，\n\n当我们更新完文件并生成静态页面以后，\n\n依次使用\n\n`git add .`\n\n`git commit -am “注释”`\n\n`git push -u origin main`\n\n进行上传，**vercel** 将会自动部署。\n\n## 3.4 清除页面\n\n修改并部署后没有效果，\n\n使用如下指令进行清除，然后再重新生成部署，\n\n`hexo clean`\n\n## 3.5 主题下载\n\n在[Themes | Hexo](https://hexo.io/themes/)可以选择自己喜欢的主题，并在 **Blog** 文件夹页面，通过 **Git Bash Here** 进行下载，在相关的主题介绍内有其具体详细的介绍，在此就不多赘述。\n\n---------------------------\n\n# *4. 域名更换\n\n## *4.1 Vercel配置\n\n如果我们购买了自己的域名，我们可以在\n\n菜单栏中的 **Domain** 中点击 **Add**\n\n选择我们要绑定的项目（即**Blog**），\n\n点击 **Continue** ，\n\n输入我们的 **域名 + 后缀** ，\n\n添加完毕后会显示如下图的界面。\n\n![](https://s3.bmp.ovh/imgs/2022/03/c44c3ef8c7d90e50.png)\n\n## *4.2 DNS解析\n\n进入我们的域名管理界面，\n\n选择 “**DNS 解析**“ -> ”**域名解析**“，\n\n\n\n![](https://s3.bmp.ovh/imgs/2022/03/daf5d128c5a5cfb1.png)\n\n如图进行添加，我们就能够通过我们自己的域名访问**Blog**了。\n\n--------------------------------------\n\n# #结语\n\n总的来说全程都是免费的，不花一分钱....这种方式并没有用到**GitHub Pages**，如果对这种方式该兴趣的可以看看参考网站的第一个。\n\n这种方式写博客较为稳定，但是上传的过程会略显麻烦，却能在过程中学到很多的东西。\n\n本篇文章也许有些地方还不够详尽，欢迎大家提出进行进一步修改，共同进步。\n\n<img src=\"bg.png\"  width=\"360\"  height = \"450\" />\n\n\n\n\n\n\n\n\n\n\n\n参考网站：\n\n[使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/60578464)\n\n[静态网页 ](https://cn.bing.com/search?q=%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5&cvid=d95f1ce54fda4d2dbdadf30305e9e274&aqs=edge..69i57.2690j0j1&pglt=171&FORM=ANNTA1&PC=ASTS)\n\n[About GitHub Pages - GitHub Docs](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages)\n\n[Hexo](https://hexo.io/zh-cn/)\n\n[vercel](https://vercel.com/)\n\n[git - 入门指南 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/21193604)\n\n[Vercel绑定个人域名 | Aymeticの小窝](https://aymetic.com/post/935c9419)","source":"_posts/如何搭建自己的Blog.md","raw":"---\ntitle: 如何搭建自己的Blog\nmathjax: true\ndate: 2022-03-10 22:34:51\ntags: [Hexo,Github,Vercel,Blog]\ncategories: [Hexo]\ncomment: true\n---\n\n# #前言\n\n>   本文旨在将搭建本**Blog**的流程记录下来，并且让更多比我还小白的小白能看得明白\n>\n>   （也方便以后自己更改调试这些页面...），本文作者相关的基础也还在学习中，\n>\n>   有错误欢迎大家指正，文中出现的参考网站等，将会写在文末。\n\n# 0. 简介\n\n## 0.1 What is GitHub Pages？\n\n**GitHub Pages** 是 **Github** 官方提供的免费的静态站点托管服务，通过 **GitHub 仓库** 托管与发布我们的静态网站页面，这样我们基本不用操心维护的问题。\n\n这种方式的缺点就是，在国内访问 **Github** 的速度有点 ... \n\n[Know More](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages)\n\n在不运用 **Vercle** 的时候我们使用此种方法。\n\n本篇文章将着重讲三者（**GitHub + Hexo +Vercel**）同时使用的配置流程。\n\n## 0.2 What is Hexo？\n\n**Hexo** 是一个静态博客框架，基于 **Node.js** 运行，可以将我们撰写的 **Markdown** 文档（.md）解析渲染成静态的 **HTML** 网页，我所使用的写 **Markdown** 软件是 **Typora**。\t\n\n[Know More](https://hexo.io/zh-cn/)\n\n## 0.3 What is vercel？\n\n**Vercel** 是一家提供静态网站托管的云平台，能从 **Github** 仓库中拉取代码，能够有效地提升我们访问网站的速度。\n\n[Know More](https://vercel.com/)\n\n## 0.4 How they work？\n\n本地撰写好 **Markdown** 格式文章后，通过 **Hexo** 解析文档，渲染生成各类主题样式的 **HTML** [静态网页](https://baike.baidu.com/item/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/6327183)，再上传到 **GitHub** **Repo** 中，**Vercel** 通过拉取 **GitHub** **库** 中的数据以供访客访问。\n\n<img src = 'https://s3.bmp.ovh/imgs/2022/03/40038a04b8da3713.png' />\n\n----------------------\n\n# 1. 基础准备\n\n## 1.1 环境搭建\n\n安装**Node.js** + 安装**Git**\n\n[Node.js](https://nodejs.org/zh-cn)\n\n[Git](https://git-scm.com/downloads)\n\n安装完成后，用**Win** + **R** 键输入 **cmd** 并打开，\n\n在命令框内输入 **node -v** 如果出现版本号则表示安装成功，\n\n<img src = 'https://i.bmp.ovh/imgs/2022/03/182b37ed66fe4298.png' />\n\n输入 **npm install -g yarn** 安装 **yarn**，\n\n完成后同理检查版本已确认安装。\n\n使用 **git --version** 完成检查。\n\n## 1.2 账号注册\n\n**Github**账号 + **vercel**账号 \n\n## 1.3 域名准备\n\n这个环节可有可无，感兴趣可以自己买一个域名...\n\n这样就可以不用 **Vercel** 给出的。\n\n------------------------------\n\n# 2. 搭建步骤\n\n## 2.1 连接GitHub\n\n新建一个名为“**Blog**”的文件夹，\n\n如果出现如下类似问题（即无操作权限等问题），\n\n![](https://s3.bmp.ovh/imgs/2022/03/2b93afa21cdfea92.jpg)\n\n分别给 **Node**、**Git** 与 我们创建的 **Blog** 文件夹管理员权限。\n\n在文件夹内右键打开 “**Git Bash Here**”，\n\n不然在创建<u>SSH密钥</u>时很可能出现 “**unknown key type -rsa**” 的错误。\n\n在控制台内一次输入以下命令，\n\n`git config --global user.name \"GitHub 用户名\"`\n`git config --global user.email \"GitHub 邮箱\"`\n\n## 2.2 SSH密钥\n\n### 2.2.1 创建密钥\n\n输入 `ssh-keygen -t rsa -C \"GitHub 邮箱\"`\n\n之后只需要摁4次回车就🆗；\n\n## 2.2.2 添加密钥\n\n通过资源管理器进入如下目录 **[C:\\Users\\用户名\\\\.ssh]** （此处记得勾选“隐藏的项目”），\n\n用记事本打开公钥 **id_rsa.pub** 文件 **Ctrl + A** 选择全部，复制内容。\n\n登录**GitHub**，进入 **Settings** 界面，选择左栏的 **SSH and GPG  keys**，\n\n选择 **New SSH key** ，**Title** 随便填写，\n\n将 **id_rua.pub** ，将内容复制进 “**Key**”，\n\n<img src = 'https://s3.bmp.ovh/imgs/2022/03/be87470507217303.png' />\n\n这步以后，会出现一长串 **SSH** 密钥 ，在之后我们会用上。\n\n## 2.3 进行连接\n\n右键桌面空白部分，选择打开 **Git Bash** ，输入\n\n`ssh -T git@github.com`\n\n出现 “Are you sure......”等字样，输入 **yes**  回车确认。\n\n显示“You’ve successfully......”等字样即连接成功。\n\n## 2.3 创建Git Repo\n\n在**GitHub**界面点击如下图所示 “**new repository**” 新建仓库，\n\n![](https://i.bmp.ovh/imgs/2022/03/75160d297ca82600.png)\n\n填写方式如下，\n\n**README.md**可以不用勾选。\n\n<img src = 'https://s3.bmp.ovh/imgs/2022/03/88161a9d9dbd2cfa.png' />\n\n## 2.4 Hexo配置\n\n### 2.4.1 安装 Hexo\n\n使用 **npm** 安装程序\n\n```text\nnpm install -g hexo\n```\n\n等待其安装完毕，时间也许会有点久...耐心等一下...\n\n### 2.4.2 初始化\n\n输入指令初始化，\n\n`hexo init`\n\n这时我们创建的**Blog**文件夹内会出现**Hexo**的各种文件，\n\n结构如下\n\n+   \\_config.yml\t\t# 配置文件\n+   package.json       \t\t# 应用程序信息\n+   scaffolds\t\t          # 模板\n+   source \t\t\t        # 存放用户资源，文档等\n    +   \\_drafts\n    +   \\_posts\n+   themes \t\t\t       # 主题文件夹\n+   public\t\t\t       # 网站文件\n\n输入如下指令，生成静态网页，\n\n`hexo g`\n\n输入如下指令，可以访问 http://localhost:4000 在本地预览页面，\n\n`hexo server`\n\n按 **Ctrl + C** 关闭服务器。\n\n## 2.5 上传至GitHub Repo\n\n这部分属于**Git**的用法，本篇文章仅展示流程。\n\n（我也不是理解的特别透彻，就不班门弄斧了🙏）\n\n[Learn more]((https://zhuanlan.zhihu.com/p/21193604))\n\n初始化**Git**\n\n`git init`\n\n选择当前文件夹所有的文件，\n\n`git add .`\n\n将选择追踪的文件全部加入<u>缓冲区</u>，\n\n注释随意填写但不能为空，\n\n`git commit -am “注释（代码提交信息）”`\n\n创建**main**分支，\n\n`git branch -M main`\n\n<u>链接</u>即为自己**GitHub Repo**的<u>SSH</u>，如下图，\n\n![](https://i.bmp.ovh/imgs/2022/03/c4fb128a4b566dcd.png)\n\n确定连接至**Github** **Repo** ，\n\n`git remote add origin “链接”`\n\n这步结束以后会要求我们输入我们的 <u>SSH私钥</u>，\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/2940c32df77479f1.png\" />\n\n上传缓冲区的文件至**GitHub Repo**中的**main**分支，\n\n`git push -u origin main`\n\n这一步千万千万不要上传到**master**分支！！！\n\n<div align = \"center\">千万不要！！！</div>\n\n\n## 2.6 Vercel配置\n\n![](https://s3.bmp.ovh/imgs/2022/03/d0ec96c7463c99b2.png)\n\n选择 “**Browse All Templates**” -> 选择 “**Hexo**” 模板\n\n![](https://s3.bmp.ovh/imgs/2022/03/fe3685a4793c1cbc.png)\n\n在此页面选择 “**Import a different Git Repository**”\n\n选择我们最开始创建的 **GitHub Repo** 点击 “**Import**”\n\n点击 “**Deploy**” 完成部署，\n\n最后可通过图中连接进行访问我们的主页。\n\n![](https://s3.bmp.ovh/imgs/2022/03/56d9cee4ac785336.png)\n\n------------------------------------\n\n# 3. 后期运营\n\n我们搭建 **Blog** 在此就已经大体上搭建好了，\n\n后期就是我们自己上传文章、配置各类文件或者使用主题进行美化等等。\n\n## 3.1 新建文章\n\n使用以下命令新建文章，\n\n`hexo new post 文章名`\n\n文章的模板储存在 “**scaffolds**” 文件夹中，可以更换里边的模板，\n\n以更改我们创建的初始文章格式。\n\n## 3.2 新建页面\n\n使用以下命令新建页面，\n\n`hexo new page 页面名`\n\n模板储存地址同上。\n\n## 3.3 上传页面\n\n在我们在本地更新完页面以后，\n\n文章储存在“**Blog\\source\\\\_posts**” 中，\n\n当我们更新完文件并生成静态页面以后，\n\n依次使用\n\n`git add .`\n\n`git commit -am “注释”`\n\n`git push -u origin main`\n\n进行上传，**vercel** 将会自动部署。\n\n## 3.4 清除页面\n\n修改并部署后没有效果，\n\n使用如下指令进行清除，然后再重新生成部署，\n\n`hexo clean`\n\n## 3.5 主题下载\n\n在[Themes | Hexo](https://hexo.io/themes/)可以选择自己喜欢的主题，并在 **Blog** 文件夹页面，通过 **Git Bash Here** 进行下载，在相关的主题介绍内有其具体详细的介绍，在此就不多赘述。\n\n---------------------------\n\n# *4. 域名更换\n\n## *4.1 Vercel配置\n\n如果我们购买了自己的域名，我们可以在\n\n菜单栏中的 **Domain** 中点击 **Add**\n\n选择我们要绑定的项目（即**Blog**），\n\n点击 **Continue** ，\n\n输入我们的 **域名 + 后缀** ，\n\n添加完毕后会显示如下图的界面。\n\n![](https://s3.bmp.ovh/imgs/2022/03/c44c3ef8c7d90e50.png)\n\n## *4.2 DNS解析\n\n进入我们的域名管理界面，\n\n选择 “**DNS 解析**“ -> ”**域名解析**“，\n\n\n\n![](https://s3.bmp.ovh/imgs/2022/03/daf5d128c5a5cfb1.png)\n\n如图进行添加，我们就能够通过我们自己的域名访问**Blog**了。\n\n--------------------------------------\n\n# #结语\n\n总的来说全程都是免费的，不花一分钱....这种方式并没有用到**GitHub Pages**，如果对这种方式该兴趣的可以看看参考网站的第一个。\n\n这种方式写博客较为稳定，但是上传的过程会略显麻烦，却能在过程中学到很多的东西。\n\n本篇文章也许有些地方还不够详尽，欢迎大家提出进行进一步修改，共同进步。\n\n<img src=\"bg.png\"  width=\"360\"  height = \"450\" />\n\n\n\n\n\n\n\n\n\n\n\n参考网站：\n\n[使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/60578464)\n\n[静态网页 ](https://cn.bing.com/search?q=%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5&cvid=d95f1ce54fda4d2dbdadf30305e9e274&aqs=edge..69i57.2690j0j1&pglt=171&FORM=ANNTA1&PC=ASTS)\n\n[About GitHub Pages - GitHub Docs](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages)\n\n[Hexo](https://hexo.io/zh-cn/)\n\n[vercel](https://vercel.com/)\n\n[git - 入门指南 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/21193604)\n\n[Vercel绑定个人域名 | Aymeticの小窝](https://aymetic.com/post/935c9419)","slug":"如何搭建自己的Blog","published":1,"updated":"2022-03-13T16:20:09.365Z","_id":"cl0mpdynz000990v9bn263agn","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"#前言\"></a>#前言</h1><blockquote>\n<p>  本文旨在将搭建本<strong>Blog</strong>的流程记录下来，并且让更多比我还小白的小白能看得明白</p>\n<p>  （也方便以后自己更改调试这些页面…），本文作者相关的基础也还在学习中，</p>\n<p>  有错误欢迎大家指正，文中出现的参考网站等，将会写在文末。</p>\n</blockquote>\n<h1 id=\"0-简介\"><a href=\"#0-简介\" class=\"headerlink\" title=\"0. 简介\"></a>0. 简介</h1><h2 id=\"0-1-What-is-GitHub-Pages？\"><a href=\"#0-1-What-is-GitHub-Pages？\" class=\"headerlink\" title=\"0.1 What is GitHub Pages？\"></a>0.1 What is GitHub Pages？</h2><p><strong>GitHub Pages</strong> 是 <strong>Github</strong> 官方提供的免费的静态站点托管服务，通过 <strong>GitHub 仓库</strong> 托管与发布我们的静态网站页面，这样我们基本不用操心维护的问题。</p>\n<p>这种方式的缺点就是，在国内访问 <strong>Github</strong> 的速度有点 … </p>\n<p><a class=\"link\" href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\">Know More<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>在不运用 <strong>Vercle</strong> 的时候我们使用此种方法。</p>\n<p>本篇文章将着重讲三者（<strong>GitHub + Hexo +Vercel</strong>）同时使用的配置流程。</p>\n<h2 id=\"0-2-What-is-Hexo？\"><a href=\"#0-2-What-is-Hexo？\" class=\"headerlink\" title=\"0.2 What is Hexo？\"></a>0.2 What is Hexo？</h2><p><strong>Hexo</strong> 是一个静态博客框架，基于 <strong>Node.js</strong> 运行，可以将我们撰写的 <strong>Markdown</strong> 文档（.md）解析渲染成静态的 <strong>HTML</strong> 网页，我所使用的写 <strong>Markdown</strong> 软件是 <strong>Typora</strong>。    </p>\n<p><a class=\"link\" href=\"https://hexo.io/zh-cn/\">Know More<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"0-3-What-is-vercel？\"><a href=\"#0-3-What-is-vercel？\" class=\"headerlink\" title=\"0.3 What is vercel？\"></a>0.3 What is vercel？</h2><p><strong>Vercel</strong> 是一家提供静态网站托管的云平台，能从 <strong>Github</strong> 仓库中拉取代码，能够有效地提升我们访问网站的速度。</p>\n<p><a class=\"link\" href=\"https://vercel.com/\">Know More<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"0-4-How-they-work？\"><a href=\"#0-4-How-they-work？\" class=\"headerlink\" title=\"0.4 How they work？\"></a>0.4 How they work？</h2><p>本地撰写好 <strong>Markdown</strong> 格式文章后，通过 <strong>Hexo</strong> 解析文档，渲染生成各类主题样式的 <strong>HTML</strong> <a class=\"link\" href=\"https://baike.baidu.com/item/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/6327183\">静态网页<i class=\"fas fa-external-link-alt\"></i></a>，再上传到 <strong>GitHub</strong> <strong>Repo</strong> 中，<strong>Vercel</strong> 通过拉取 <strong>GitHub</strong> <strong>库</strong> 中的数据以供访客访问。</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/40038a04b8da3713.png\">\n\n<hr>\n<h1 id=\"1-基础准备\"><a href=\"#1-基础准备\" class=\"headerlink\" title=\"1. 基础准备\"></a>1. 基础准备</h1><h2 id=\"1-1-环境搭建\"><a href=\"#1-1-环境搭建\" class=\"headerlink\" title=\"1.1 环境搭建\"></a>1.1 环境搭建</h2><p>安装<strong>Node.js</strong> + 安装<strong>Git</strong></p>\n<p><a class=\"link\" href=\"https://nodejs.org/zh-cn\">Node.js<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://git-scm.com/downloads\">Git<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>安装完成后，用<strong>Win</strong> + <strong>R</strong> 键输入 <strong>cmd</strong> 并打开，</p>\n<p>在命令框内输入 <strong>node -v</strong> 如果出现版本号则表示安装成功，</p>\n<img src=\"https://i.bmp.ovh/imgs/2022/03/182b37ed66fe4298.png\">\n\n<p>输入 <strong>npm install -g yarn</strong> 安装 <strong>yarn</strong>，</p>\n<p>完成后同理检查版本已确认安装。</p>\n<p>使用 <strong>git –version</strong> 完成检查。</p>\n<h2 id=\"1-2-账号注册\"><a href=\"#1-2-账号注册\" class=\"headerlink\" title=\"1.2 账号注册\"></a>1.2 账号注册</h2><p><strong>Github</strong>账号 + <strong>vercel</strong>账号 </p>\n<h2 id=\"1-3-域名准备\"><a href=\"#1-3-域名准备\" class=\"headerlink\" title=\"1.3 域名准备\"></a>1.3 域名准备</h2><p>这个环节可有可无，感兴趣可以自己买一个域名…</p>\n<p>这样就可以不用 <strong>Vercel</strong> 给出的。</p>\n<hr>\n<h1 id=\"2-搭建步骤\"><a href=\"#2-搭建步骤\" class=\"headerlink\" title=\"2. 搭建步骤\"></a>2. 搭建步骤</h1><h2 id=\"2-1-连接GitHub\"><a href=\"#2-1-连接GitHub\" class=\"headerlink\" title=\"2.1 连接GitHub\"></a>2.1 连接GitHub</h2><p>新建一个名为“<strong>Blog</strong>”的文件夹，</p>\n<p>如果出现如下类似问题（即无操作权限等问题），</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/2b93afa21cdfea92.jpg\"></p>\n<p>分别给 <strong>Node</strong>、<strong>Git</strong> 与 我们创建的 <strong>Blog</strong> 文件夹管理员权限。</p>\n<p>在文件夹内右键打开 “<strong>Git Bash Here</strong>”，</p>\n<p>不然在创建<u>SSH密钥</u>时很可能出现 “<strong>unknown key type -rsa</strong>” 的错误。</p>\n<p>在控制台内一次输入以下命令，</p>\n<p><code>git config --global user.name \"GitHub 用户名\"</code><br><code>git config --global user.email \"GitHub 邮箱\"</code></p>\n<h2 id=\"2-2-SSH密钥\"><a href=\"#2-2-SSH密钥\" class=\"headerlink\" title=\"2.2 SSH密钥\"></a>2.2 SSH密钥</h2><h3 id=\"2-2-1-创建密钥\"><a href=\"#2-2-1-创建密钥\" class=\"headerlink\" title=\"2.2.1 创建密钥\"></a>2.2.1 创建密钥</h3><p>输入 <code>ssh-keygen -t rsa -C \"GitHub 邮箱\"</code></p>\n<p>之后只需要摁4次回车就🆗；</p>\n<h2 id=\"2-2-2-添加密钥\"><a href=\"#2-2-2-添加密钥\" class=\"headerlink\" title=\"2.2.2 添加密钥\"></a>2.2.2 添加密钥</h2><p>通过资源管理器进入如下目录 <strong>[C:\\Users\\用户名\\.ssh]</strong> （此处记得勾选“隐藏的项目”），</p>\n<p>用记事本打开公钥 <strong>id_rsa.pub</strong> 文件 <strong>Ctrl + A</strong> 选择全部，复制内容。</p>\n<p>登录<strong>GitHub</strong>，进入 <strong>Settings</strong> 界面，选择左栏的 <strong>SSH and GPG  keys</strong>，</p>\n<p>选择 <strong>New SSH key</strong> ，<strong>Title</strong> 随便填写，</p>\n<p>将 <strong>id_rua.pub</strong> ，将内容复制进 “<strong>Key</strong>”，</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/be87470507217303.png\">\n\n<p>这步以后，会出现一长串 <strong>SSH</strong> 密钥 ，在之后我们会用上。</p>\n<h2 id=\"2-3-进行连接\"><a href=\"#2-3-进行连接\" class=\"headerlink\" title=\"2.3 进行连接\"></a>2.3 进行连接</h2><p>右键桌面空白部分，选择打开 <strong>Git Bash</strong> ，输入</p>\n<p><code>ssh -T git@github.com</code></p>\n<p>出现 “Are you sure……”等字样，输入 <strong>yes</strong>  回车确认。</p>\n<p>显示“You’ve successfully……”等字样即连接成功。</p>\n<h2 id=\"2-3-创建Git-Repo\"><a href=\"#2-3-创建Git-Repo\" class=\"headerlink\" title=\"2.3 创建Git Repo\"></a>2.3 创建Git Repo</h2><p>在<strong>GitHub</strong>界面点击如下图所示 “<strong>new repository</strong>” 新建仓库，</p>\n<p><img src=\"https://i.bmp.ovh/imgs/2022/03/75160d297ca82600.png\"></p>\n<p>填写方式如下，</p>\n<p><strong>README.md</strong>可以不用勾选。</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/88161a9d9dbd2cfa.png\">\n\n<h2 id=\"2-4-Hexo配置\"><a href=\"#2-4-Hexo配置\" class=\"headerlink\" title=\"2.4 Hexo配置\"></a>2.4 Hexo配置</h2><h3 id=\"2-4-1-安装-Hexo\"><a href=\"#2-4-1-安装-Hexo\" class=\"headerlink\" title=\"2.4.1 安装 Hexo\"></a>2.4.1 安装 Hexo</h3><p>使用 <strong>npm</strong> 安装程序</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<p>等待其安装完毕，时间也许会有点久…耐心等一下…</p>\n<h3 id=\"2-4-2-初始化\"><a href=\"#2-4-2-初始化\" class=\"headerlink\" title=\"2.4.2 初始化\"></a>2.4.2 初始化</h3><p>输入指令初始化，</p>\n<p><code>hexo init</code></p>\n<p>这时我们创建的<strong>Blog</strong>文件夹内会出现<strong>Hexo</strong>的各种文件，</p>\n<p>结构如下</p>\n<ul>\n<li>  _config.yml        # 配置文件</li>\n<li>  package.json               # 应用程序信息</li>\n<li>  scaffolds                  # 模板</li>\n<li>source                     # 存放用户资源，文档等<ul>\n<li>  _drafts</li>\n<li>  _posts</li>\n</ul>\n</li>\n<li>  themes                    # 主题文件夹</li>\n<li>  public                   # 网站文件</li>\n</ul>\n<p>输入如下指令，生成静态网页，</p>\n<p><code>hexo g</code></p>\n<p>输入如下指令，可以访问 <a class=\"link\" href=\"http://localhost:4000/\">http://localhost:4000<i class=\"fas fa-external-link-alt\"></i></a> 在本地预览页面，</p>\n<p><code>hexo server</code></p>\n<p>按 <strong>Ctrl + C</strong> 关闭服务器。</p>\n<h2 id=\"2-5-上传至GitHub-Repo\"><a href=\"#2-5-上传至GitHub-Repo\" class=\"headerlink\" title=\"2.5 上传至GitHub Repo\"></a>2.5 上传至GitHub Repo</h2><p>这部分属于<strong>Git</strong>的用法，本篇文章仅展示流程。</p>\n<p>（我也不是理解的特别透彻，就不班门弄斧了🙏）</p>\n<p><a href=\"(https://zhuanlan.zhihu.com/p/21193604)\">Learn more</a></p>\n<p>初始化<strong>Git</strong></p>\n<p><code>git init</code></p>\n<p>选择当前文件夹所有的文件，</p>\n<p><code>git add .</code></p>\n<p>将选择追踪的文件全部加入<u>缓冲区</u>，</p>\n<p>注释随意填写但不能为空，</p>\n<p><code>git commit -am “注释（代码提交信息）”</code></p>\n<p>创建<strong>main</strong>分支，</p>\n<p><code>git branch -M main</code></p>\n<p><u>链接</u>即为自己<strong>GitHub Repo</strong>的<u>SSH</u>，如下图，</p>\n<p><img src=\"https://i.bmp.ovh/imgs/2022/03/c4fb128a4b566dcd.png\"></p>\n<p>确定连接至<strong>Github</strong> <strong>Repo</strong> ，</p>\n<p><code>git remote add origin “链接”</code></p>\n<p>这步结束以后会要求我们输入我们的 <u>SSH私钥</u>，</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/2940c32df77479f1.png\">\n\n<p>上传缓冲区的文件至<strong>GitHub Repo</strong>中的<strong>main</strong>分支，</p>\n<p><code>git push -u origin main</code></p>\n<p>这一步千万千万不要上传到<strong>master</strong>分支！！！</p>\n<div align=\"center\">千万不要！！！</div>\n\n\n<h2 id=\"2-6-Vercel配置\"><a href=\"#2-6-Vercel配置\" class=\"headerlink\" title=\"2.6 Vercel配置\"></a>2.6 Vercel配置</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/d0ec96c7463c99b2.png\"></p>\n<p>选择 “<strong>Browse All Templates</strong>” -&gt; 选择 “<strong>Hexo</strong>” 模板</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/fe3685a4793c1cbc.png\"></p>\n<p>在此页面选择 “<strong>Import a different Git Repository</strong>”</p>\n<p>选择我们最开始创建的 <strong>GitHub Repo</strong> 点击 “<strong>Import</strong>”</p>\n<p>点击 “<strong>Deploy</strong>” 完成部署，</p>\n<p>最后可通过图中连接进行访问我们的主页。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/56d9cee4ac785336.png\"></p>\n<hr>\n<h1 id=\"3-后期运营\"><a href=\"#3-后期运营\" class=\"headerlink\" title=\"3. 后期运营\"></a>3. 后期运营</h1><p>我们搭建 <strong>Blog</strong> 在此就已经大体上搭建好了，</p>\n<p>后期就是我们自己上传文章、配置各类文件或者使用主题进行美化等等。</p>\n<h2 id=\"3-1-新建文章\"><a href=\"#3-1-新建文章\" class=\"headerlink\" title=\"3.1 新建文章\"></a>3.1 新建文章</h2><p>使用以下命令新建文章，</p>\n<p><code>hexo new post 文章名</code></p>\n<p>文章的模板储存在 “<strong>scaffolds</strong>” 文件夹中，可以更换里边的模板，</p>\n<p>以更改我们创建的初始文章格式。</p>\n<h2 id=\"3-2-新建页面\"><a href=\"#3-2-新建页面\" class=\"headerlink\" title=\"3.2 新建页面\"></a>3.2 新建页面</h2><p>使用以下命令新建页面，</p>\n<p><code>hexo new page 页面名</code></p>\n<p>模板储存地址同上。</p>\n<h2 id=\"3-3-上传页面\"><a href=\"#3-3-上传页面\" class=\"headerlink\" title=\"3.3 上传页面\"></a>3.3 上传页面</h2><p>在我们在本地更新完页面以后，</p>\n<p>文章储存在“<strong>Blog\\source\\_posts</strong>” 中，</p>\n<p>当我们更新完文件并生成静态页面以后，</p>\n<p>依次使用</p>\n<p><code>git add .</code></p>\n<p><code>git commit -am “注释”</code></p>\n<p><code>git push -u origin main</code></p>\n<p>进行上传，<strong>vercel</strong> 将会自动部署。</p>\n<h2 id=\"3-4-清除页面\"><a href=\"#3-4-清除页面\" class=\"headerlink\" title=\"3.4 清除页面\"></a>3.4 清除页面</h2><p>修改并部署后没有效果，</p>\n<p>使用如下指令进行清除，然后再重新生成部署，</p>\n<p><code>hexo clean</code></p>\n<h2 id=\"3-5-主题下载\"><a href=\"#3-5-主题下载\" class=\"headerlink\" title=\"3.5 主题下载\"></a>3.5 主题下载</h2><p>在<a class=\"link\" href=\"https://hexo.io/themes/\">Themes | Hexo<i class=\"fas fa-external-link-alt\"></i></a>可以选择自己喜欢的主题，并在 <strong>Blog</strong> 文件夹页面，通过 <strong>Git Bash Here</strong> 进行下载，在相关的主题介绍内有其具体详细的介绍，在此就不多赘述。</p>\n<hr>\n<h1 id=\"4-域名更换\"><a href=\"#4-域名更换\" class=\"headerlink\" title=\"*4. 域名更换\"></a>*4. 域名更换</h1><h2 id=\"4-1-Vercel配置\"><a href=\"#4-1-Vercel配置\" class=\"headerlink\" title=\"*4.1 Vercel配置\"></a>*4.1 Vercel配置</h2><p>如果我们购买了自己的域名，我们可以在</p>\n<p>菜单栏中的 <strong>Domain</strong> 中点击 <strong>Add</strong></p>\n<p>选择我们要绑定的项目（即<strong>Blog</strong>），</p>\n<p>点击 <strong>Continue</strong> ，</p>\n<p>输入我们的 <strong>域名 + 后缀</strong> ，</p>\n<p>添加完毕后会显示如下图的界面。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/c44c3ef8c7d90e50.png\"></p>\n<h2 id=\"4-2-DNS解析\"><a href=\"#4-2-DNS解析\" class=\"headerlink\" title=\"*4.2 DNS解析\"></a>*4.2 DNS解析</h2><p>进入我们的域名管理界面，</p>\n<p>选择 “<strong>DNS 解析</strong>“ -&gt; ”<strong>域名解析</strong>“，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/daf5d128c5a5cfb1.png\"></p>\n<p>如图进行添加，我们就能够通过我们自己的域名访问<strong>Blog</strong>了。</p>\n<hr>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"#结语\"></a>#结语</h1><p>总的来说全程都是免费的，不花一分钱….这种方式并没有用到<strong>GitHub Pages</strong>，如果对这种方式该兴趣的可以看看参考网站的第一个。</p>\n<p>这种方式写博客较为稳定，但是上传的过程会略显麻烦，却能在过程中学到很多的东西。</p>\n<p>本篇文章也许有些地方还不够详尽，欢迎大家提出进行进一步修改，共同进步。</p>\n<img src=\"bg.png\" width=\"360\" height=\"450\">\n\n\n\n\n\n\n\n\n\n\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://zhuanlan.zhihu.com/p/60578464\">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://cn.bing.com/search?q=%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5&cvid=d95f1ce54fda4d2dbdadf30305e9e274&aqs=edge..69i57.2690j0j1&pglt=171&FORM=ANNTA1&PC=ASTS\">静态网页 <i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\">About GitHub Pages - GitHub Docs<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://hexo.io/zh-cn/\">Hexo<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://vercel.com/\">vercel<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://zhuanlan.zhihu.com/p/21193604\">git - 入门指南 - 知乎 (zhihu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://aymetic.com/post/935c9419\">Vercel绑定个人域名 | Aymeticの小窝<i class=\"fas fa-external-link-alt\"></i></a></p>\n","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"#前言\"></a>#前言</h1><blockquote>\n<p>  本文旨在将搭建本<strong>Blog</strong>的流程记录下来，并且让更多比我还小白的小白能看得明白</p>\n<p>  （也方便以后自己更改调试这些页面…），本文作者相关的基础也还在学习中，</p>\n<p>  有错误欢迎大家指正，文中出现的参考网站等，将会写在文末。</p>\n</blockquote>\n<h1 id=\"0-简介\"><a href=\"#0-简介\" class=\"headerlink\" title=\"0. 简介\"></a>0. 简介</h1><h2 id=\"0-1-What-is-GitHub-Pages？\"><a href=\"#0-1-What-is-GitHub-Pages？\" class=\"headerlink\" title=\"0.1 What is GitHub Pages？\"></a>0.1 What is GitHub Pages？</h2><p><strong>GitHub Pages</strong> 是 <strong>Github</strong> 官方提供的免费的静态站点托管服务，通过 <strong>GitHub 仓库</strong> 托管与发布我们的静态网站页面，这样我们基本不用操心维护的问题。</p>\n<p>这种方式的缺点就是，在国内访问 <strong>Github</strong> 的速度有点 … </p>\n<p><a class=\"link\" href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\">Know More<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>在不运用 <strong>Vercle</strong> 的时候我们使用此种方法。</p>\n<p>本篇文章将着重讲三者（<strong>GitHub + Hexo +Vercel</strong>）同时使用的配置流程。</p>\n<h2 id=\"0-2-What-is-Hexo？\"><a href=\"#0-2-What-is-Hexo？\" class=\"headerlink\" title=\"0.2 What is Hexo？\"></a>0.2 What is Hexo？</h2><p><strong>Hexo</strong> 是一个静态博客框架，基于 <strong>Node.js</strong> 运行，可以将我们撰写的 <strong>Markdown</strong> 文档（.md）解析渲染成静态的 <strong>HTML</strong> 网页，我所使用的写 <strong>Markdown</strong> 软件是 <strong>Typora</strong>。    </p>\n<p><a class=\"link\" href=\"https://hexo.io/zh-cn/\">Know More<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"0-3-What-is-vercel？\"><a href=\"#0-3-What-is-vercel？\" class=\"headerlink\" title=\"0.3 What is vercel？\"></a>0.3 What is vercel？</h2><p><strong>Vercel</strong> 是一家提供静态网站托管的云平台，能从 <strong>Github</strong> 仓库中拉取代码，能够有效地提升我们访问网站的速度。</p>\n<p><a class=\"link\" href=\"https://vercel.com/\">Know More<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"0-4-How-they-work？\"><a href=\"#0-4-How-they-work？\" class=\"headerlink\" title=\"0.4 How they work？\"></a>0.4 How they work？</h2><p>本地撰写好 <strong>Markdown</strong> 格式文章后，通过 <strong>Hexo</strong> 解析文档，渲染生成各类主题样式的 <strong>HTML</strong> <a class=\"link\" href=\"https://baike.baidu.com/item/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/6327183\">静态网页<i class=\"fas fa-external-link-alt\"></i></a>，再上传到 <strong>GitHub</strong> <strong>Repo</strong> 中，<strong>Vercel</strong> 通过拉取 <strong>GitHub</strong> <strong>库</strong> 中的数据以供访客访问。</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/40038a04b8da3713.png\">\n\n<hr>\n<h1 id=\"1-基础准备\"><a href=\"#1-基础准备\" class=\"headerlink\" title=\"1. 基础准备\"></a>1. 基础准备</h1><h2 id=\"1-1-环境搭建\"><a href=\"#1-1-环境搭建\" class=\"headerlink\" title=\"1.1 环境搭建\"></a>1.1 环境搭建</h2><p>安装<strong>Node.js</strong> + 安装<strong>Git</strong></p>\n<p><a class=\"link\" href=\"https://nodejs.org/zh-cn\">Node.js<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://git-scm.com/downloads\">Git<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>安装完成后，用<strong>Win</strong> + <strong>R</strong> 键输入 <strong>cmd</strong> 并打开，</p>\n<p>在命令框内输入 <strong>node -v</strong> 如果出现版本号则表示安装成功，</p>\n<img src=\"https://i.bmp.ovh/imgs/2022/03/182b37ed66fe4298.png\">\n\n<p>输入 <strong>npm install -g yarn</strong> 安装 <strong>yarn</strong>，</p>\n<p>完成后同理检查版本已确认安装。</p>\n<p>使用 <strong>git –version</strong> 完成检查。</p>\n<h2 id=\"1-2-账号注册\"><a href=\"#1-2-账号注册\" class=\"headerlink\" title=\"1.2 账号注册\"></a>1.2 账号注册</h2><p><strong>Github</strong>账号 + <strong>vercel</strong>账号 </p>\n<h2 id=\"1-3-域名准备\"><a href=\"#1-3-域名准备\" class=\"headerlink\" title=\"1.3 域名准备\"></a>1.3 域名准备</h2><p>这个环节可有可无，感兴趣可以自己买一个域名…</p>\n<p>这样就可以不用 <strong>Vercel</strong> 给出的。</p>\n<hr>\n<h1 id=\"2-搭建步骤\"><a href=\"#2-搭建步骤\" class=\"headerlink\" title=\"2. 搭建步骤\"></a>2. 搭建步骤</h1><h2 id=\"2-1-连接GitHub\"><a href=\"#2-1-连接GitHub\" class=\"headerlink\" title=\"2.1 连接GitHub\"></a>2.1 连接GitHub</h2><p>新建一个名为“<strong>Blog</strong>”的文件夹，</p>\n<p>如果出现如下类似问题（即无操作权限等问题），</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/2b93afa21cdfea92.jpg\"></p>\n<p>分别给 <strong>Node</strong>、<strong>Git</strong> 与 我们创建的 <strong>Blog</strong> 文件夹管理员权限。</p>\n<p>在文件夹内右键打开 “<strong>Git Bash Here</strong>”，</p>\n<p>不然在创建<u>SSH密钥</u>时很可能出现 “<strong>unknown key type -rsa</strong>” 的错误。</p>\n<p>在控制台内一次输入以下命令，</p>\n<p><code>git config --global user.name \"GitHub 用户名\"</code><br><code>git config --global user.email \"GitHub 邮箱\"</code></p>\n<h2 id=\"2-2-SSH密钥\"><a href=\"#2-2-SSH密钥\" class=\"headerlink\" title=\"2.2 SSH密钥\"></a>2.2 SSH密钥</h2><h3 id=\"2-2-1-创建密钥\"><a href=\"#2-2-1-创建密钥\" class=\"headerlink\" title=\"2.2.1 创建密钥\"></a>2.2.1 创建密钥</h3><p>输入 <code>ssh-keygen -t rsa -C \"GitHub 邮箱\"</code></p>\n<p>之后只需要摁4次回车就🆗；</p>\n<h2 id=\"2-2-2-添加密钥\"><a href=\"#2-2-2-添加密钥\" class=\"headerlink\" title=\"2.2.2 添加密钥\"></a>2.2.2 添加密钥</h2><p>通过资源管理器进入如下目录 <strong>[C:\\Users\\用户名\\.ssh]</strong> （此处记得勾选“隐藏的项目”），</p>\n<p>用记事本打开公钥 <strong>id_rsa.pub</strong> 文件 <strong>Ctrl + A</strong> 选择全部，复制内容。</p>\n<p>登录<strong>GitHub</strong>，进入 <strong>Settings</strong> 界面，选择左栏的 <strong>SSH and GPG  keys</strong>，</p>\n<p>选择 <strong>New SSH key</strong> ，<strong>Title</strong> 随便填写，</p>\n<p>将 <strong>id_rua.pub</strong> ，将内容复制进 “<strong>Key</strong>”，</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/be87470507217303.png\">\n\n<p>这步以后，会出现一长串 <strong>SSH</strong> 密钥 ，在之后我们会用上。</p>\n<h2 id=\"2-3-进行连接\"><a href=\"#2-3-进行连接\" class=\"headerlink\" title=\"2.3 进行连接\"></a>2.3 进行连接</h2><p>右键桌面空白部分，选择打开 <strong>Git Bash</strong> ，输入</p>\n<p><code>ssh -T git@github.com</code></p>\n<p>出现 “Are you sure……”等字样，输入 <strong>yes</strong>  回车确认。</p>\n<p>显示“You’ve successfully……”等字样即连接成功。</p>\n<h2 id=\"2-3-创建Git-Repo\"><a href=\"#2-3-创建Git-Repo\" class=\"headerlink\" title=\"2.3 创建Git Repo\"></a>2.3 创建Git Repo</h2><p>在<strong>GitHub</strong>界面点击如下图所示 “<strong>new repository</strong>” 新建仓库，</p>\n<p><img src=\"https://i.bmp.ovh/imgs/2022/03/75160d297ca82600.png\"></p>\n<p>填写方式如下，</p>\n<p><strong>README.md</strong>可以不用勾选。</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/88161a9d9dbd2cfa.png\">\n\n<h2 id=\"2-4-Hexo配置\"><a href=\"#2-4-Hexo配置\" class=\"headerlink\" title=\"2.4 Hexo配置\"></a>2.4 Hexo配置</h2><h3 id=\"2-4-1-安装-Hexo\"><a href=\"#2-4-1-安装-Hexo\" class=\"headerlink\" title=\"2.4.1 安装 Hexo\"></a>2.4.1 安装 Hexo</h3><p>使用 <strong>npm</strong> 安装程序</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<p>等待其安装完毕，时间也许会有点久…耐心等一下…</p>\n<h3 id=\"2-4-2-初始化\"><a href=\"#2-4-2-初始化\" class=\"headerlink\" title=\"2.4.2 初始化\"></a>2.4.2 初始化</h3><p>输入指令初始化，</p>\n<p><code>hexo init</code></p>\n<p>这时我们创建的<strong>Blog</strong>文件夹内会出现<strong>Hexo</strong>的各种文件，</p>\n<p>结构如下</p>\n<ul>\n<li>  _config.yml        # 配置文件</li>\n<li>  package.json               # 应用程序信息</li>\n<li>  scaffolds                  # 模板</li>\n<li>source                     # 存放用户资源，文档等<ul>\n<li>  _drafts</li>\n<li>  _posts</li>\n</ul>\n</li>\n<li>  themes                    # 主题文件夹</li>\n<li>  public                   # 网站文件</li>\n</ul>\n<p>输入如下指令，生成静态网页，</p>\n<p><code>hexo g</code></p>\n<p>输入如下指令，可以访问 <a class=\"link\" href=\"http://localhost:4000/\">http://localhost:4000<i class=\"fas fa-external-link-alt\"></i></a> 在本地预览页面，</p>\n<p><code>hexo server</code></p>\n<p>按 <strong>Ctrl + C</strong> 关闭服务器。</p>\n<h2 id=\"2-5-上传至GitHub-Repo\"><a href=\"#2-5-上传至GitHub-Repo\" class=\"headerlink\" title=\"2.5 上传至GitHub Repo\"></a>2.5 上传至GitHub Repo</h2><p>这部分属于<strong>Git</strong>的用法，本篇文章仅展示流程。</p>\n<p>（我也不是理解的特别透彻，就不班门弄斧了🙏）</p>\n<p><a href=\"(https://zhuanlan.zhihu.com/p/21193604)\">Learn more</a></p>\n<p>初始化<strong>Git</strong></p>\n<p><code>git init</code></p>\n<p>选择当前文件夹所有的文件，</p>\n<p><code>git add .</code></p>\n<p>将选择追踪的文件全部加入<u>缓冲区</u>，</p>\n<p>注释随意填写但不能为空，</p>\n<p><code>git commit -am “注释（代码提交信息）”</code></p>\n<p>创建<strong>main</strong>分支，</p>\n<p><code>git branch -M main</code></p>\n<p><u>链接</u>即为自己<strong>GitHub Repo</strong>的<u>SSH</u>，如下图，</p>\n<p><img src=\"https://i.bmp.ovh/imgs/2022/03/c4fb128a4b566dcd.png\"></p>\n<p>确定连接至<strong>Github</strong> <strong>Repo</strong> ，</p>\n<p><code>git remote add origin “链接”</code></p>\n<p>这步结束以后会要求我们输入我们的 <u>SSH私钥</u>，</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/2940c32df77479f1.png\">\n\n<p>上传缓冲区的文件至<strong>GitHub Repo</strong>中的<strong>main</strong>分支，</p>\n<p><code>git push -u origin main</code></p>\n<p>这一步千万千万不要上传到<strong>master</strong>分支！！！</p>\n<div align=\"center\">千万不要！！！</div>\n\n\n<h2 id=\"2-6-Vercel配置\"><a href=\"#2-6-Vercel配置\" class=\"headerlink\" title=\"2.6 Vercel配置\"></a>2.6 Vercel配置</h2><p><img src=\"https://s3.bmp.ovh/imgs/2022/03/d0ec96c7463c99b2.png\"></p>\n<p>选择 “<strong>Browse All Templates</strong>” -&gt; 选择 “<strong>Hexo</strong>” 模板</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/fe3685a4793c1cbc.png\"></p>\n<p>在此页面选择 “<strong>Import a different Git Repository</strong>”</p>\n<p>选择我们最开始创建的 <strong>GitHub Repo</strong> 点击 “<strong>Import</strong>”</p>\n<p>点击 “<strong>Deploy</strong>” 完成部署，</p>\n<p>最后可通过图中连接进行访问我们的主页。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/56d9cee4ac785336.png\"></p>\n<hr>\n<h1 id=\"3-后期运营\"><a href=\"#3-后期运营\" class=\"headerlink\" title=\"3. 后期运营\"></a>3. 后期运营</h1><p>我们搭建 <strong>Blog</strong> 在此就已经大体上搭建好了，</p>\n<p>后期就是我们自己上传文章、配置各类文件或者使用主题进行美化等等。</p>\n<h2 id=\"3-1-新建文章\"><a href=\"#3-1-新建文章\" class=\"headerlink\" title=\"3.1 新建文章\"></a>3.1 新建文章</h2><p>使用以下命令新建文章，</p>\n<p><code>hexo new post 文章名</code></p>\n<p>文章的模板储存在 “<strong>scaffolds</strong>” 文件夹中，可以更换里边的模板，</p>\n<p>以更改我们创建的初始文章格式。</p>\n<h2 id=\"3-2-新建页面\"><a href=\"#3-2-新建页面\" class=\"headerlink\" title=\"3.2 新建页面\"></a>3.2 新建页面</h2><p>使用以下命令新建页面，</p>\n<p><code>hexo new page 页面名</code></p>\n<p>模板储存地址同上。</p>\n<h2 id=\"3-3-上传页面\"><a href=\"#3-3-上传页面\" class=\"headerlink\" title=\"3.3 上传页面\"></a>3.3 上传页面</h2><p>在我们在本地更新完页面以后，</p>\n<p>文章储存在“<strong>Blog\\source\\_posts</strong>” 中，</p>\n<p>当我们更新完文件并生成静态页面以后，</p>\n<p>依次使用</p>\n<p><code>git add .</code></p>\n<p><code>git commit -am “注释”</code></p>\n<p><code>git push -u origin main</code></p>\n<p>进行上传，<strong>vercel</strong> 将会自动部署。</p>\n<h2 id=\"3-4-清除页面\"><a href=\"#3-4-清除页面\" class=\"headerlink\" title=\"3.4 清除页面\"></a>3.4 清除页面</h2><p>修改并部署后没有效果，</p>\n<p>使用如下指令进行清除，然后再重新生成部署，</p>\n<p><code>hexo clean</code></p>\n<h2 id=\"3-5-主题下载\"><a href=\"#3-5-主题下载\" class=\"headerlink\" title=\"3.5 主题下载\"></a>3.5 主题下载</h2><p>在<a class=\"link\" href=\"https://hexo.io/themes/\">Themes | Hexo<i class=\"fas fa-external-link-alt\"></i></a>可以选择自己喜欢的主题，并在 <strong>Blog</strong> 文件夹页面，通过 <strong>Git Bash Here</strong> 进行下载，在相关的主题介绍内有其具体详细的介绍，在此就不多赘述。</p>\n<hr>\n<h1 id=\"4-域名更换\"><a href=\"#4-域名更换\" class=\"headerlink\" title=\"*4. 域名更换\"></a>*4. 域名更换</h1><h2 id=\"4-1-Vercel配置\"><a href=\"#4-1-Vercel配置\" class=\"headerlink\" title=\"*4.1 Vercel配置\"></a>*4.1 Vercel配置</h2><p>如果我们购买了自己的域名，我们可以在</p>\n<p>菜单栏中的 <strong>Domain</strong> 中点击 <strong>Add</strong></p>\n<p>选择我们要绑定的项目（即<strong>Blog</strong>），</p>\n<p>点击 <strong>Continue</strong> ，</p>\n<p>输入我们的 <strong>域名 + 后缀</strong> ，</p>\n<p>添加完毕后会显示如下图的界面。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/c44c3ef8c7d90e50.png\"></p>\n<h2 id=\"4-2-DNS解析\"><a href=\"#4-2-DNS解析\" class=\"headerlink\" title=\"*4.2 DNS解析\"></a>*4.2 DNS解析</h2><p>进入我们的域名管理界面，</p>\n<p>选择 “<strong>DNS 解析</strong>“ -&gt; ”<strong>域名解析</strong>“，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/daf5d128c5a5cfb1.png\"></p>\n<p>如图进行添加，我们就能够通过我们自己的域名访问<strong>Blog</strong>了。</p>\n<hr>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"#结语\"></a>#结语</h1><p>总的来说全程都是免费的，不花一分钱….这种方式并没有用到<strong>GitHub Pages</strong>，如果对这种方式该兴趣的可以看看参考网站的第一个。</p>\n<p>这种方式写博客较为稳定，但是上传的过程会略显麻烦，却能在过程中学到很多的东西。</p>\n<p>本篇文章也许有些地方还不够详尽，欢迎大家提出进行进一步修改，共同进步。</p>\n<img src=\"bg.png\" width=\"360\" height=\"450\">\n\n\n\n\n\n\n\n\n\n\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://zhuanlan.zhihu.com/p/60578464\">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://cn.bing.com/search?q=%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5&cvid=d95f1ce54fda4d2dbdadf30305e9e274&aqs=edge..69i57.2690j0j1&pglt=171&FORM=ANNTA1&PC=ASTS\">静态网页 <i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\">About GitHub Pages - GitHub Docs<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://hexo.io/zh-cn/\">Hexo<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://vercel.com/\">vercel<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://zhuanlan.zhihu.com/p/21193604\">git - 入门指南 - 知乎 (zhihu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://aymetic.com/post/935c9419\">Vercel绑定个人域名 | Aymeticの小窝<i class=\"fas fa-external-link-alt\"></i></a></p>\n"},{"title":"如何在网页中居中字体","mathjax":true,"date":"2022-03-13T15:41:16.000Z","comment":true,"_content":"\n>**Typora** 中并没有居中的选项，要实现居中只有使用 **HTML**  代码块\n\n# 居中方式\n\n要把字体居中有如下两种代码：\n\n1.  `<center>这里输入要居中改的字体</center>`\n\n2.   ` <div align = \"center\">这里输入要居中改的字体</div>`\n\n第一种在**Markdown**中使用，并通过**Hexo**生成静态页面后会使此行以后的文本都被居中，如下图，就是使用的<u>第一种</u>代码，在本文结尾也会做出演示（*使用右侧设置按钮跳转至页面结尾*），\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/342af2eb0ccd3555.png\"  width=\"500\"  height = \"\"/>\n\n\n\n<u>第二种</u>则不会对生成的页面产生影响。\n\n<div align = \"center\">第二种居中测试</div>\n\n# 便捷方式\n\n鉴于<u>每次都要输入代码块的方式较为复杂</u>，可以使用<u>输入法自带的自定义快捷输入</u>：\n\n右键电脑右下角的输入法，进入“**设置**”界面，\n\n![](https://s3.bmp.ovh/imgs/2022/03/643f79d7102b8e4a.png)\n\n选择 “**词库和自学习**” ，\n\n![](https://s3.bmp.ovh/imgs/2022/03/ee19b9511e6b6e23.png)\n\n-> “**添加或编辑自定义短语**”，-> “**添加**”，\n\n![](https://s3.bmp.ovh/imgs/2022/03/6f4eb8a38f36fe1a.png)\n\n输入我们需要的自定义快捷方式与对应的代码，\n\n![](https://s3.bmp.ovh/imgs/2022/03/f32d1b8331beb18c.png)\n\n然后就能够快捷输入我们的自定代码块，\n\n![](https://s3.bmp.ovh/imgs/2022/03/9dab070c4921eb47.png)\n\n### # 附上Markdown插入图片的方式\n\n`<img src=\"图片地址/URL\"  width=\"宽\"  height = \"高\" />`\n\n\n\n<center>试试第一种居中的效果<center/>\n\n参考网站：\n\n[Typora设置居中的方法（标题/文字/文本）](https://blog.csdn.net/sinat_25207295/article/details/116033800)\n\n[Win10自带输入法如何自定义快速输入-百度经验 (baidu.com)](https://jingyan.baidu.com/article/fdffd1f8e896f8b3e88ca158.html)\n\n\n\n![emt](emt.jpg)","source":"_posts/如何在网页中居中字体.md","raw":"---\ntitle: 如何在网页中居中字体\nmathjax: true\ndate: 2022-03-13 23:41:16\ntags: [居中,Markdown]\ncategories: [Markdown]\ncomment: true\n---\n\n>**Typora** 中并没有居中的选项，要实现居中只有使用 **HTML**  代码块\n\n# 居中方式\n\n要把字体居中有如下两种代码：\n\n1.  `<center>这里输入要居中改的字体</center>`\n\n2.   ` <div align = \"center\">这里输入要居中改的字体</div>`\n\n第一种在**Markdown**中使用，并通过**Hexo**生成静态页面后会使此行以后的文本都被居中，如下图，就是使用的<u>第一种</u>代码，在本文结尾也会做出演示（*使用右侧设置按钮跳转至页面结尾*），\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/342af2eb0ccd3555.png\"  width=\"500\"  height = \"\"/>\n\n\n\n<u>第二种</u>则不会对生成的页面产生影响。\n\n<div align = \"center\">第二种居中测试</div>\n\n# 便捷方式\n\n鉴于<u>每次都要输入代码块的方式较为复杂</u>，可以使用<u>输入法自带的自定义快捷输入</u>：\n\n右键电脑右下角的输入法，进入“**设置**”界面，\n\n![](https://s3.bmp.ovh/imgs/2022/03/643f79d7102b8e4a.png)\n\n选择 “**词库和自学习**” ，\n\n![](https://s3.bmp.ovh/imgs/2022/03/ee19b9511e6b6e23.png)\n\n-> “**添加或编辑自定义短语**”，-> “**添加**”，\n\n![](https://s3.bmp.ovh/imgs/2022/03/6f4eb8a38f36fe1a.png)\n\n输入我们需要的自定义快捷方式与对应的代码，\n\n![](https://s3.bmp.ovh/imgs/2022/03/f32d1b8331beb18c.png)\n\n然后就能够快捷输入我们的自定代码块，\n\n![](https://s3.bmp.ovh/imgs/2022/03/9dab070c4921eb47.png)\n\n### # 附上Markdown插入图片的方式\n\n`<img src=\"图片地址/URL\"  width=\"宽\"  height = \"高\" />`\n\n\n\n<center>试试第一种居中的效果<center/>\n\n参考网站：\n\n[Typora设置居中的方法（标题/文字/文本）](https://blog.csdn.net/sinat_25207295/article/details/116033800)\n\n[Win10自带输入法如何自定义快速输入-百度经验 (baidu.com)](https://jingyan.baidu.com/article/fdffd1f8e896f8b3e88ca158.html)\n\n\n\n![emt](emt.jpg)","slug":"如何在网页中居中字体","published":1,"updated":"2022-03-15T10:08:25.897Z","_id":"cl0pgvhml000024v9ev4302l8","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><strong>Typora</strong> 中并没有居中的选项，要实现居中只有使用 <strong>HTML</strong>  代码块</p>\n</blockquote>\n<h1 id=\"居中方式\"><a href=\"#居中方式\" class=\"headerlink\" title=\"居中方式\"></a>居中方式</h1><p>要把字体居中有如下两种代码：</p>\n<ol>\n<li><p> <code>&lt;center&gt;这里输入要居中改的字体&lt;/center&gt;</code></p>\n</li>\n<li><p>  <code> &lt;div align = \"center\"&gt;这里输入要居中改的字体&lt;/div&gt;</code></p>\n</li>\n</ol>\n<p>第一种在<strong>Markdown</strong>中使用，并通过<strong>Hexo</strong>生成静态页面后会使此行以后的文本都被居中，如下图，就是使用的<u>第一种</u>代码，在本文结尾也会做出演示（<em>使用右侧设置按钮跳转至页面结尾</em>），</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/342af2eb0ccd3555.png\" width=\"500\" height=\"\">\n\n\n\n<p><u>第二种</u>则不会对生成的页面产生影响。</p>\n<div align=\"center\">第二种居中测试</div>\n\n<h1 id=\"便捷方式\"><a href=\"#便捷方式\" class=\"headerlink\" title=\"便捷方式\"></a>便捷方式</h1><p>鉴于<u>每次都要输入代码块的方式较为复杂</u>，可以使用<u>输入法自带的自定义快捷输入</u>：</p>\n<p>右键电脑右下角的输入法，进入“<strong>设置</strong>”界面，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/643f79d7102b8e4a.png\"></p>\n<p>选择 “<strong>词库和自学习</strong>” ，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/ee19b9511e6b6e23.png\"></p>\n<p>-&gt; “<strong>添加或编辑自定义短语</strong>”，-&gt; “<strong>添加</strong>”，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/6f4eb8a38f36fe1a.png\"></p>\n<p>输入我们需要的自定义快捷方式与对应的代码，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/f32d1b8331beb18c.png\"></p>\n<p>然后就能够快捷输入我们的自定代码块，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/9dab070c4921eb47.png\"></p>\n<h3 id=\"附上Markdown插入图片的方式\"><a href=\"#附上Markdown插入图片的方式\" class=\"headerlink\" title=\"# 附上Markdown插入图片的方式\"></a># 附上Markdown插入图片的方式</h3><p><code>&lt;img src=\"图片地址/URL\"  width=\"宽\"  height = \"高\" /&gt;</code></p>\n<center>试试第一种居中的效果<center></center>\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://blog.csdn.net/sinat_25207295/article/details/116033800\">Typora设置居中的方法（标题/文字/文本）<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://jingyan.baidu.com/article/fdffd1f8e896f8b3e88ca158.html\">Win10自带输入法如何自定义快速输入-百度经验 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><img src=\"emt.jpg\" alt=\"emt\"></p>\n</center>","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p><strong>Typora</strong> 中并没有居中的选项，要实现居中只有使用 <strong>HTML</strong>  代码块</p>\n</blockquote>\n<h1 id=\"居中方式\"><a href=\"#居中方式\" class=\"headerlink\" title=\"居中方式\"></a>居中方式</h1><p>要把字体居中有如下两种代码：</p>\n<ol>\n<li><p> <code>&lt;center&gt;这里输入要居中改的字体&lt;/center&gt;</code></p>\n</li>\n<li><p>  <code> &lt;div align = \"center\"&gt;这里输入要居中改的字体&lt;/div&gt;</code></p>\n</li>\n</ol>\n<p>第一种在<strong>Markdown</strong>中使用，并通过<strong>Hexo</strong>生成静态页面后会使此行以后的文本都被居中，如下图，就是使用的<u>第一种</u>代码，在本文结尾也会做出演示（<em>使用右侧设置按钮跳转至页面结尾</em>），</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/03/342af2eb0ccd3555.png\" width=\"500\" height=\"\">\n\n\n\n<p><u>第二种</u>则不会对生成的页面产生影响。</p>\n<div align=\"center\">第二种居中测试</div>\n\n<h1 id=\"便捷方式\"><a href=\"#便捷方式\" class=\"headerlink\" title=\"便捷方式\"></a>便捷方式</h1><p>鉴于<u>每次都要输入代码块的方式较为复杂</u>，可以使用<u>输入法自带的自定义快捷输入</u>：</p>\n<p>右键电脑右下角的输入法，进入“<strong>设置</strong>”界面，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/643f79d7102b8e4a.png\"></p>\n<p>选择 “<strong>词库和自学习</strong>” ，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/ee19b9511e6b6e23.png\"></p>\n<p>-&gt; “<strong>添加或编辑自定义短语</strong>”，-&gt; “<strong>添加</strong>”，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/6f4eb8a38f36fe1a.png\"></p>\n<p>输入我们需要的自定义快捷方式与对应的代码，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/f32d1b8331beb18c.png\"></p>\n<p>然后就能够快捷输入我们的自定代码块，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/9dab070c4921eb47.png\"></p>\n<h3 id=\"附上Markdown插入图片的方式\"><a href=\"#附上Markdown插入图片的方式\" class=\"headerlink\" title=\"# 附上Markdown插入图片的方式\"></a># 附上Markdown插入图片的方式</h3><p><code>&lt;img src=\"图片地址/URL\"  width=\"宽\"  height = \"高\" /&gt;</code></p>\n<center>试试第一种居中的效果<center></center>\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://blog.csdn.net/sinat_25207295/article/details/116033800\">Typora设置居中的方法（标题/文字/文本）<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://jingyan.baidu.com/article/fdffd1f8e896f8b3e88ca158.html\">Win10自带输入法如何自定义快速输入-百度经验 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><img src=\"emt.jpg\" alt=\"emt\"></p>\n</center>"},{"title":"利用Multisim完成李萨如图形仿真","mathjax":true,"date":"2022-03-16T15:00:42.000Z","comment":true,"_content":"\n>   因为大物实验的课上 李萨如图形 在 *3 : 2* 时显现的图形与老师PPT上的图形有些许出入，\n>   所以回来以后尝试自己用 *Multisim* 做一个仿真看看在此时 李萨如图形 到底是什么样子的。\n\n# 李萨如图形\n\n李萨如图形（Lissajous-Figure），亦可称为利萨茹图形，是指在<u>互相垂直的方向上</u>的两个频率成<u>简单整数比</u>的<u>简谐振动</u>所合成的<u>规则的、稳定的闭合曲线</u>。\n\n## * 简谐运动\n\n物体在<u>与位移成正比的恢复力作用</u>下，在其平衡位置附近<u>按正弦规律作往复的运动</u>。\n\n以*x*表示位移，*t*表示时间，这种振动的<u>数学表达式</u>为：\n\n$x=Asin(\\omega_nt+\\varphi)$，\n\n式中$A$为位移*x*的最大值，称为**振幅**，它表示<u>振动的强度</u>，\n\n$\\omega_n$ 表示<u>每秒中的振动的辐角增量</u>，称为<u>角频率</u>，也称<u>圆频率</u>；\n\n$\\varphi$ 称为**初相位**；\n\n以 $f=\\tfrac{\\omega_n}{2\\pi}$ 表示每秒中振动的周数，称为**频率**；\n\n频率的倒数，$T=\\tfrac{1}{f}$ ，表示振动一周所需的时间，称为**周期**。\n\n### * 简谐运动的三大要素\n\n振幅$A$、频率$f$（或角频率$\\omega_n$）、$\\varphi$初相位，称为简谐振动三要素。\n\n## 数学定义\n\n李萨如曲线由以下<u>参数方程</u>定义：\n\n$x(\\theta)=asin\\theta$\n\n$y(\\theta)=bsin(n\\theta+\\varphi)$\n\n其中，$n\\geqslant1$且$0\\leqslant\\varphi\\leqslant\\tfrac{\\pi}{2}$，\n\nn称为**曲线的参数**，是两个正弦振动的<u>频率比</u>。\n\n若比例为<u>有理数</u>，则$n=\\tfrac{q}{p}$，参数方程可以写作：\n\n$x(\\theta)=asin(p\\theta)$\n\n$y(\\theta)=bsin(q\\theta+\\varphi)$\n\n$0\\leqslant\\varphi\\leqslant2\\pi$\n\n## 通过李萨如图形得出频率比值\n\n当用 “*X-Y*” 方式，即 “ $Y_1$ 位移” 拉出，进入这一方式，\n\n此时，$Y_1$ 通道为 *X* 输入端，$Y_2$ 通道为 *Y* 输入端，当从 *X/Y* 这两个输入端<u>输入正弦信号</u>时，在示波管荧光屏上可显示出李萨如图形，根据图形可以<u>推算出两个信号之间的频率及相位关系</u>。\n\n根据如下方程我们可以得出 *X* 与 *Y* 两个正弦信号的频率关系：\n\n$\\tfrac{X方向切线对图形的切点数N_X}{Y方向切线对图形的切点数N_Y}=\\tfrac{f_y}{f_x}$\n\n## Multisim中绘制李萨如图形\n\n>   **Multisim** 中的<u>虚拟信号发生器</u>是不能够调节相位的，但是使用<u>交流信号源</u>代替信号发生器，就可以在设置中调整相位差。\n\n所以我们选择左上角的放置元件，\n\n在 “**POWER_SOURCES**” 一栏中拉取两个 “**AC_POWER**” 放置，\n\n并拉取三个 “**DGND**” 放置，\n\n从右侧栏中选择示波器，\n\n如下图放置，\n\n![](https://s3.bmp.ovh/imgs/2022/03/484445f75cfe9340.png)\n\n之后我们可以根据自己的需要调整 电压值、频率、相位差等数参数进行仿真实验。\n\n右上角 进行仿真 <u>双击示波器查看生成的李萨如图形</u>，\n\n下面列出常见的李萨如图形表（使用 *Multisim* 绘制），\n\n![](https://s3.bmp.ovh/imgs/2022/03/8187183a08e2f6ac.png)\n\n\n\n\n\n[利萨如图形_百度百科 (baidu.com)](https://baike.baidu.com/item/%E5%88%A9%E8%90%A8%E5%A6%82%E5%9B%BE%E5%BD%A2/10517125)\n\n[简谐运动_百度百科 (baidu.com)](https://baike.baidu.com/item/%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8/1101010)\n\n[在multisim中，如何产生李萨如图形，我没找到相位调节的地方_百度知道 (baidu.com)](https://zhidao.baidu.com/question/1796430360334163547.html)\n\n<div align = \"center\"><img src=\"emt.png\"/></div>\n\n","source":"_posts/利用Multisim完成李萨如图形仿真.md","raw":"---\ntitle: 利用Multisim完成李萨如图形仿真\nmathjax: true\ndate: 2022-03-16 23:00:42\ntags: [Multisim,李萨如图形]\ncategories: [Multisim]\ncomment: true\n---\n\n>   因为大物实验的课上 李萨如图形 在 *3 : 2* 时显现的图形与老师PPT上的图形有些许出入，\n>   所以回来以后尝试自己用 *Multisim* 做一个仿真看看在此时 李萨如图形 到底是什么样子的。\n\n# 李萨如图形\n\n李萨如图形（Lissajous-Figure），亦可称为利萨茹图形，是指在<u>互相垂直的方向上</u>的两个频率成<u>简单整数比</u>的<u>简谐振动</u>所合成的<u>规则的、稳定的闭合曲线</u>。\n\n## * 简谐运动\n\n物体在<u>与位移成正比的恢复力作用</u>下，在其平衡位置附近<u>按正弦规律作往复的运动</u>。\n\n以*x*表示位移，*t*表示时间，这种振动的<u>数学表达式</u>为：\n\n$x=Asin(\\omega_nt+\\varphi)$，\n\n式中$A$为位移*x*的最大值，称为**振幅**，它表示<u>振动的强度</u>，\n\n$\\omega_n$ 表示<u>每秒中的振动的辐角增量</u>，称为<u>角频率</u>，也称<u>圆频率</u>；\n\n$\\varphi$ 称为**初相位**；\n\n以 $f=\\tfrac{\\omega_n}{2\\pi}$ 表示每秒中振动的周数，称为**频率**；\n\n频率的倒数，$T=\\tfrac{1}{f}$ ，表示振动一周所需的时间，称为**周期**。\n\n### * 简谐运动的三大要素\n\n振幅$A$、频率$f$（或角频率$\\omega_n$）、$\\varphi$初相位，称为简谐振动三要素。\n\n## 数学定义\n\n李萨如曲线由以下<u>参数方程</u>定义：\n\n$x(\\theta)=asin\\theta$\n\n$y(\\theta)=bsin(n\\theta+\\varphi)$\n\n其中，$n\\geqslant1$且$0\\leqslant\\varphi\\leqslant\\tfrac{\\pi}{2}$，\n\nn称为**曲线的参数**，是两个正弦振动的<u>频率比</u>。\n\n若比例为<u>有理数</u>，则$n=\\tfrac{q}{p}$，参数方程可以写作：\n\n$x(\\theta)=asin(p\\theta)$\n\n$y(\\theta)=bsin(q\\theta+\\varphi)$\n\n$0\\leqslant\\varphi\\leqslant2\\pi$\n\n## 通过李萨如图形得出频率比值\n\n当用 “*X-Y*” 方式，即 “ $Y_1$ 位移” 拉出，进入这一方式，\n\n此时，$Y_1$ 通道为 *X* 输入端，$Y_2$ 通道为 *Y* 输入端，当从 *X/Y* 这两个输入端<u>输入正弦信号</u>时，在示波管荧光屏上可显示出李萨如图形，根据图形可以<u>推算出两个信号之间的频率及相位关系</u>。\n\n根据如下方程我们可以得出 *X* 与 *Y* 两个正弦信号的频率关系：\n\n$\\tfrac{X方向切线对图形的切点数N_X}{Y方向切线对图形的切点数N_Y}=\\tfrac{f_y}{f_x}$\n\n## Multisim中绘制李萨如图形\n\n>   **Multisim** 中的<u>虚拟信号发生器</u>是不能够调节相位的，但是使用<u>交流信号源</u>代替信号发生器，就可以在设置中调整相位差。\n\n所以我们选择左上角的放置元件，\n\n在 “**POWER_SOURCES**” 一栏中拉取两个 “**AC_POWER**” 放置，\n\n并拉取三个 “**DGND**” 放置，\n\n从右侧栏中选择示波器，\n\n如下图放置，\n\n![](https://s3.bmp.ovh/imgs/2022/03/484445f75cfe9340.png)\n\n之后我们可以根据自己的需要调整 电压值、频率、相位差等数参数进行仿真实验。\n\n右上角 进行仿真 <u>双击示波器查看生成的李萨如图形</u>，\n\n下面列出常见的李萨如图形表（使用 *Multisim* 绘制），\n\n![](https://s3.bmp.ovh/imgs/2022/03/8187183a08e2f6ac.png)\n\n\n\n\n\n[利萨如图形_百度百科 (baidu.com)](https://baike.baidu.com/item/%E5%88%A9%E8%90%A8%E5%A6%82%E5%9B%BE%E5%BD%A2/10517125)\n\n[简谐运动_百度百科 (baidu.com)](https://baike.baidu.com/item/%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8/1101010)\n\n[在multisim中，如何产生李萨如图形，我没找到相位调节的地方_百度知道 (baidu.com)](https://zhidao.baidu.com/question/1796430360334163547.html)\n\n<div align = \"center\"><img src=\"emt.png\"/></div>\n\n","slug":"利用Multisim完成李萨如图形仿真","published":1,"updated":"2022-03-17T01:20:58.602Z","_id":"cl0tsiyre0000cov90sbm2iy0","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>  因为大物实验的课上 李萨如图形 在 <em>3 : 2</em> 时显现的图形与老师PPT上的图形有些许出入，<br>  所以回来以后尝试自己用 <em>Multisim</em> 做一个仿真看看在此时 李萨如图形 到底是什么样子的。</p>\n</blockquote>\n<h1 id=\"李萨如图形\"><a href=\"#李萨如图形\" class=\"headerlink\" title=\"李萨如图形\"></a>李萨如图形</h1><p>李萨如图形（Lissajous-Figure），亦可称为利萨茹图形，是指在<u>互相垂直的方向上</u>的两个频率成<u>简单整数比</u>的<u>简谐振动</u>所合成的<u>规则的、稳定的闭合曲线</u>。</p>\n<h2 id=\"简谐运动\"><a href=\"#简谐运动\" class=\"headerlink\" title=\"* 简谐运动\"></a>* 简谐运动</h2><p>物体在<u>与位移成正比的恢复力作用</u>下，在其平衡位置附近<u>按正弦规律作往复的运动</u>。</p>\n<p>以<em>x</em>表示位移，<em>t</em>表示时间，这种振动的<u>数学表达式</u>为：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.584ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8214.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(849.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1905.6,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2655.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3124.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3469.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4069.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4458.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(5587.8,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6171,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7171.3,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7825.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，</p>\n<p>式中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>为位移<em>x</em>的最大值，称为<strong>振幅</strong>，它表示<u>振动的强度</u>，</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.555ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 1129.3 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container> 表示<u>每秒中的振动的辐角增量</u>，称为<u>角频率</u>，也称<u>圆频率</u>；</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.493ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.48ex\" height=\"1.493ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 654 660\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g></g></g></svg></mjx-container> 称为<strong>初相位</strong>；</p>\n<p>以 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.798ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.063ex\" height=\"2.528ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -764.8 3122.1 1117.6\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(827.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(1883.6,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msub\" transform=\"translate(220,451.6) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mrow\" transform=\"translate(241,-345) scale(0.707)\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g></g><rect width=\"998.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container> 表示每秒中振动的周数，称为<strong>频率</strong>；</p>\n<p>频率的倒数，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.108ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.485ex\" height=\"3.065ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 2866.5 1354.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(2037.6,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(237.7,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><rect width=\"588.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container> ，表示振动一周所需的时间，称为<strong>周期</strong>。</p>\n<h3 id=\"简谐运动的三大要素\"><a href=\"#简谐运动的三大要素\" class=\"headerlink\" title=\"* 简谐运动的三大要素\"></a>* 简谐运动的三大要素</h3><p>振幅<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>、频率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.244ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 550 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g></g></svg></mjx-container>（或角频率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.555ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 1129.3 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>）、<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.493ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.48ex\" height=\"1.493ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 654 660\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g></g></g></svg></mjx-container>初相位，称为简谐振动三要素。</p>\n<h2 id=\"数学定义\"><a href=\"#数学定义\" class=\"headerlink\" title=\"数学定义\"></a>数学定义</h2><p>李萨如曲线由以下<u>参数方程</u>定义：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.589ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5564.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(961,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1430,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2096.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3152.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3681.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4150.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4495.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5095.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.541ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8637 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(490,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(879,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1348,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2014.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3070.6,0)\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3499.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3968.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4313.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4913.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5302.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5902.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6593.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7594,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8248,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p>其中，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.506ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2433.6 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2A7E\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.552ex\" height=\"2.361ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -698.8 4664.2 1043.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2765.3,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(3821.1,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(220,394) scale(0.707)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(244.7,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><rect width=\"603.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container>，</p>\n<p>n称为<strong>曲线的参数</strong>，是两个正弦振动的<u>频率比</u>。</p>\n<p>若比例为<u>有理数</u>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.091ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.175ex\" height=\"2.878ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -789.7 2729.2 1271.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(1933.6,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(235.2,477.2) scale(0.707)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><rect width=\"555.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container>，参数方程可以写作：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.488ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6845.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(961,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1430,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2096.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3152.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3681.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4150.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4495.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5095.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5484.6,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5987.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6456.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.224ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8497 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(490,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(879,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1348,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2014.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3070.6,0)\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3499.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3968.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4313.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4913.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5302.6,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5762.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6453.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7454,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8108,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.493ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.066ex\" height=\"2ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 4891.1 884\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2765.3,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3821.1,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4321.1,0)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g></g></g></svg></mjx-container></p>\n<h2 id=\"通过李萨如图形得出频率比值\"><a href=\"#通过李萨如图形得出频率比值\" class=\"headerlink\" title=\"通过李萨如图形得出频率比值\"></a>通过李萨如图形得出频率比值</h2><p>当用 “<em>X-Y</em>” 方式，即 “ <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.302ex\" height=\"1.885ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1017.6 833\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></svg></mjx-container> 位移” 拉出，进入这一方式，</p>\n<p>此时，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.302ex\" height=\"1.885ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1017.6 833\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></svg></mjx-container> 通道为 <em>X</em> 输入端，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.302ex\" height=\"1.885ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1017.6 833\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></g></svg></mjx-container> 通道为 <em>Y</em> 输入端，当从 <em>X/Y</em> 这两个输入端<u>输入正弦信号</u>时，在示波管荧光屏上可显示出李萨如图形，根据图形可以<u>推算出两个信号之间的频率及相位关系</u>。</p>\n<p>根据如下方程我们可以得出 <em>X</em> 与 <em>Y</em> 两个正弦信号的频率关系：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.158ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26.154ex\" height=\"3.527ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 11560 1558.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,481.4) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(852,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">方</text></g><g data-mml-node=\"mi\" transform=\"translate(1752,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">向</text></g><g data-mml-node=\"mi\" transform=\"translate(2652,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(3552,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">线</text></g><g data-mml-node=\"mi\" transform=\"translate(4452,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">对</text></g><g data-mml-node=\"mi\" transform=\"translate(5352,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">图</text></g><g data-mml-node=\"mi\" transform=\"translate(6252,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">形</text></g><g data-mml-node=\"mi\" transform=\"translate(7152,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(8052,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(8952,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">点</text></g><g data-mml-node=\"mi\" transform=\"translate(9852,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">数</text></g><g data-mml-node=\"msub\" transform=\"translate(10752,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(836,-150) scale(0.707)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(273.7,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(763,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">方</text></g><g data-mml-node=\"mi\" transform=\"translate(1663,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">向</text></g><g data-mml-node=\"mi\" transform=\"translate(2563,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(3463,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">线</text></g><g data-mml-node=\"mi\" transform=\"translate(4363,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">对</text></g><g data-mml-node=\"mi\" transform=\"translate(5263,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">图</text></g><g data-mml-node=\"mi\" transform=\"translate(6163,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">形</text></g><g data-mml-node=\"mi\" transform=\"translate(7063,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(7963,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(8863,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">点</text></g><g data-mml-node=\"mi\" transform=\"translate(9763,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">数</text></g><g data-mml-node=\"msub\" transform=\"translate(10663,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(836,-150) scale(0.707)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g><rect width=\"8855.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g><g data-mml-node=\"mo\" transform=\"translate(9373.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(10428.9,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msub\" transform=\"translate(240.5,548.6) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"msub\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g><rect width=\"891.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container></p>\n<h2 id=\"Multisim中绘制李萨如图形\"><a href=\"#Multisim中绘制李萨如图形\" class=\"headerlink\" title=\"Multisim中绘制李萨如图形\"></a>Multisim中绘制李萨如图形</h2><blockquote>\n<p>  <strong>Multisim</strong> 中的<u>虚拟信号发生器</u>是不能够调节相位的，但是使用<u>交流信号源</u>代替信号发生器，就可以在设置中调整相位差。</p>\n</blockquote>\n<p>所以我们选择左上角的放置元件，</p>\n<p>在 “<strong>POWER_SOURCES</strong>” 一栏中拉取两个 “<strong>AC_POWER</strong>” 放置，</p>\n<p>并拉取三个 “<strong>DGND</strong>” 放置，</p>\n<p>从右侧栏中选择示波器，</p>\n<p>如下图放置，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/484445f75cfe9340.png\"></p>\n<p>之后我们可以根据自己的需要调整 电压值、频率、相位差等数参数进行仿真实验。</p>\n<p>右上角 进行仿真 <u>双击示波器查看生成的李萨如图形</u>，</p>\n<p>下面列出常见的李萨如图形表（使用 <em>Multisim</em> 绘制），</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/8187183a08e2f6ac.png\"></p>\n<p><a class=\"link\" href=\"https://baike.baidu.com/item/%E5%88%A9%E8%90%A8%E5%A6%82%E5%9B%BE%E5%BD%A2/10517125\">利萨如图形_百度百科 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://baike.baidu.com/item/%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8/1101010\">简谐运动_百度百科 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://zhidao.baidu.com/question/1796430360334163547.html\">在multisim中，如何产生李萨如图形，我没找到相位调节的地方_百度知道 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<div align=\"center\"><img src=\"emt.png\"></div>\n\n","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p>  因为大物实验的课上 李萨如图形 在 <em>3 : 2</em> 时显现的图形与老师PPT上的图形有些许出入，<br>  所以回来以后尝试自己用 <em>Multisim</em> 做一个仿真看看在此时 李萨如图形 到底是什么样子的。</p>\n</blockquote>\n<h1 id=\"李萨如图形\"><a href=\"#李萨如图形\" class=\"headerlink\" title=\"李萨如图形\"></a>李萨如图形</h1><p>李萨如图形（Lissajous-Figure），亦可称为利萨茹图形，是指在<u>互相垂直的方向上</u>的两个频率成<u>简单整数比</u>的<u>简谐振动</u>所合成的<u>规则的、稳定的闭合曲线</u>。</p>\n<h2 id=\"简谐运动\"><a href=\"#简谐运动\" class=\"headerlink\" title=\"* 简谐运动\"></a>* 简谐运动</h2><p>物体在<u>与位移成正比的恢复力作用</u>下，在其平衡位置附近<u>按正弦规律作往复的运动</u>。</p>\n<p>以<em>x</em>表示位移，<em>t</em>表示时间，这种振动的<u>数学表达式</u>为：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.584ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8214.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(849.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1905.6,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2655.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3124.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3469.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4069.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4458.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(5587.8,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6171,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7171.3,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7825.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，</p>\n<p>式中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>为位移<em>x</em>的最大值，称为<strong>振幅</strong>，它表示<u>振动的强度</u>，</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.555ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 1129.3 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container> 表示<u>每秒中的振动的辐角增量</u>，称为<u>角频率</u>，也称<u>圆频率</u>；</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.493ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.48ex\" height=\"1.493ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 654 660\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g></g></g></svg></mjx-container> 称为<strong>初相位</strong>；</p>\n<p>以 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.798ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.063ex\" height=\"2.528ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -764.8 3122.1 1117.6\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(827.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(1883.6,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msub\" transform=\"translate(220,451.6) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mrow\" transform=\"translate(241,-345) scale(0.707)\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g></g><rect width=\"998.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container> 表示每秒中振动的周数，称为<strong>频率</strong>；</p>\n<p>频率的倒数，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.108ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.485ex\" height=\"3.065ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 2866.5 1354.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(2037.6,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(237.7,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><rect width=\"588.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container> ，表示振动一周所需的时间，称为<strong>周期</strong>。</p>\n<h3 id=\"简谐运动的三大要素\"><a href=\"#简谐运动的三大要素\" class=\"headerlink\" title=\"* 简谐运动的三大要素\"></a>* 简谐运动的三大要素</h3><p>振幅<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>、频率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.244ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 550 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g></g></svg></mjx-container>（或角频率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.555ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 1129.3 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(655,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>）、<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.493ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.48ex\" height=\"1.493ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 654 660\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g></g></g></svg></mjx-container>初相位，称为简谐振动三要素。</p>\n<h2 id=\"数学定义\"><a href=\"#数学定义\" class=\"headerlink\" title=\"数学定义\"></a>数学定义</h2><p>李萨如曲线由以下<u>参数方程</u>定义：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.589ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5564.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(961,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1430,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2096.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3152.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3681.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4150.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4495.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5095.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.541ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8637 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(490,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(879,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1348,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2014.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3070.6,0)\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3499.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3968.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4313.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4913.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5302.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5902.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6593.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7594,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8248,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p>其中，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.506ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2433.6 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2A7E\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.552ex\" height=\"2.361ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -698.8 4664.2 1043.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2765.3,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(3821.1,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(220,394) scale(0.707)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(244.7,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><rect width=\"603.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container>，</p>\n<p>n称为<strong>曲线的参数</strong>，是两个正弦振动的<u>频率比</u>。</p>\n<p>若比例为<u>有理数</u>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.091ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.175ex\" height=\"2.878ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -789.7 2729.2 1271.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(1933.6,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(235.2,477.2) scale(0.707)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><rect width=\"555.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container>，参数方程可以写作：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.488ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6845.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(961,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1430,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2096.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3152.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3681.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4150.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4495.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5095.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5484.6,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5987.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6456.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.224ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8497 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(490,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(879,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1348,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2014.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3070.6,0)\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3499.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3968.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4313.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4913.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5302.6,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5762.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6453.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7454,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8108,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.493ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.066ex\" height=\"2ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 4891.1 884\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D711\" d=\"M92 210Q92 176 106 149T142 108T185 85T220 72L235 70L237 71L250 112Q268 170 283 211T322 299T370 375T429 423T502 442Q547 442 582 410T618 302Q618 224 575 152T457 35T299 -10Q273 -10 273 -12L266 -48Q260 -83 252 -125T241 -179Q236 -203 215 -212Q204 -218 190 -218Q159 -215 159 -185Q159 -175 214 -2L209 0Q204 2 195 5T173 14T147 28T120 46T94 71T71 103T56 142T50 190Q50 238 76 311T149 431H162Q183 431 183 423Q183 417 175 409Q134 361 114 300T92 210ZM574 278Q574 320 550 344T486 369Q437 369 394 329T323 218Q309 184 295 109L286 64Q304 62 306 62Q423 62 498 131T574 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2765.3,0)\"><path data-c=\"2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3821.1,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4321.1,0)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g></g></g></svg></mjx-container></p>\n<h2 id=\"通过李萨如图形得出频率比值\"><a href=\"#通过李萨如图形得出频率比值\" class=\"headerlink\" title=\"通过李萨如图形得出频率比值\"></a>通过李萨如图形得出频率比值</h2><p>当用 “<em>X-Y</em>” 方式，即 “ <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.302ex\" height=\"1.885ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1017.6 833\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></svg></mjx-container> 位移” 拉出，进入这一方式，</p>\n<p>此时，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.302ex\" height=\"1.885ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1017.6 833\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></svg></mjx-container> 通道为 <em>X</em> 输入端，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.302ex\" height=\"1.885ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1017.6 833\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></g></svg></mjx-container> 通道为 <em>Y</em> 输入端，当从 <em>X/Y</em> 这两个输入端<u>输入正弦信号</u>时，在示波管荧光屏上可显示出李萨如图形，根据图形可以<u>推算出两个信号之间的频率及相位关系</u>。</p>\n<p>根据如下方程我们可以得出 <em>X</em> 与 <em>Y</em> 两个正弦信号的频率关系：</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.158ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26.154ex\" height=\"3.527ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 11560 1558.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,481.4) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(852,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">方</text></g><g data-mml-node=\"mi\" transform=\"translate(1752,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">向</text></g><g data-mml-node=\"mi\" transform=\"translate(2652,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(3552,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">线</text></g><g data-mml-node=\"mi\" transform=\"translate(4452,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">对</text></g><g data-mml-node=\"mi\" transform=\"translate(5352,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">图</text></g><g data-mml-node=\"mi\" transform=\"translate(6252,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">形</text></g><g data-mml-node=\"mi\" transform=\"translate(7152,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(8052,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(8952,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">点</text></g><g data-mml-node=\"mi\" transform=\"translate(9852,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">数</text></g><g data-mml-node=\"msub\" transform=\"translate(10752,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(836,-150) scale(0.707)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(273.7,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(763,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">方</text></g><g data-mml-node=\"mi\" transform=\"translate(1663,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">向</text></g><g data-mml-node=\"mi\" transform=\"translate(2563,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(3463,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">线</text></g><g data-mml-node=\"mi\" transform=\"translate(4363,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">对</text></g><g data-mml-node=\"mi\" transform=\"translate(5263,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">图</text></g><g data-mml-node=\"mi\" transform=\"translate(6163,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">形</text></g><g data-mml-node=\"mi\" transform=\"translate(7063,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(7963,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">切</text></g><g data-mml-node=\"mi\" transform=\"translate(8863,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">点</text></g><g data-mml-node=\"mi\" transform=\"translate(9763,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">数</text></g><g data-mml-node=\"msub\" transform=\"translate(10663,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(836,-150) scale(0.707)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g><rect width=\"8855.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g><g data-mml-node=\"mo\" transform=\"translate(9373.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(10428.9,0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msub\" transform=\"translate(240.5,548.6) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"msub\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g><rect width=\"891.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></g></svg></mjx-container></p>\n<h2 id=\"Multisim中绘制李萨如图形\"><a href=\"#Multisim中绘制李萨如图形\" class=\"headerlink\" title=\"Multisim中绘制李萨如图形\"></a>Multisim中绘制李萨如图形</h2><blockquote>\n<p>  <strong>Multisim</strong> 中的<u>虚拟信号发生器</u>是不能够调节相位的，但是使用<u>交流信号源</u>代替信号发生器，就可以在设置中调整相位差。</p>\n</blockquote>\n<p>所以我们选择左上角的放置元件，</p>\n<p>在 “<strong>POWER_SOURCES</strong>” 一栏中拉取两个 “<strong>AC_POWER</strong>” 放置，</p>\n<p>并拉取三个 “<strong>DGND</strong>” 放置，</p>\n<p>从右侧栏中选择示波器，</p>\n<p>如下图放置，</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/484445f75cfe9340.png\"></p>\n<p>之后我们可以根据自己的需要调整 电压值、频率、相位差等数参数进行仿真实验。</p>\n<p>右上角 进行仿真 <u>双击示波器查看生成的李萨如图形</u>，</p>\n<p>下面列出常见的李萨如图形表（使用 <em>Multisim</em> 绘制），</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/8187183a08e2f6ac.png\"></p>\n<p><a class=\"link\" href=\"https://baike.baidu.com/item/%E5%88%A9%E8%90%A8%E5%A6%82%E5%9B%BE%E5%BD%A2/10517125\">利萨如图形_百度百科 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://baike.baidu.com/item/%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8/1101010\">简谐运动_百度百科 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://zhidao.baidu.com/question/1796430360334163547.html\">在multisim中，如何产生李萨如图形，我没找到相位调节的地方_百度知道 (baidu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<div align=\"center\"><img src=\"emt.png\"></div>\n\n"},{"title":"【STM32学习记录】第二节-寄存器","mathjax":true,"date":"2022-03-24T01:09:52.000Z","comment":true,"_content":"\n+   相关说明\n\n    本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为**Blibili**[@正点原子官方](https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0)，以及**Blibili**[@野火_firege](https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0)。\n\n    +   相关的可参考文件：\n\n    [STM32 中文参考手册](http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf)\n\n    [STM32 选型手册 2021](https://www.stmcu.com.cn/upload/Selection_Guide.pdf)\n\n    [STM32F103C8T6 ](https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html)\n    \n# 第三节 寄存器\n\n## 1. 什么是寄存器\n\n给有特定功能的内存单元取一个别名，这个别名就是常说的寄存器；\n\n[STM32F103C8T6 数据手册](https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html)\n\n数据手册第四节“**Memory mapping**”查看寄存器的地址；\n\n中文参考手册\n\n+   第2.3节“**存储器映像**”\n+   第8.2节“**GPIO寄存器描述**”\n    +   偏移地址、复位值······\n\n### 1.1 存储器映射\n\n存储区本身不具有地址信息，**<u>它的地址是由芯片厂商或用户分配</u>**，给**存储器分配地址的过程**成为存储器映射。\n\n![](https://s3.bmp.ovh/imgs/2022/03/eb22994c2a44d2ee.png)\n\n### 1.2 寄存器映射\n\n通过绝对地址访问内存单元时，需对“地址”进行强制类型转换、更改类型为指针。\n\n```c\n//实现GPIOB 端口全部输出高电平\n*(unsigned int*)(0x40010C0C) = 0xFFFF\n```\n\n通过寄存器别名方式访问内存单元\n\n```c\n#define GPIOB_ODR (unsignedint*)(0x40010C0C)\n* GPIOB_ODR = 0xFF;\n```\n\n为方便操作，把指针操作“*****”也定义到寄存器别名里面\n\n```\n#define GPIOB_ODR *(unsignedint*)(0x40010C0C)\nGPIOB_ODR = 0xFF;\n```\n\n外设从**APB1**总线开始\n\n![](https://s3.bmp.ovh/imgs/2022/03/877665911bd6a46d.png)\n\n![](https://s3.bmp.ovh/imgs/2022/03/01c329f6f4e8492e.png)\n\n![](https://s3.bmp.ovh/imgs/2022/03/0199c29362773467.png)\n\n定义各个寄存器为**结构体**成员，每个端口的[基地址赋值给结构体](#1.5 使用结构体封装寄存器列表)，\n\n根据**总线地址**与**偏移地址**可以得到寄存器的**绝对地址**\n\n### 1.3 GPIO端口置位/复位寄存器说明\n\n**(GPIOx BSRR)(x=A...E)** 意为该寄存器名为“**GPIOx BSRR**”其中“**x**”可以为**A-E**，也就是说这个寄存器说明适用于**GPIOA**、**GPIOB**至**GPIOE**，这些GPIO端口都有这样的一个寄存器。\n\n| 位说明 |   模式   |\n| :----: | :------: |\n|   r    |   可读   |\n|   w    | 可读可写 |\n\n|   总线   |\n| :------: |\n|  $AHB$   |\n| $APB_2$  |\n| $ APB_1$ |\n\n+   找到总线的基地址\n+   加上某个外设的偏移地址，可找到某个外设的基地址\n    +   偏移地址在参考手册8.2中有标出\n+   找到寄存器相对于外设基地址的偏移地址\n+   用C语言的指针操作访问寄存器的绝对地址\n\n### 1.4 总线和外设基址宏定义\n\n```c\n/*外设基地址*/\n#define PERIPH_BASE\t\t((unsigned int)0x40000000)\n\n/*总线基地址*/\n#define APB1PERIPH_BASE\tPERIPH_BASE\n#define APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)\n#define AHBPERIPH_BASE\t(PERIPH_BASE + 0x00020000)\n\n/*GPIO外设基地址*/\n#define GPIOA_BASE\t(APB2PERIPH_BASE + 0x0800)\n#define GPIOB_BASE\t(APB2PERIPH_BASE + 0x0C00)\n#define GPIOC_BASE \t(APB2PERIPH_BASE + 0x1000)\n#define GPIOD_BASE\t(APB2PERIPH_BASE + 0x1400)\n#define GPIOE_BASE\t(APB2PERIPH_BASE + 0x1800)\n#define GPIOF_BASE\t(APB2PERIPH_BASE + 0x1C00)\n#define GPIOG_BASE \t(APB2PERIPH_BASE + 0x2000)\n\n/*以GPIOB为例的寄存器基地址*/\n#define GPIOB_CRL\t(GPIOB_BASE+0x00)\n#define GPIOB_CRH\t(GPIOB_BASE+0x04)\n#define GPIOB_IDR\t(GPIOB_BASE+0x08)\n#define GPIOB_ODR\t(GPIOB_BASE+0x0C)\n#define GPIOB_BSRR\t(GPIOB_BASE+0x10)\n#define GPIOB_BRR\t(GPIOB_BASE+0x14)\n#define GPIOB_LCKR\t(GPIOB_BASE+0x18)\n```\n\n```c\n/*让 PB0 输出高/低电平*/\n#define PERIPH_BASE\t\t((sunsigned int)0x40000000)\n#define APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)\n#define GPIOB_BASE\t\t(APB2PERIPH_BASE + 0x0C00)\n#define GPIOB_ODR\t\t*(unsignedint*)(GPIOB_BASE+0x0C)\n\n// PB0输出 输出低电平\nGPIOB_ODR &= ~(1<<0);\n\n// PB0输出 输出高电平\nGPIOB_ODR |=(1<<0);\n```\n\n![](https://s3.bmp.ovh/imgs/2022/03/db0b701329e4e6b4.png)\n\n```c\n/*\n~ 符号表示 取反 \n| 符号表示 或\n& 符号表示 与\n*/\n\n/*若要使上图10位 置1而其他位置0*/\nGPIOB_ODR |= (1<<10);\n\n/*若要使上图10位 置0而不改变其他位*/\nGPIOB_ODR &= ~(1<<10);\n```\n\n运用“或”运算进行相加，\n\n使得之前的位不会得到改变。\n\n给第10位赋1，取反后，第10位为0其他位为1，\n\n进行与运算，0&0=0，1&0=1，使其他位不变。\n\n### 1.5 使用结构体封装寄存器列表\n\n```c\n/*使用结构体对 GPIO 寄存器组的封装*/\ntypedef unsigned\t\tint uint32_t /*无符号32位变量*/\ntypedef unsigned short\tint uint16_t /*无符号16位变量*/\n    \n/* GPIO 寄存器列表 */\ntypedef struct {\n\tuint32_t CRL\t/*GPIO端口配置低寄存器\t地址偏移：0x00*/\n\tuint32_t QRH\t/*GPIO端口配置高寄存器\t地址偏移：0x04*/\n\tuint32_t IDR\t/*GPIO数据输入寄存器\t 地址偏移：0x08*/\n\tuint32_t QDR\t/*GPIO数据输出寄存器\t 地址偏移：0x10*/\n\tuint32_t BSRR\t/*GPIO位设置/清楚寄存器\t地址偏移：0x14*/\n\tuint32_t LCKR\t/*GPIO端口配置锁定寄存器\t地址偏移:0x18*/\n}GPIO_TypeDef\n```\n\n```c\n/*通过结构体指针访问寄存器*/\nGPIO_TypeDef * GPIOx;\t//定义一个GPIO_TypeDef型结构体指针GPIOx\nGPIOx = GPIOB_BASE;\t\t//把指针地址设置为宏GPIOH_BASE地址\nGPIOx->IDR = 0xFFFF;\nGPIOx->ODR = 0xFFFF;\n\nuint32_t temp\ntemp = GPIOx->IDR;\t\t//读取GPIOB_IDR寄存器的值到变量temp中\n```\n\n### 1.6 定义GPIO端口基地址指针\n\n```c\n/*使用GPIO_TypeDef把地址强制转换成指针*/\n#define GPIOA\t\t((GPIO_TypeDef *)GPIOA_BASE)\n#define GPIOB\t\t((GPIO_TypeDef *)GPIOB_BASE)\n#define GPIOC\t\t((GPIO_TypeDef *)GPIOC_BASE)\n#define GPIOD\t\t((GPIO_TypeDef *)GPIOD_BASE)\n#define GPIOE\t\t((GPIO_TypeDef *)GPIOE_BASE)\n#define GPIOF\t\t((GPIO_TypeDef *)GPIOF_BASE)\n#define GPIOG\t\t((GPIO_TypeDef *)GPIOG_BASE)\n#define GPIOH\t\t((GPIO_TypeDef *)GPIOH_BASE)\n\n/*使用定义好的宏直接访问*/\n/*访问GPIOB端口的寄存器*/\nGPIOB->BASRR = 0xFFFF;\t//通过指针访问并修改GPIOB_BSRR寄存器\nGPIOB->CRL = 0xFFFF;\t\t//修改GPIOB_CRL寄存器\nGPIO->ODR = 0xFFFF;\t\t//修改GPIOB_ODR寄存器\n\nuint32_t temp;\ntemp = GPIOB->IDR;\t\t//读取GPIOB_IDR寄存器的值到变量temp中\n\n/*访问GPIOA端口的寄存器*/\nGPIOA->BSRR = 0xFFFF;\nGPIOA->CRL = 0xFFFF;\nGPIOA->ODR = 0XFFFF;\n\nuint32_t temp;\ntemp = GPIOA->IDR\t\t//读取GPIOA_IDR寄存器的值到变量temp中\n```\n\n\n\n\n\n\n参考网站：\n\n[【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1yW411Y7Gw)\n\n<center>暂时就这样，持续更新ing...<center/>\n\n![EMT](EMT.png)","source":"_posts/【STM32学习记录】第二节-寄存器.md","raw":"---\ntitle: 【STM32学习记录】第二节-寄存器\nmathjax: true\ndate: 2022-03-24 09:09:52\ntags: [STM32,寄存器]\ncategories: [STM32] \ncomment: true\n---\n\n+   相关说明\n\n    本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为**Blibili**[@正点原子官方](https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0)，以及**Blibili**[@野火_firege](https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0)。\n\n    +   相关的可参考文件：\n\n    [STM32 中文参考手册](http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf)\n\n    [STM32 选型手册 2021](https://www.stmcu.com.cn/upload/Selection_Guide.pdf)\n\n    [STM32F103C8T6 ](https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html)\n    \n# 第三节 寄存器\n\n## 1. 什么是寄存器\n\n给有特定功能的内存单元取一个别名，这个别名就是常说的寄存器；\n\n[STM32F103C8T6 数据手册](https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html)\n\n数据手册第四节“**Memory mapping**”查看寄存器的地址；\n\n中文参考手册\n\n+   第2.3节“**存储器映像**”\n+   第8.2节“**GPIO寄存器描述**”\n    +   偏移地址、复位值······\n\n### 1.1 存储器映射\n\n存储区本身不具有地址信息，**<u>它的地址是由芯片厂商或用户分配</u>**，给**存储器分配地址的过程**成为存储器映射。\n\n![](https://s3.bmp.ovh/imgs/2022/03/eb22994c2a44d2ee.png)\n\n### 1.2 寄存器映射\n\n通过绝对地址访问内存单元时，需对“地址”进行强制类型转换、更改类型为指针。\n\n```c\n//实现GPIOB 端口全部输出高电平\n*(unsigned int*)(0x40010C0C) = 0xFFFF\n```\n\n通过寄存器别名方式访问内存单元\n\n```c\n#define GPIOB_ODR (unsignedint*)(0x40010C0C)\n* GPIOB_ODR = 0xFF;\n```\n\n为方便操作，把指针操作“*****”也定义到寄存器别名里面\n\n```\n#define GPIOB_ODR *(unsignedint*)(0x40010C0C)\nGPIOB_ODR = 0xFF;\n```\n\n外设从**APB1**总线开始\n\n![](https://s3.bmp.ovh/imgs/2022/03/877665911bd6a46d.png)\n\n![](https://s3.bmp.ovh/imgs/2022/03/01c329f6f4e8492e.png)\n\n![](https://s3.bmp.ovh/imgs/2022/03/0199c29362773467.png)\n\n定义各个寄存器为**结构体**成员，每个端口的[基地址赋值给结构体](#1.5 使用结构体封装寄存器列表)，\n\n根据**总线地址**与**偏移地址**可以得到寄存器的**绝对地址**\n\n### 1.3 GPIO端口置位/复位寄存器说明\n\n**(GPIOx BSRR)(x=A...E)** 意为该寄存器名为“**GPIOx BSRR**”其中“**x**”可以为**A-E**，也就是说这个寄存器说明适用于**GPIOA**、**GPIOB**至**GPIOE**，这些GPIO端口都有这样的一个寄存器。\n\n| 位说明 |   模式   |\n| :----: | :------: |\n|   r    |   可读   |\n|   w    | 可读可写 |\n\n|   总线   |\n| :------: |\n|  $AHB$   |\n| $APB_2$  |\n| $ APB_1$ |\n\n+   找到总线的基地址\n+   加上某个外设的偏移地址，可找到某个外设的基地址\n    +   偏移地址在参考手册8.2中有标出\n+   找到寄存器相对于外设基地址的偏移地址\n+   用C语言的指针操作访问寄存器的绝对地址\n\n### 1.4 总线和外设基址宏定义\n\n```c\n/*外设基地址*/\n#define PERIPH_BASE\t\t((unsigned int)0x40000000)\n\n/*总线基地址*/\n#define APB1PERIPH_BASE\tPERIPH_BASE\n#define APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)\n#define AHBPERIPH_BASE\t(PERIPH_BASE + 0x00020000)\n\n/*GPIO外设基地址*/\n#define GPIOA_BASE\t(APB2PERIPH_BASE + 0x0800)\n#define GPIOB_BASE\t(APB2PERIPH_BASE + 0x0C00)\n#define GPIOC_BASE \t(APB2PERIPH_BASE + 0x1000)\n#define GPIOD_BASE\t(APB2PERIPH_BASE + 0x1400)\n#define GPIOE_BASE\t(APB2PERIPH_BASE + 0x1800)\n#define GPIOF_BASE\t(APB2PERIPH_BASE + 0x1C00)\n#define GPIOG_BASE \t(APB2PERIPH_BASE + 0x2000)\n\n/*以GPIOB为例的寄存器基地址*/\n#define GPIOB_CRL\t(GPIOB_BASE+0x00)\n#define GPIOB_CRH\t(GPIOB_BASE+0x04)\n#define GPIOB_IDR\t(GPIOB_BASE+0x08)\n#define GPIOB_ODR\t(GPIOB_BASE+0x0C)\n#define GPIOB_BSRR\t(GPIOB_BASE+0x10)\n#define GPIOB_BRR\t(GPIOB_BASE+0x14)\n#define GPIOB_LCKR\t(GPIOB_BASE+0x18)\n```\n\n```c\n/*让 PB0 输出高/低电平*/\n#define PERIPH_BASE\t\t((sunsigned int)0x40000000)\n#define APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)\n#define GPIOB_BASE\t\t(APB2PERIPH_BASE + 0x0C00)\n#define GPIOB_ODR\t\t*(unsignedint*)(GPIOB_BASE+0x0C)\n\n// PB0输出 输出低电平\nGPIOB_ODR &= ~(1<<0);\n\n// PB0输出 输出高电平\nGPIOB_ODR |=(1<<0);\n```\n\n![](https://s3.bmp.ovh/imgs/2022/03/db0b701329e4e6b4.png)\n\n```c\n/*\n~ 符号表示 取反 \n| 符号表示 或\n& 符号表示 与\n*/\n\n/*若要使上图10位 置1而其他位置0*/\nGPIOB_ODR |= (1<<10);\n\n/*若要使上图10位 置0而不改变其他位*/\nGPIOB_ODR &= ~(1<<10);\n```\n\n运用“或”运算进行相加，\n\n使得之前的位不会得到改变。\n\n给第10位赋1，取反后，第10位为0其他位为1，\n\n进行与运算，0&0=0，1&0=1，使其他位不变。\n\n### 1.5 使用结构体封装寄存器列表\n\n```c\n/*使用结构体对 GPIO 寄存器组的封装*/\ntypedef unsigned\t\tint uint32_t /*无符号32位变量*/\ntypedef unsigned short\tint uint16_t /*无符号16位变量*/\n    \n/* GPIO 寄存器列表 */\ntypedef struct {\n\tuint32_t CRL\t/*GPIO端口配置低寄存器\t地址偏移：0x00*/\n\tuint32_t QRH\t/*GPIO端口配置高寄存器\t地址偏移：0x04*/\n\tuint32_t IDR\t/*GPIO数据输入寄存器\t 地址偏移：0x08*/\n\tuint32_t QDR\t/*GPIO数据输出寄存器\t 地址偏移：0x10*/\n\tuint32_t BSRR\t/*GPIO位设置/清楚寄存器\t地址偏移：0x14*/\n\tuint32_t LCKR\t/*GPIO端口配置锁定寄存器\t地址偏移:0x18*/\n}GPIO_TypeDef\n```\n\n```c\n/*通过结构体指针访问寄存器*/\nGPIO_TypeDef * GPIOx;\t//定义一个GPIO_TypeDef型结构体指针GPIOx\nGPIOx = GPIOB_BASE;\t\t//把指针地址设置为宏GPIOH_BASE地址\nGPIOx->IDR = 0xFFFF;\nGPIOx->ODR = 0xFFFF;\n\nuint32_t temp\ntemp = GPIOx->IDR;\t\t//读取GPIOB_IDR寄存器的值到变量temp中\n```\n\n### 1.6 定义GPIO端口基地址指针\n\n```c\n/*使用GPIO_TypeDef把地址强制转换成指针*/\n#define GPIOA\t\t((GPIO_TypeDef *)GPIOA_BASE)\n#define GPIOB\t\t((GPIO_TypeDef *)GPIOB_BASE)\n#define GPIOC\t\t((GPIO_TypeDef *)GPIOC_BASE)\n#define GPIOD\t\t((GPIO_TypeDef *)GPIOD_BASE)\n#define GPIOE\t\t((GPIO_TypeDef *)GPIOE_BASE)\n#define GPIOF\t\t((GPIO_TypeDef *)GPIOF_BASE)\n#define GPIOG\t\t((GPIO_TypeDef *)GPIOG_BASE)\n#define GPIOH\t\t((GPIO_TypeDef *)GPIOH_BASE)\n\n/*使用定义好的宏直接访问*/\n/*访问GPIOB端口的寄存器*/\nGPIOB->BASRR = 0xFFFF;\t//通过指针访问并修改GPIOB_BSRR寄存器\nGPIOB->CRL = 0xFFFF;\t\t//修改GPIOB_CRL寄存器\nGPIO->ODR = 0xFFFF;\t\t//修改GPIOB_ODR寄存器\n\nuint32_t temp;\ntemp = GPIOB->IDR;\t\t//读取GPIOB_IDR寄存器的值到变量temp中\n\n/*访问GPIOA端口的寄存器*/\nGPIOA->BSRR = 0xFFFF;\nGPIOA->CRL = 0xFFFF;\nGPIOA->ODR = 0XFFFF;\n\nuint32_t temp;\ntemp = GPIOA->IDR\t\t//读取GPIOA_IDR寄存器的值到变量temp中\n```\n\n\n\n\n\n\n参考网站：\n\n[【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1yW411Y7Gw)\n\n<center>暂时就这样，持续更新ing...<center/>\n\n![EMT](EMT.png)","slug":"【STM32学习记录】第二节-寄存器","published":1,"updated":"2022-03-24T01:21:31.310Z","_id":"cl14b6wzc00002kv97qftbide","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>相关说明</p>\n<p>  本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0\">@正点原子官方<i class=\"fas fa-external-link-alt\"></i></a>，以及<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0\">@野火_firege<i class=\"fas fa-external-link-alt\"></i></a>。</p>\n<ul>\n<li><p>相关的可参考文件：</p>\n<p><a class=\"link\" href=\"http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf\">STM32 中文参考手册<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://www.stmcu.com.cn/upload/Selection_Guide.pdf\">STM32 选型手册 2021<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html\">STM32F103C8T6 <i class=\"fas fa-external-link-alt\"></i></a></p>\n<h1 id=\"第三节-寄存器\"><a href=\"#第三节-寄存器\" class=\"headerlink\" title=\"第三节 寄存器\"></a>第三节 寄存器</h1></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-什么是寄存器\"><a href=\"#1-什么是寄存器\" class=\"headerlink\" title=\"1. 什么是寄存器\"></a>1. 什么是寄存器</h2><p>给有特定功能的内存单元取一个别名，这个别名就是常说的寄存器；</p>\n<p><a class=\"link\" href=\"https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html\">STM32F103C8T6 数据手册<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>数据手册第四节“<strong>Memory mapping</strong>”查看寄存器的地址；</p>\n<p>中文参考手册</p>\n<ul>\n<li>  第2.3节“<strong>存储器映像</strong>”</li>\n<li>第8.2节“<strong>GPIO寄存器描述</strong>”<ul>\n<li>  偏移地址、复位值······</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-1-存储器映射\"><a href=\"#1-1-存储器映射\" class=\"headerlink\" title=\"1.1 存储器映射\"></a>1.1 存储器映射</h3><p>存储区本身不具有地址信息，**<u>它的地址是由芯片厂商或用户分配</u><strong>，给</strong>存储器分配地址的过程**成为存储器映射。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/eb22994c2a44d2ee.png\"></p>\n<h3 id=\"1-2-寄存器映射\"><a href=\"#1-2-寄存器映射\" class=\"headerlink\" title=\"1.2 寄存器映射\"></a>1.2 寄存器映射</h3><p>通过绝对地址访问内存单元时，需对“地址”进行强制类型转换、更改类型为指针。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现GPIOB 端口全部输出高电平</span></span><br><span class=\"line\">*(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>*)(<span class=\"number\">0x40010C0C</span>) = <span class=\"number\">0xFFFF</span></span><br></pre></td></tr></table></figure>\n\n<p>通过寄存器别名方式访问内存单元</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_ODR (unsignedint*)(0x40010C0C)</span></span><br><span class=\"line\">* GPIOB_ODR = <span class=\"number\">0xFF</span>;</span><br></pre></td></tr></table></figure>\n\n<p>为方便操作，把指针操作“*****”也定义到寄存器别名里面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#define GPIOB_ODR *(unsignedint*)(0x40010C0C)</span><br><span class=\"line\">GPIOB_ODR = 0xFF;</span><br></pre></td></tr></table></figure>\n\n<p>外设从<strong>APB1</strong>总线开始</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/877665911bd6a46d.png\"></p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/01c329f6f4e8492e.png\"></p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/0199c29362773467.png\"></p>\n<p>定义各个寄存器为<strong>结构体</strong>成员，每个端口的[基地址赋值给结构体](#1.5 使用结构体封装寄存器列表)，</p>\n<p>根据<strong>总线地址</strong>与<strong>偏移地址</strong>可以得到寄存器的<strong>绝对地址</strong></p>\n<h3 id=\"1-3-GPIO端口置位-复位寄存器说明\"><a href=\"#1-3-GPIO端口置位-复位寄存器说明\" class=\"headerlink\" title=\"1.3 GPIO端口置位/复位寄存器说明\"></a>1.3 GPIO端口置位/复位寄存器说明</h3><p><strong>(GPIOx BSRR)(x=A…E)</strong> 意为该寄存器名为“<strong>GPIOx BSRR</strong>”其中“<strong>x</strong>”可以为<strong>A-E</strong>，也就是说这个寄存器说明适用于<strong>GPIOA</strong>、<strong>GPIOB</strong>至<strong>GPIOE</strong>，这些GPIO端口都有这样的一个寄存器。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">位说明</th>\n<th align=\"center\">模式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">r</td>\n<td align=\"center\">可读</td>\n</tr>\n<tr>\n<td align=\"center\">w</td>\n<td align=\"center\">可读可写</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">总线</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.423ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2397 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1638,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container></td>\n</tr>\n<tr>\n<td align=\"center\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.101ex\" height=\"1.959ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2696.6 866\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1501,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(792,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></g></svg></mjx-container></td>\n</tr>\n<tr>\n<td align=\"center\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.101ex\" height=\"1.959ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2696.6 866\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1501,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(792,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></svg></mjx-container></td>\n</tr>\n</tbody></table>\n<ul>\n<li>  找到总线的基地址</li>\n<li>加上某个外设的偏移地址，可找到某个外设的基地址<ul>\n<li>  偏移地址在参考手册8.2中有标出</li>\n</ul>\n</li>\n<li>  找到寄存器相对于外设基地址的偏移地址</li>\n<li>  用C语言的指针操作访问寄存器的绝对地址</li>\n</ul>\n<h3 id=\"1-4-总线和外设基址宏定义\"><a href=\"#1-4-总线和外设基址宏定义\" class=\"headerlink\" title=\"1.4 总线和外设基址宏定义\"></a>1.4 总线和外设基址宏定义</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*外设基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PERIPH_BASE\t\t((unsigned int)0x40000000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*总线基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APB1PERIPH_BASE\tPERIPH_BASE</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> AHBPERIPH_BASE\t(PERIPH_BASE + 0x00020000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*GPIO外设基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOA_BASE\t(APB2PERIPH_BASE + 0x0800)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BASE\t(APB2PERIPH_BASE + 0x0C00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOC_BASE \t(APB2PERIPH_BASE + 0x1000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOD_BASE\t(APB2PERIPH_BASE + 0x1400)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOE_BASE\t(APB2PERIPH_BASE + 0x1800)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOF_BASE\t(APB2PERIPH_BASE + 0x1C00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOG_BASE \t(APB2PERIPH_BASE + 0x2000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*以GPIOB为例的寄存器基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_CRL\t(GPIOB_BASE+0x00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_CRH\t(GPIOB_BASE+0x04)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_IDR\t(GPIOB_BASE+0x08)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_ODR\t(GPIOB_BASE+0x0C)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BSRR\t(GPIOB_BASE+0x10)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BRR\t(GPIOB_BASE+0x14)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_LCKR\t(GPIOB_BASE+0x18)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*让 PB0 输出高/低电平*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PERIPH_BASE\t\t((sunsigned int)0x40000000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BASE\t\t(APB2PERIPH_BASE + 0x0C00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_ODR\t\t*(unsignedint*)(GPIOB_BASE+0x0C)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PB0输出 输出低电平</span></span><br><span class=\"line\">GPIOB_ODR &amp;= ~(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PB0输出 输出高电平</span></span><br><span class=\"line\">GPIOB_ODR |=(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/db0b701329e4e6b4.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">~ 符号表示 取反 </span></span><br><span class=\"line\"><span class=\"comment\">| 符号表示 或</span></span><br><span class=\"line\"><span class=\"comment\">&amp; 符号表示 与</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*若要使上图10位 置1而其他位置0*/</span></span><br><span class=\"line\">GPIOB_ODR |= (<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*若要使上图10位 置0而不改变其他位*/</span></span><br><span class=\"line\">GPIOB_ODR &amp;= ~(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n<p>运用“或”运算进行相加，</p>\n<p>使得之前的位不会得到改变。</p>\n<p>给第10位赋1，取反后，第10位为0其他位为1，</p>\n<p>进行与运算，0&amp;0=0，1&amp;0=1，使其他位不变。</p>\n<h3 id=\"1-5-使用结构体封装寄存器列表\"><a href=\"#1-5-使用结构体封装寄存器列表\" class=\"headerlink\" title=\"1.5 使用结构体封装寄存器列表\"></a>1.5 使用结构体封装寄存器列表</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*使用结构体对 GPIO 寄存器组的封装*/</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span>\t\t<span class=\"keyword\">int</span> <span class=\"keyword\">uint32_t</span> <span class=\"comment\">/*无符号32位变量*/</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span>\t<span class=\"keyword\">int</span> <span class=\"keyword\">uint16_t</span> <span class=\"comment\">/*无符号16位变量*/</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* GPIO 寄存器列表 */</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> {</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> CRL\t<span class=\"comment\">/*GPIO端口配置低寄存器\t地址偏移：0x00*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> QRH\t<span class=\"comment\">/*GPIO端口配置高寄存器\t地址偏移：0x04*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> IDR\t<span class=\"comment\">/*GPIO数据输入寄存器\t 地址偏移：0x08*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> QDR\t<span class=\"comment\">/*GPIO数据输出寄存器\t 地址偏移：0x10*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> BSRR\t<span class=\"comment\">/*GPIO位设置/清楚寄存器\t地址偏移：0x14*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> LCKR\t<span class=\"comment\">/*GPIO端口配置锁定寄存器\t地址偏移:0x18*/</span></span><br><span class=\"line\">}GPIO_TypeDef</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*通过结构体指针访问寄存器*/</span></span><br><span class=\"line\">GPIO_TypeDef * GPIOx;\t<span class=\"comment\">//定义一个GPIO_TypeDef型结构体指针GPIOx</span></span><br><span class=\"line\">GPIOx = GPIOB_BASE;\t\t<span class=\"comment\">//把指针地址设置为宏GPIOH_BASE地址</span></span><br><span class=\"line\">GPIOx-&gt;IDR = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">GPIOx-&gt;ODR = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">uint32_t</span> temp</span><br><span class=\"line\">temp = GPIOx-&gt;IDR;\t\t<span class=\"comment\">//读取GPIOB_IDR寄存器的值到变量temp中</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-6-定义GPIO端口基地址指针\"><a href=\"#1-6-定义GPIO端口基地址指针\" class=\"headerlink\" title=\"1.6 定义GPIO端口基地址指针\"></a>1.6 定义GPIO端口基地址指针</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*使用GPIO_TypeDef把地址强制转换成指针*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOA\t\t((GPIO_TypeDef *)GPIOA_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB\t\t((GPIO_TypeDef *)GPIOB_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOC\t\t((GPIO_TypeDef *)GPIOC_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOD\t\t((GPIO_TypeDef *)GPIOD_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOE\t\t((GPIO_TypeDef *)GPIOE_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOF\t\t((GPIO_TypeDef *)GPIOF_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOG\t\t((GPIO_TypeDef *)GPIOG_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOH\t\t((GPIO_TypeDef *)GPIOH_BASE)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*使用定义好的宏直接访问*/</span></span><br><span class=\"line\"><span class=\"comment\">/*访问GPIOB端口的寄存器*/</span></span><br><span class=\"line\">GPIOB-&gt;BASRR = <span class=\"number\">0xFFFF</span>;\t<span class=\"comment\">//通过指针访问并修改GPIOB_BSRR寄存器</span></span><br><span class=\"line\">GPIOB-&gt;CRL = <span class=\"number\">0xFFFF</span>;\t\t<span class=\"comment\">//修改GPIOB_CRL寄存器</span></span><br><span class=\"line\">GPIO-&gt;ODR = <span class=\"number\">0xFFFF</span>;\t\t<span class=\"comment\">//修改GPIOB_ODR寄存器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">uint32_t</span> temp;</span><br><span class=\"line\">temp = GPIOB-&gt;IDR;\t\t<span class=\"comment\">//读取GPIOB_IDR寄存器的值到变量temp中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*访问GPIOA端口的寄存器*/</span></span><br><span class=\"line\">GPIOA-&gt;BSRR = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">GPIOA-&gt;CRL = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">GPIOA-&gt;ODR = <span class=\"number\">0XFFFF</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">uint32_t</span> temp;</span><br><span class=\"line\">temp = GPIOA-&gt;IDR\t\t<span class=\"comment\">//读取GPIOA_IDR寄存器的值到变量temp中</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://www.bilibili.com/video/BV1yW411Y7Gw\">【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili<i class=\"fas fa-external-link-alt\"></i></a></p>\n<center>暂时就这样，持续更新ing...<center></center>\n\n<p><img src=\"EMT.png\" alt=\"EMT\"></p>\n</center>","site":{"data":{"links":[{"name":"LiangGe","link":"https://www.liliaw.com/","description":"星星拼命发光，是为了让人能够看到。","avatar":"https://s3.bmp.ovh/imgs/2022/03/63d0e0edd014c0a0.jpg"},{"name":"Anillc","link":"https://ani.llc/","description":"https://ani.llc | AS142055 | BG8KYF","avatar":"https://gravatar.loli.net/avatar/5df946d48b36e6f8061cdfe7ebcdf75c?s=200"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"}]}},"excerpt":"","more":"<ul>\n<li><p>相关说明</p>\n<p>  本系列文章仅为个人学习记录，若有错误欢迎指出，相关的参考文章会在本文末进行列出，主要参考视频为<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/394620890?from=search&seid=13393056502650554081&spm_id_from=333.337.0.0\">@正点原子官方<i class=\"fas fa-external-link-alt\"></i></a>，以及<strong>Blibili</strong><a class=\"link\" href=\"https://space.bilibili.com/356820657?from=search&seid=6957304932395919416&spm_id_from=333.337.0.0\">@野火_firege<i class=\"fas fa-external-link-alt\"></i></a>。</p>\n<ul>\n<li><p>相关的可参考文件：</p>\n<p><a class=\"link\" href=\"http://www.stm32er.com/zb_users/upload/2021/01/202101191611046723128863.pdf\">STM32 中文参考手册<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://www.stmcu.com.cn/upload/Selection_Guide.pdf\">STM32 选型手册 2021<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\" href=\"https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html\">STM32F103C8T6 <i class=\"fas fa-external-link-alt\"></i></a></p>\n<h1 id=\"第三节-寄存器\"><a href=\"#第三节-寄存器\" class=\"headerlink\" title=\"第三节 寄存器\"></a>第三节 寄存器</h1></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-什么是寄存器\"><a href=\"#1-什么是寄存器\" class=\"headerlink\" title=\"1. 什么是寄存器\"></a>1. 什么是寄存器</h2><p>给有特定功能的内存单元取一个别名，这个别名就是常说的寄存器；</p>\n<p><a class=\"link\" href=\"https://pdf1.alldatasheetcn.com/datasheet-pdf/view/201596/STMICROELECTRONICS/STM32F103C8T6.html\">STM32F103C8T6 数据手册<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>数据手册第四节“<strong>Memory mapping</strong>”查看寄存器的地址；</p>\n<p>中文参考手册</p>\n<ul>\n<li>  第2.3节“<strong>存储器映像</strong>”</li>\n<li>第8.2节“<strong>GPIO寄存器描述</strong>”<ul>\n<li>  偏移地址、复位值······</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-1-存储器映射\"><a href=\"#1-1-存储器映射\" class=\"headerlink\" title=\"1.1 存储器映射\"></a>1.1 存储器映射</h3><p>存储区本身不具有地址信息，**<u>它的地址是由芯片厂商或用户分配</u><strong>，给</strong>存储器分配地址的过程**成为存储器映射。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/eb22994c2a44d2ee.png\"></p>\n<h3 id=\"1-2-寄存器映射\"><a href=\"#1-2-寄存器映射\" class=\"headerlink\" title=\"1.2 寄存器映射\"></a>1.2 寄存器映射</h3><p>通过绝对地址访问内存单元时，需对“地址”进行强制类型转换、更改类型为指针。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现GPIOB 端口全部输出高电平</span></span><br><span class=\"line\">*(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>*)(<span class=\"number\">0x40010C0C</span>) = <span class=\"number\">0xFFFF</span></span><br></pre></td></tr></table></figure>\n\n<p>通过寄存器别名方式访问内存单元</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_ODR (unsignedint*)(0x40010C0C)</span></span><br><span class=\"line\">* GPIOB_ODR = <span class=\"number\">0xFF</span>;</span><br></pre></td></tr></table></figure>\n\n<p>为方便操作，把指针操作“*****”也定义到寄存器别名里面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#define GPIOB_ODR *(unsignedint*)(0x40010C0C)</span><br><span class=\"line\">GPIOB_ODR = 0xFF;</span><br></pre></td></tr></table></figure>\n\n<p>外设从<strong>APB1</strong>总线开始</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/877665911bd6a46d.png\"></p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/01c329f6f4e8492e.png\"></p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/0199c29362773467.png\"></p>\n<p>定义各个寄存器为<strong>结构体</strong>成员，每个端口的[基地址赋值给结构体](#1.5 使用结构体封装寄存器列表)，</p>\n<p>根据<strong>总线地址</strong>与<strong>偏移地址</strong>可以得到寄存器的<strong>绝对地址</strong></p>\n<h3 id=\"1-3-GPIO端口置位-复位寄存器说明\"><a href=\"#1-3-GPIO端口置位-复位寄存器说明\" class=\"headerlink\" title=\"1.3 GPIO端口置位/复位寄存器说明\"></a>1.3 GPIO端口置位/复位寄存器说明</h3><p><strong>(GPIOx BSRR)(x=A…E)</strong> 意为该寄存器名为“<strong>GPIOx BSRR</strong>”其中“<strong>x</strong>”可以为<strong>A-E</strong>，也就是说这个寄存器说明适用于<strong>GPIOA</strong>、<strong>GPIOB</strong>至<strong>GPIOE</strong>，这些GPIO端口都有这样的一个寄存器。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">位说明</th>\n<th align=\"center\">模式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">r</td>\n<td align=\"center\">可读</td>\n</tr>\n<tr>\n<td align=\"center\">w</td>\n<td align=\"center\">可读可写</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">总线</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.423ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2397 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1638,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container></td>\n</tr>\n<tr>\n<td align=\"center\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.101ex\" height=\"1.959ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2696.6 866\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1501,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(792,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></g></svg></mjx-container></td>\n</tr>\n<tr>\n<td align=\"center\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.101ex\" height=\"1.959ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2696.6 866\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1501,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(792,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></g></svg></mjx-container></td>\n</tr>\n</tbody></table>\n<ul>\n<li>  找到总线的基地址</li>\n<li>加上某个外设的偏移地址，可找到某个外设的基地址<ul>\n<li>  偏移地址在参考手册8.2中有标出</li>\n</ul>\n</li>\n<li>  找到寄存器相对于外设基地址的偏移地址</li>\n<li>  用C语言的指针操作访问寄存器的绝对地址</li>\n</ul>\n<h3 id=\"1-4-总线和外设基址宏定义\"><a href=\"#1-4-总线和外设基址宏定义\" class=\"headerlink\" title=\"1.4 总线和外设基址宏定义\"></a>1.4 总线和外设基址宏定义</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*外设基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PERIPH_BASE\t\t((unsigned int)0x40000000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*总线基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APB1PERIPH_BASE\tPERIPH_BASE</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> AHBPERIPH_BASE\t(PERIPH_BASE + 0x00020000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*GPIO外设基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOA_BASE\t(APB2PERIPH_BASE + 0x0800)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BASE\t(APB2PERIPH_BASE + 0x0C00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOC_BASE \t(APB2PERIPH_BASE + 0x1000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOD_BASE\t(APB2PERIPH_BASE + 0x1400)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOE_BASE\t(APB2PERIPH_BASE + 0x1800)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOF_BASE\t(APB2PERIPH_BASE + 0x1C00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOG_BASE \t(APB2PERIPH_BASE + 0x2000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*以GPIOB为例的寄存器基地址*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_CRL\t(GPIOB_BASE+0x00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_CRH\t(GPIOB_BASE+0x04)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_IDR\t(GPIOB_BASE+0x08)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_ODR\t(GPIOB_BASE+0x0C)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BSRR\t(GPIOB_BASE+0x10)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BRR\t(GPIOB_BASE+0x14)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_LCKR\t(GPIOB_BASE+0x18)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*让 PB0 输出高/低电平*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PERIPH_BASE\t\t((sunsigned int)0x40000000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> APB2PERIPH_BASE\t(PERIPH_BASE + 0x00010000)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_BASE\t\t(APB2PERIPH_BASE + 0x0C00)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB_ODR\t\t*(unsignedint*)(GPIOB_BASE+0x0C)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PB0输出 输出低电平</span></span><br><span class=\"line\">GPIOB_ODR &amp;= ~(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PB0输出 输出高电平</span></span><br><span class=\"line\">GPIOB_ODR |=(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/03/db0b701329e4e6b4.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">~ 符号表示 取反 </span></span><br><span class=\"line\"><span class=\"comment\">| 符号表示 或</span></span><br><span class=\"line\"><span class=\"comment\">&amp; 符号表示 与</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*若要使上图10位 置1而其他位置0*/</span></span><br><span class=\"line\">GPIOB_ODR |= (<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*若要使上图10位 置0而不改变其他位*/</span></span><br><span class=\"line\">GPIOB_ODR &amp;= ~(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n<p>运用“或”运算进行相加，</p>\n<p>使得之前的位不会得到改变。</p>\n<p>给第10位赋1，取反后，第10位为0其他位为1，</p>\n<p>进行与运算，0&amp;0=0，1&amp;0=1，使其他位不变。</p>\n<h3 id=\"1-5-使用结构体封装寄存器列表\"><a href=\"#1-5-使用结构体封装寄存器列表\" class=\"headerlink\" title=\"1.5 使用结构体封装寄存器列表\"></a>1.5 使用结构体封装寄存器列表</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*使用结构体对 GPIO 寄存器组的封装*/</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span>\t\t<span class=\"keyword\">int</span> <span class=\"keyword\">uint32_t</span> <span class=\"comment\">/*无符号32位变量*/</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span>\t<span class=\"keyword\">int</span> <span class=\"keyword\">uint16_t</span> <span class=\"comment\">/*无符号16位变量*/</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* GPIO 寄存器列表 */</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> {</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> CRL\t<span class=\"comment\">/*GPIO端口配置低寄存器\t地址偏移：0x00*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> QRH\t<span class=\"comment\">/*GPIO端口配置高寄存器\t地址偏移：0x04*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> IDR\t<span class=\"comment\">/*GPIO数据输入寄存器\t 地址偏移：0x08*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> QDR\t<span class=\"comment\">/*GPIO数据输出寄存器\t 地址偏移：0x10*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> BSRR\t<span class=\"comment\">/*GPIO位设置/清楚寄存器\t地址偏移：0x14*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">uint32_t</span> LCKR\t<span class=\"comment\">/*GPIO端口配置锁定寄存器\t地址偏移:0x18*/</span></span><br><span class=\"line\">}GPIO_TypeDef</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*通过结构体指针访问寄存器*/</span></span><br><span class=\"line\">GPIO_TypeDef * GPIOx;\t<span class=\"comment\">//定义一个GPIO_TypeDef型结构体指针GPIOx</span></span><br><span class=\"line\">GPIOx = GPIOB_BASE;\t\t<span class=\"comment\">//把指针地址设置为宏GPIOH_BASE地址</span></span><br><span class=\"line\">GPIOx-&gt;IDR = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">GPIOx-&gt;ODR = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">uint32_t</span> temp</span><br><span class=\"line\">temp = GPIOx-&gt;IDR;\t\t<span class=\"comment\">//读取GPIOB_IDR寄存器的值到变量temp中</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-6-定义GPIO端口基地址指针\"><a href=\"#1-6-定义GPIO端口基地址指针\" class=\"headerlink\" title=\"1.6 定义GPIO端口基地址指针\"></a>1.6 定义GPIO端口基地址指针</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*使用GPIO_TypeDef把地址强制转换成指针*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOA\t\t((GPIO_TypeDef *)GPIOA_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOB\t\t((GPIO_TypeDef *)GPIOB_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOC\t\t((GPIO_TypeDef *)GPIOC_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOD\t\t((GPIO_TypeDef *)GPIOD_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOE\t\t((GPIO_TypeDef *)GPIOE_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOF\t\t((GPIO_TypeDef *)GPIOF_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOG\t\t((GPIO_TypeDef *)GPIOG_BASE)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> GPIOH\t\t((GPIO_TypeDef *)GPIOH_BASE)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*使用定义好的宏直接访问*/</span></span><br><span class=\"line\"><span class=\"comment\">/*访问GPIOB端口的寄存器*/</span></span><br><span class=\"line\">GPIOB-&gt;BASRR = <span class=\"number\">0xFFFF</span>;\t<span class=\"comment\">//通过指针访问并修改GPIOB_BSRR寄存器</span></span><br><span class=\"line\">GPIOB-&gt;CRL = <span class=\"number\">0xFFFF</span>;\t\t<span class=\"comment\">//修改GPIOB_CRL寄存器</span></span><br><span class=\"line\">GPIO-&gt;ODR = <span class=\"number\">0xFFFF</span>;\t\t<span class=\"comment\">//修改GPIOB_ODR寄存器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">uint32_t</span> temp;</span><br><span class=\"line\">temp = GPIOB-&gt;IDR;\t\t<span class=\"comment\">//读取GPIOB_IDR寄存器的值到变量temp中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*访问GPIOA端口的寄存器*/</span></span><br><span class=\"line\">GPIOA-&gt;BSRR = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">GPIOA-&gt;CRL = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">GPIOA-&gt;ODR = <span class=\"number\">0XFFFF</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">uint32_t</span> temp;</span><br><span class=\"line\">temp = GPIOA-&gt;IDR\t\t<span class=\"comment\">//读取GPIOA_IDR寄存器的值到变量temp中</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<p>参考网站：</p>\n<p><a class=\"link\" href=\"https://www.bilibili.com/video/BV1yW411Y7Gw\">【单片机】野火STM32F103教学视频 (配套霸道/指南者/MINI)【全】(刘火良老师出品) (无字幕)_哔哩哔哩_bilibili<i class=\"fas fa-external-link-alt\"></i></a></p>\n<center>暂时就这样，持续更新ing...<center></center>\n\n<p><img src=\"EMT.png\" alt=\"EMT\"></p>\n</center>"}],"PostAsset":[{"_id":"source/_posts/【STM32学习记录】第一节-了解STM32/艾米莉亚1.jpg","slug":"艾米莉亚1.jpg","post":"cl0mpdynw000790v95zy7ho5f","modified":0,"renderable":0},{"_id":"source/_posts/如何搭建自己的Blog/bg.png","slug":"bg.png","post":"cl0mpdynz000990v9bn263agn","modified":0,"renderable":0},{"_id":"source/_posts/如何在网页中居中字体/1647186709290.png","slug":"1647186709290.png","post":"cl0pgvhml000024v9ev4302l8","modified":0,"renderable":0},{"_id":"source/_posts/如何在网页中居中字体/1647186763935.png","slug":"1647186763935.png","post":"cl0pgvhml000024v9ev4302l8","modified":0,"renderable":0},{"_id":"source/_posts/如何在网页中居中字体/672053379f3d2bd8.png","slug":"672053379f3d2bd8.png","post":"cl0pgvhml000024v9ev4302l8","modified":0,"renderable":0},{"_id":"source/_posts/如何在网页中居中字体/emt.jpg","slug":"emt.jpg","post":"cl0pgvhml000024v9ev4302l8","modified":0,"renderable":0},{"_id":"source/_posts/利用Multisim完成李萨如图形仿真/emt.png","slug":"emt.png","post":"cl0tsiyre0000cov90sbm2iy0","modified":0,"renderable":0},{"_id":"source/_posts/【STM32学习记录】第二节-寄存器/EMT.png","slug":"EMT.png","post":"cl14b6wzc00002kv97qftbide","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl0mpdynm000190v92j6e4osn","category_id":"cl0mpdynu000490v9h3ob2wc8","_id":"cl0mpdyo3000d90v9azh44zz3"},{"post_id":"cl0mpdynr000390v93m084pv7","category_id":"cl0mpdyo1000b90v9a1dlavft","_id":"cl0mpdyo4000i90v9avna622y"},{"post_id":"cl0mpdynw000790v95zy7ho5f","category_id":"cl0mpdyo3000e90v94fog15av","_id":"cl0mpdyo5000l90v98a6c0q6v"},{"post_id":"cl0mpdynz000990v9bn263agn","category_id":"cl0mpdyo4000j90v9cpu10rew","_id":"cl0mpdyo5000n90v9egry86e0"},{"post_id":"cl0pgvhml000024v9ev4302l8","category_id":"cl0pgvhmo000124v918wa54b5","_id":"cl0pgvhmq000424v97w5s7gko"},{"post_id":"cl0tsiyre0000cov90sbm2iy0","category_id":"cl0tsiyri0001cov93ajx8nsl","_id":"cl0tsiyrl0004cov96wp07n4o"},{"post_id":"cl14b6wzc00002kv97qftbide","category_id":"cl0mpdyo3000e90v94fog15av","_id":"cl14b6wzf00022kv98sm4fph7"}],"PostTag":[{"post_id":"cl0mpdynm000190v92j6e4osn","tag_id":"cl0mpdynv000590v97ifz5o7m","_id":"cl0mpdyo4000g90v93pyt11ew"},{"post_id":"cl0mpdynm000190v92j6e4osn","tag_id":"cl0mpdyo2000c90v9atqy7nmd","_id":"cl0mpdyo4000h90v91i745cy5"},{"post_id":"cl0mpdynr000390v93m084pv7","tag_id":"cl0mpdyo3000f90v9d52y2ekj","_id":"cl0mpdyo6000p90v92501b1lp"},{"post_id":"cl0mpdynr000390v93m084pv7","tag_id":"cl0mpdyo4000k90v958tueigs","_id":"cl0mpdyo6000q90v9gme76u94"},{"post_id":"cl0mpdynr000390v93m084pv7","tag_id":"cl0mpdyo5000m90v9h880dzyh","_id":"cl0mpdyo6000s90v92egics70"},{"post_id":"cl0mpdynw000790v95zy7ho5f","tag_id":"cl0mpdyo6000o90v90zii3y41","_id":"cl0mpdyo7000v90v9g99c7f1l"},{"post_id":"cl0mpdynw000790v95zy7ho5f","tag_id":"cl0mpdyo6000r90v9h0aweeiu","_id":"cl0mpdyo7000w90v9apfsbtcq"},{"post_id":"cl0mpdynw000790v95zy7ho5f","tag_id":"cl0mpdyo6000t90v9h5b77rsv","_id":"cl0mpdyo7000y90v90jeq63ci"},{"post_id":"cl0mpdynz000990v9bn263agn","tag_id":"cl0mpdynv000590v97ifz5o7m","_id":"cl0mpdyo8001090v95fip3q8v"},{"post_id":"cl0mpdynz000990v9bn263agn","tag_id":"cl0mpdyo7000u90v99r9u5lt9","_id":"cl0mpdyo8001190v94zib3hpa"},{"post_id":"cl0mpdynz000990v9bn263agn","tag_id":"cl0mpdyo7000x90v9bfxl7uid","_id":"cl0mpdyo8001290v9dyia4dnw"},{"post_id":"cl0mpdynz000990v9bn263agn","tag_id":"cl0mpdyo8000z90v98fa993h7","_id":"cl0mpdyo8001390v9di316hus"},{"post_id":"cl0pgvhml000024v9ev4302l8","tag_id":"cl0pgvhmp000224v91y6hfteu","_id":"cl0pgvhmr000524v990n23xt8"},{"post_id":"cl0pgvhml000024v9ev4302l8","tag_id":"cl0pgvhmq000324v909nu30yz","_id":"cl0pgvhmr000624v952lndyto"},{"post_id":"cl0tsiyre0000cov90sbm2iy0","tag_id":"cl0tsiyrj0002cov9eynj9x4t","_id":"cl0tsiyrm0005cov9b5ly9lbb"},{"post_id":"cl0tsiyre0000cov90sbm2iy0","tag_id":"cl0tsiyrl0003cov91o82d3up","_id":"cl0tsiyrm0006cov90hcrbwyo"},{"post_id":"cl14b6wzc00002kv97qftbide","tag_id":"cl0mpdyo6000o90v90zii3y41","_id":"cl14b6wzf00032kv983pj2xot"},{"post_id":"cl14b6wzc00002kv97qftbide","tag_id":"cl14b6wze00012kv91b4eg8wo","_id":"cl14b6wzf00042kv9878nc6vn"}],"Tag":[{"name":"Hexo","_id":"cl0mpdynv000590v97ifz5o7m"},{"name":"Beginning","_id":"cl0mpdyo2000c90v9atqy7nmd"},{"name":"C","_id":"cl0mpdyo3000f90v9d52y2ekj"},{"name":"malloc","_id":"cl0mpdyo4000k90v958tueigs"},{"name":"动态分配","_id":"cl0mpdyo5000m90v9h880dzyh"},{"name":"STM32","_id":"cl0mpdyo6000o90v90zii3y41"},{"name":"C8T6","_id":"cl0mpdyo6000r90v9h0aweeiu"},{"name":"芯片结构","_id":"cl0mpdyo6000t90v9h5b77rsv"},{"name":"Github","_id":"cl0mpdyo7000u90v99r9u5lt9"},{"name":"Vercel","_id":"cl0mpdyo7000x90v9bfxl7uid"},{"name":"Blog","_id":"cl0mpdyo8000z90v98fa993h7"},{"name":"居中","_id":"cl0pgvhmp000224v91y6hfteu"},{"name":"Markdown","_id":"cl0pgvhmq000324v909nu30yz"},{"name":"Multisim","_id":"cl0tsiyrj0002cov9eynj9x4t"},{"name":"李萨如图形","_id":"cl0tsiyrl0003cov91o82d3up"},{"name":"寄存器","_id":"cl14b6wze00012kv91b4eg8wo"}]}}